{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","app/feature/Rooms/components/findRooms/index.tsx","app/feature/Rooms/components/ListRooms/index.tsx","app/feature/Rooms/containers/Rooms/styles.ts","app/feature/Rooms/hoc/ManageRooms.tsx","app/feature/Rooms/containers/Rooms/index.tsx","app/feature/Rooms/pages/Main.tsx","app/core/config/AxiosConfig.ts","app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/Button/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","initialValues","fromDate","untilDate","capacity","withAir","validationSchema","Yup","shape","notRequired","withParking","FindRooms","onSubmit","currentDate","Date","minDate","toISOString","split","React","setFromDate","nextDate","setDate","getDate","auxDate","getNextDate","data-testid","className","values","onReset","resetForm","htmlFor","type","id","min","onChange","e","target","component","aria-label","Button","ListRooms","listRooms","loadDetailRoom","map","data","index","CardInformation","key","DivContainer","styled","div","ManageRooms","connect","state","rooms","listAvailableRooms","listingRoomsAsync","findRoomsFilter","useEffect","MainPage","Layout","title","description","displayName","axiosIntance","axios","create","baseURL","process","timeout","headers","RoomsRepository","get","dataFilter","filterBy","getDataFilter","bookingData","post","roomId","LOAD_ROOM_DETAIL","payload","dispacth","then","response","LIST_ROOMS","FINDED_ROOMS","saveBookingRoom","BOOKING_ROOM_SAVED","onFindBooking","findBookingData","children","Helmet","content","button","CustomField","label","icon","valueText","selectedRoom","hotel","score","src","image","alt","width","height","dataRoom","Link","to","onClick","available_from","available_until","address","ac","wifi","parking","stars","email","identification_type","identification","max","required","ModalFormBook","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","data-bs-dismiss","bookData","roomData","errors","touched","placeholder","as","StarScore","arrStar","fill"],"mappings":"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","file":"static/js/4.d60672ba.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Button } from 'app/shared/components/Button';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { fieldsForm } from '../../models/Room';\r\n\r\nexport interface FindRoomsProps {\r\n  onSubmit: (payload: fieldsForm) => void;\r\n}\r\n\r\nconst initialValues = {\r\n  fromDate: '',\r\n  untilDate: '',\r\n  capacity: '',\r\n  withAir: false,\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<fieldsForm>({\r\n  fromDate: Yup.string().notRequired(),\r\n  untilDate: Yup.string().notRequired(),\r\n  capacity: Yup.string().notRequired(),\r\n  withAir: Yup.boolean().notRequired(),\r\n  withParking: Yup.boolean().notRequired(),\r\n});\r\n\r\nexport const FindRooms: React.FC<FindRoomsProps> = ({ onSubmit }) => {\r\n  const handleSubmit = (values: fieldsForm) => {\r\n    onSubmit({\r\n      fromDate: fromDate,\r\n      untilDate: values.untilDate,\r\n      capacity: values.capacity,\r\n      withAir: values.withAir,\r\n      withParking: values.withParking,\r\n    });\r\n  };\r\n\r\n  const handleReset = (\r\n    values: fieldsForm,\r\n    { resetForm }: FormikHelpers<fieldsForm>\r\n  ) => {\r\n    setFromDate('');\r\n  };\r\n  const currentDate = new Date();\r\n  const minDate = currentDate.toISOString().split('T')[0];\r\n  const [fromDate, setFromDate] = React.useState('');\r\n\r\n  /**\r\n   * Valida la siguiente fecha valida del campo Fecha de salida\r\n   * según la fecha seleccionada en el campo Fecha ingreso\r\n   * @returns fecha mínima del campo Fecha de salida\r\n   */\r\n  const getNextDate = () => {\r\n    if (fromDate === minDate) {\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n      return currentDate.toISOString().split('T')[0];\r\n    } else {\r\n      const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\r\n      auxDate.setDate(auxDate.getDate() + 1);\r\n      return auxDate.toISOString().split('T')[0];\r\n    }\r\n  };\r\n\r\n  const nextDate = getNextDate();\r\n  return (\r\n    <>\r\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\r\n        <div className=\"row\">\r\n          <div className=\"card filter-area \">\r\n            <div className=\"col\">\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n                onReset={handleReset}\r\n              >\r\n                <Form data-testid=\"form-find-rooms\">\r\n                  <div className=\"form-group row mb-3 mt-3\">\r\n                    <label\r\n                      htmlFor=\"fromDate\"\r\n                      className=\"col-12 col-sm-6 col-lg-2 col-form-label\"\r\n                    >\r\n                      Fecha de ingreso\r\n                    </label>\r\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        data-testid=\"form-fromDate\"\r\n                        type=\"date\"\r\n                        name=\"fromDate\"\r\n                        id=\"fromDate\"\r\n                        min={minDate}\r\n                        value={fromDate}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setFromDate(e.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <label\r\n                      htmlFor=\"untilDate\"\r\n                      className=\"col-12  col-sm-6 col-lg-2 col-form-label\"\r\n                    >\r\n                      Fecha de salida\r\n                    </label>\r\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        data-testid=\"form-untilDate\"\r\n                        type=\"date\"\r\n                        name=\"untilDate\"\r\n                        id=\"untilDate\"\r\n                        min={nextDate}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row mb-4\">\r\n                    <div className=\"d-flex col-12 col-sm-6 col-lg-4 text-center\">\r\n                      <label className=\"pr-2\" htmlFor=\"capacity\">\r\n                        Personas\r\n                      </label>\r\n                      <Field\r\n                        component=\"select\"\r\n                        className=\" filter-select\"\r\n                        data-testid=\"form-capacity\"\r\n                        aria-label=\".form-select-sm example\"\r\n                        id=\"capacity\"\r\n                        name=\"capacity\"\r\n                      >\r\n                        <option value=\"\">Seleccione</option>\r\n                        <option value=\"1\">1 adulto</option>\r\n                        <option value=\"2\">2 adultos</option>\r\n                        <option value=\"3\">3 adultos</option>\r\n                        <option value=\"4\">4 adultos</option>\r\n                      </Field>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-6 col-lg-4 text-md-center \">\r\n                      <Field\r\n                        type=\"checkbox\"\r\n                        className=\"m-2\"\r\n                        data-testid=\"form-withAir\"\r\n                        aria-label=\"Checkbox find room with air\"\r\n                        name=\"withAir\"\r\n                        id=\"withAir\"\r\n                      />\r\n                      <label className=\"cursor-pointer\" htmlFor=\"withAir\">\r\n                        ¿Aire acondicionado?\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 mt-sm-2 mt-md-0\">\r\n                      <Field\r\n                        type=\"checkbox\"\r\n                        className=\"m-2\"\r\n                        data-testid=\"form-withParking\"\r\n                        aria-label=\"Checkbox  find room with parking\"\r\n                        name=\"withParking\"\r\n                        id=\"withParking\"\r\n                      />\r\n                      <label className=\"cursor-pointer\" htmlFor=\"withParking\">\r\n                        ¿Parqueadero?\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center mt-5\">\r\n                    <Button\r\n                      className=\" w-50\"\r\n                      data-testid=\"form-button-find\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Encuentralo!\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"text-center mb-4 mt-1\">\r\n                    <Button\r\n                      className=\"button-link\"\r\n                      data-testid=\"form-button-reset\"\r\n                      type=\"reset\"\r\n                    >\r\n                      limpiar\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFindRooms.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { CardInformation } from 'app/shared/components/CardInformation';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\n// import { FindRooms, fieldsForm } from '../findRooms';\r\nimport { IRoom } from '../../models/Room';\r\n\r\nexport interface ListRoomsProps {\r\n  /**\r\n   * Lista de habitaciones\r\n   */\r\n  listRooms: Array<IRoom>;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom: (roomId: number) => void;\r\n}\r\n\r\nexport const ListRooms: React.FC<ListRoomsProps> = ({\r\n  listRooms,\r\n  loadDetailRoom,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div data-testid=\"list-rooms\" className=\"card-rooms\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col\">\r\n            {listRooms &&\r\n              listRooms.length > 0 &&\r\n              listRooms.map((data, index) => {\r\n                return (\r\n                  <CardInformation\r\n                    key={index}\r\n                    data={data}\r\n                    loadDetailRoom={loadDetailRoom}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nListRooms.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  loadDetailRoom: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import {\r\n  findRoomsFilter,\r\n  listingRoomsAsync,\r\n  loadDetailRoom,\r\n} from 'app/core/redux/actions/rooms/ActionsRooms';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Rooms } from '../containers/Rooms';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return { listRooms: state.rooms.listRooms };\r\n};\r\n\r\nexport const ManageRooms = connect(mapStateToProps, {\r\n  listAvailableRooms: listingRoomsAsync,\r\n  findRoomsFilter,\r\n  loadDetailRoom,\r\n})(Rooms);\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { FindRooms } from '../../components/findRooms';\r\nimport { ListRooms } from '../../components/ListRooms';\r\nimport { fieldsForm, IRoom } from '../../models/Room';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface RoomsProps {\r\n  listRooms: Array<IRoom>;\r\n  listAvailableRooms: () => void;\r\n  findRoomsFilter: (data: fieldsForm) => void;\r\n  loadDetailRoom: (roomId: number) => void;\r\n}\r\n\r\nexport const Rooms: React.FC<RoomsProps> = ({\r\n  listRooms,\r\n  listAvailableRooms,\r\n  findRoomsFilter,\r\n  loadDetailRoom,\r\n}) => {\r\n  useEffect(() => {\r\n    if (listRooms && listRooms.length === 0) {\r\n      listAvailableRooms();\r\n    }\r\n  }, [listRooms, listAvailableRooms]);\r\n\r\n  return (\r\n    <DivContainer data-testid=\"room\">\r\n      <FindRooms onSubmit={findRoomsFilter} />\r\n      <ListRooms listRooms={listRooms} loadDetailRoom={loadDetailRoom} />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nRooms.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  listAvailableRooms: PropTypes.func.isRequired,\r\n  findRoomsFilter: PropTypes.func.isRequired,\r\n  loadDetailRoom: PropTypes.func.isRequired,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageRooms } from '../hoc/ManageRooms';\r\n\r\nconst MainPage: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Layout title=\"Habitaciones\" description=\"Encuentra tu habitación\">\r\n      <ManageRooms />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMainPage.displayName = 'HomeMainPage';\r\n\r\nexport default MainPage;\r\n","import axios from 'axios';\r\n\r\nexport const axiosIntance = axios.create({\r\n  baseURL: process.env.REACT_APP_URL_BASE,\r\n  timeout: 30000,\r\n  headers: { 'X-Custom-Header': 'foobar' },\r\n});\r\n","import { BookingData, fieldsForm } from 'app/feature/Rooms/models/Room';\r\n\r\nimport { axiosIntance } from '../config/AxiosConfig';\r\n\r\n// const NUMERO_REGISTROS = 10;\r\n// const limit = (count: number, p: number) =>\r\n//   `limit=${count}&offset=${p ? p * count : 0}`;\r\n\r\nconst getDataFilter = (data: fieldsForm) => {\r\n  let filterBy = '?';\r\n  if (data.fromDate) {\r\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\r\n  }\r\n  if (data.untilDate) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\r\n      data.untilDate\r\n    }`;\r\n  }\r\n  if (data.capacity) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\r\n      data.capacity\r\n    }`;\r\n  }\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\r\n    data.withAir && data.withAir === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\r\n    data.withParking && data.withParking === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  return filterBy;\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const RoomsRepository = {\r\n  findAllRooms: () => axiosIntance.get('/rooms'),\r\n  findFilterRooms: (dataFilter: fieldsForm) =>\r\n    axiosIntance.get(`/rooms${getDataFilter(dataFilter)}`),\r\n  saveBookingRoom: (bookingData: BookingData) =>\r\n    axiosIntance.post('/booking', bookingData, {\r\n      headers: headers,\r\n    }),\r\n};\r\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\r\nimport {\r\n  BookingData,\r\n  fieldsForm,\r\n  fieldsFormFindBooking,\r\n  IRoom,\r\n} from 'app/feature/Rooms/models/Room';\r\n\r\nimport {\r\n  ActionTypesRooms,\r\n  BOOKING_ROOM_SAVED,\r\n  FINDED_ROOMS,\r\n  LIST_ROOMS,\r\n  LOAD_ROOM_DETAIL,\r\n} from './ActionTypesRooms';\r\n\r\nexport function listingRooms(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: LIST_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function roomsFiltered(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: FINDED_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function loadDetailRoom(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: LOAD_ROOM_DETAIL,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function bookingRoomSaved(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: BOOKING_ROOM_SAVED,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function listingRoomsAsync() {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findAllRooms().then((response: any) => {\r\n      return dispacth(listingRooms(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function findRoomsFilter(dataFilter: fieldsForm) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findFilterRooms(dataFilter).then((response: any) => {\r\n      return dispacth(roomsFiltered(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function saveBookingRoom(bookingData: BookingData) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n      return dispacth(bookingRoomSaved(response.data.id));\r\n    });\r\n  };\r\n}\r\n\r\nexport function onFindBooking(findBookingData: fieldsFormFindBooking) {\r\n  return function (dispacth: any) {\r\n    return null;\r\n    // RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n    //   return dispacth(bookingRoomSaved(response.data.id));\r\n    // });\r\n  };\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface LayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<LayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: #ffea00;\r\n  border-radius: 10px;\r\n  color: #000;\r\n  height: auto;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\ninterface CustomFieldProps {\r\n  /**\r\n   * Título del campo\r\n   */\r\n  label: string;\r\n  /**\r\n   * Icono a mostrar\r\n   */\r\n  icon: string;\r\n  /**\r\n   * Indica si cuenta o no con la propiedad\r\n   */\r\n  value?: boolean;\r\n  /**\r\n   * Valor de la propiedad en texto\r\n   */\r\n  valueText?: string;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\r\n * @param param0\r\n * @returns Sección con item y valor de la habitación\r\n */\r\nexport const CustomField: React.FC<CustomFieldProps> = ({\r\n  label,\r\n  icon,\r\n  value,\r\n  valueText,\r\n}) => {\r\n  return (\r\n    <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\r\n      {label} <i className={`fas ${icon}`}></i> :{' '}\r\n      {valueText && valueText !== '' ? (\r\n        <span data-testid=\"custom-field-value-text\">{valueText}</span>\r\n      ) : value !== undefined && value === true ? (\r\n        <i className=\"fas fa-check\" data-testid=\"custom-field-value-true\"></i>\r\n      ) : (\r\n        <i className=\"fas fa-times\" data-testid=\"custom-field-value-false\"></i>\r\n      )}\r\n    </h6>\r\n  );\r\n};\r\n\r\nCustomField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  valueText: PropTypes.string,\r\n};\r\n","import { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  BookingData,\r\n  fieldsFormBooking,\r\n  IRoom,\r\n} from '../../../feature/Rooms/models/Room';\r\nimport { CustomField } from '../CustomFieldIcon';\r\nimport { Link } from '../Link';\r\n\r\ninterface CardInformationProps {\r\n  /**\r\n   * Información de cada habitación\r\n   */\r\n  data: IRoom;\r\n  /**\r\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\r\n   */\r\n  selectedRoom?: number;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom?: (roomId: number) => void;\r\n  /**\r\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\r\n   */\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar Card con información de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const CardInformation: React.FC<CardInformationProps> = ({\r\n  data,\r\n  loadDetailRoom,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <div data-testid=\"card-information\" className=\"card room-item\">\r\n      <div className=\"card-header room-item-header \">\r\n        <h3>{data.hotel.name}</h3>\r\n        <h4>{data.hotel.score}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img\r\n              src={data.image}\r\n              className=\"img-fluid\"\r\n              alt=\"hotel room\"\r\n              width=\"260px\"\r\n              height=\"180px\"\r\n            />\r\n          </div>\r\n          <div className=\"col col-md-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <h5 className=\"card-title\">{data.title}</h5>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4\">\r\n                {selectedRoom && selectedRoom !== -1 ? (\r\n                  <>\r\n                    <ModalFormBook\r\n                      saveBookingRoom={saveBookingRoom}\r\n                      dataRoom={data}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Link to={'/rooms/detail'}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-book w-100\"\r\n                      data-testid=\"form-button-load-detail\"\r\n                      onClick={() => loadDetailRoom && loadDetailRoom(data.id)}\r\n                    >\r\n                      <i className=\"far fa-calendar-check ml-3\"></i>\r\n                      {' Seleccionar'}\r\n                    </button>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-12\">\r\n                <h4>\r\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 d-flex\">\r\n                <CustomField\r\n                  label={'Inicio'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_from}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'-  Fin'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_until}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\">{data.description}</p>\r\n            {selectedRoom && selectedRoom !== -1 && (\r\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\r\n                <p className=\"card-text\">{data.hotel.description}</p>\r\n                <CustomField\r\n                  label={'Dirección'}\r\n                  icon=\"fa-map-marked-alt\"\r\n                  valueText={`${data.hotel.address}`}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Camas'}\r\n                  icon=\"fa-bed\"\r\n                  valueText={`${data.capacity}`}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Aire'}\r\n                  icon=\"fa-wind\"\r\n                  value={data.ac === 'Y'}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Wifi'}\r\n                  icon=\"fa-wifi\"\r\n                  value={data.wifi === 'Y'}\r\n                />\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Parqueadero'}\r\n                  icon=\"fa-car\"\r\n                  value={data.parking === 'Y'}\r\n                />\r\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\r\n\r\n                {selectedRoom && selectedRoom !== -1 && (\r\n                  <StarScore score={data.hotel.stars} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardInformation.propTypes = {\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    hotel: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      address: PropTypes.string.isRequired,\r\n      stars: PropTypes.number.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      score: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    ac: PropTypes.string.isRequired,\r\n    parking: PropTypes.string.isRequired,\r\n    available_from: PropTypes.string.isRequired,\r\n    available_until: PropTypes.string.isRequired,\r\n    wifi: PropTypes.string.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  selectedRoom: PropTypes.number,\r\n  loadDetailRoom: PropTypes.func,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface ModalFormBookProps {\r\n  /**\r\n   * Información de la reserva a registrar\r\n   */\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n  /**\r\n   * Información de la habitación\r\n   */\r\n  dataRoom: IRoom;\r\n}\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<fieldsFormBooking>({\r\n  name: Yup.string()\r\n    .min(2, 'Nombre muy corto')\r\n    .max(50, 'Nombre muy largo')\r\n    .required('Nacesitamos tu nombre'),\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n});\r\n\r\n/**\r\n * Componente encargado de renderizar el modal con el formulario de reservación\r\n * de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nconst ModalFormBook: React.FC<ModalFormBookProps> = ({\r\n  saveBookingRoom,\r\n  dataRoom,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: fieldsFormBooking,\r\n    { resetForm }: FormikHelpers<fieldsFormBooking>\r\n  ) => {\r\n    saveBookingRoom &&\r\n      saveBookingRoom({\r\n        bookData: {\r\n          name: values.name,\r\n          email: values.email,\r\n          identification_type: values.identification_type,\r\n          identification: values.identification,\r\n        },\r\n        roomData: dataRoom,\r\n      });\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div data-testid=\"modal-form-book\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-book w-100\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#modalFormBook\"\r\n        >\r\n          <i className=\"far fa-calendar-check ml-3\"></i>\r\n          {' Reservar'}\r\n        </button>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modalFormBook\"\r\n          aria-labelledby=\"modalFormBookLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\r\n                  Completa tu reserva\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Nombre\r\n                          </label>\r\n                          <Field\r\n                            name=\"name\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: Joe Doe\"\r\n                          />\r\n                          {errors.name && touched.name ? (\r\n                            <small className=\"text-danger\">{errors.name}</small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Correo electrónico\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: joe@email.com\"\r\n                          />\r\n                          {errors.email && touched.email ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.email}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                            Tipo de identificación\r\n                          </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\" d-block w-100\"\r\n                            aria-label=\".form-select-sm example\"\r\n                            id=\"identification_type\"\r\n                            name=\"identification_type\"\r\n                          >\r\n                            <option value=\"\">Seleccione</option>\r\n                            <option value=\"1\">Cédula de ciudadanía</option>\r\n                            <option value=\"2\">Cédula de extranjeria</option>\r\n                            <option value=\"3\">Nit</option>\r\n                            <option value=\"4\">Pasaporte</option>\r\n                          </Field>\r\n                          {errors.identification_type &&\r\n                          touched.identification_type ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification_type}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label className=\"pr-2\" htmlFor=\"identification\">\r\n                            Identificación\r\n                          </label>\r\n                          <Field\r\n                            name=\"identification\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"eje: 60830147\"\r\n                          />\r\n                          {errors.identification && touched.identification ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between mt-3\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                        >\r\n                          Cancelar\r\n                        </button>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Finalizar\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalFormBook.propTypes = {\r\n  dataRoom: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    hotel: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      address: PropTypes.string.isRequired,\r\n      stars: PropTypes.number.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      score: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    ac: PropTypes.string.isRequired,\r\n    parking: PropTypes.string.isRequired,\r\n    available_from: PropTypes.string.isRequired,\r\n    available_until: PropTypes.string.isRequired,\r\n    wifi: PropTypes.string.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\n/**\r\n * Componente encargado de renderizar estrellas según el nivel del hotel\r\n */\r\nconst StarScore: React.FC<StarScoreProps> = ({ score }) => {\r\n  const arrStar = new Array(score);\r\n  arrStar.fill('star', 0);\r\n  return (\r\n    <>\r\n      <div data-testid=\"star-score\">\r\n        {score &&\r\n          arrStar.map((data, index) => (\r\n            <i key={index} className=\"fas fa-star\"></i>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface StarScoreProps {\r\n  /**\r\n   * Cantidad de estrellas del hotel\r\n   */\r\n  score: number;\r\n}\r\n\r\nStarScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n"],"sourceRoot":""}