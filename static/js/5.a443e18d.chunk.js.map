{"version":3,"sources":["app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/feature/Rooms/components/findRooms/index.tsx","app/feature/Rooms/components/ListRooms/index.tsx","app/feature/Rooms/containers/Rooms/styles.ts","app/feature/Rooms/hoc/ManageRooms.tsx","app/feature/Rooms/containers/Rooms/index.tsx","app/feature/Rooms/pages/MainPage.tsx","app/core/config/AxiosConfig.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/shared/components/Button/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["RoomsRepository","axiosIntance","get","dataFilter","data","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","listingRooms","rooms","type","LIST_ROOMS","payload","initialValues","validationSchema","Yup","shape","notRequired","FindRooms","onSubmit","listAvailableRooms","currentDate","Date","minDate","toISOString","split","React","setFromDate","nextDate","setDate","getDate","auxDate","getNextDate","data-testid","className","values","onReset","resetForm","htmlFor","name","id","min","value","required","onChange","e","target","component","aria-label","Button","ListRooms","listRooms","loadDetailRoom","length","map","index","CardInformation","key","DivContainer","styled","div","ManageRooms","connect","state","dispacth","then","response","catch","err","findRoomsFilter","roomId","LOAD_ROOM_DETAIL","MainPage","Layout","title","description","displayName","axios","create","baseURL","process","timeout","headers","children","Helmet","content","CustomField","label","icon","valueText","valueParse","undefined","selectedRoom","saveBookingRoom","hotel","score","src","image","alt","width","height","dataRoom","Link","to","onClick","available_from","available_until","address","ac","wifi","parking","stars","email","identification_type","identification","max","ModalFormBook","hideModal","$","modal","data-bs-toggle","data-bs-target","aria-labelledby","data-bs-dismiss","bookData","roomData","errors","touched","placeholder","as","StarScore","arrStar","Array","fill","button","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/5.a443e18d.chunk.js","sourcesContent":["import { IFieldsForm } from 'app/feature/Rooms/models/Room';\n\nimport { axiosIntance } from '../config/AxiosConfig';\n\n/**\n * Función encargad de armar los filtros para la obtención de hoteles/habitaciones\n * @param data\n * @returns cadena filtro\n */\nconst getDataFilter = (data: IFieldsForm) => {\n  let filterBy = '?';\n  if (data.fromDate) {\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\n  }\n  if (data.untilDate) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\n      data.untilDate\n    }`;\n  }\n  if (data.capacity) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\n      data.capacity\n    }`;\n  }\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\n    data.withAir && data.withAir === true ? 'Y' : 'N'\n  }`;\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\n    data.withParking && data.withParking === true ? 'Y' : 'N'\n  }`;\n\n  return filterBy;\n};\n\n/**\n * Función encargada de armar los filtros en la búsqueda de la reserva\n * @param filterData\n * @returns cadena filtro\n */\n\nexport const RoomsRepository = {\n  /**\n   * Obtiene todas los hoteles/habitaciones disponibles\n   * @returns arreglo de habitaciones\n   */\n  findAllRooms: () => axiosIntance.get('/rooms'),\n  /**\n   * Obtiene todas los hoteles/habitaciones disponibles según los filtros\n   * @param dataFilter filtros a aplicar\n   * @returns arreglo de habitaciones\n   */\n  findFilterRooms: (dataFilter: IFieldsForm) =>\n    axiosIntance.get(`/rooms${getDataFilter(dataFilter)}`),\n};\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\nimport { IFieldsForm, IRoom } from 'app/feature/Rooms/models/Room';\n\nimport {\n  DEFAULT_STATE,\n  IActionTypesRooms,\n  LIST_ROOMS,\n  LOAD_ROOM_DETAIL,\n} from './ActionTypesRooms';\n\nexport function defaultState(id: number): IActionTypesRooms {\n  return {\n    type: DEFAULT_STATE,\n    payload: id,\n  };\n}\n\nexport function listingRooms(rooms: Array<IRoom>): IActionTypesRooms {\n  return {\n    type: LIST_ROOMS,\n    payload: rooms,\n  };\n}\n\nexport function loadDetailRoom(roomId: number): IActionTypesRooms {\n  return {\n    type: LOAD_ROOM_DETAIL,\n    payload: roomId,\n  };\n}\n\nexport function listingRoomsAsync() {\n  return function (dispacth: any) {\n    RoomsRepository.findAllRooms()\n      .then((response: any) => {\n        return dispacth(listingRooms(response.data));\n      })\n      .catch((err) => {\n        return dispacth(listingRooms([]));\n      });\n  };\n}\n\nexport function findRoomsFilter(dataFilter: IFieldsForm) {\n  return function (dispacth: any) {\n    RoomsRepository.findFilterRooms(dataFilter)\n      .then((response: any) => {\n        return dispacth(listingRooms(response.data));\n      })\n      .catch((err) => {\n        return dispacth(listingRooms([]));\n      });\n  };\n}\n","import { Button } from 'app/shared/components/Button';\nimport { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport { IFieldsForm } from '../../models/Room';\n\nexport interface IFindRoomsProps {\n  onSubmit: (payload: IFieldsForm) => void;\n  listAvailableRooms: () => void;\n}\n\nconst initialValues = {\n  fromDate: '',\n  untilDate: '',\n  capacity: '',\n  withAir: false,\n};\n\nconst validationSchema = Yup.object().shape<IFieldsForm>({\n  fromDate: Yup.string().notRequired(),\n  untilDate: Yup.string().notRequired(),\n  capacity: Yup.string().notRequired(),\n  withAir: Yup.boolean().notRequired(),\n  withParking: Yup.boolean().notRequired(),\n});\n\nexport const FindRooms: React.FC<IFindRoomsProps> = ({\n  onSubmit,\n  listAvailableRooms,\n}) => {\n  const handleSubmit = (values: IFieldsForm) => {\n    onSubmit({\n      fromDate: fromDate,\n      untilDate: values.untilDate,\n      capacity: values.capacity,\n      withAir: values.withAir,\n      withParking: values.withParking,\n    });\n  };\n\n  const handleReset = (\n    values: IFieldsForm,\n    { resetForm }: FormikHelpers<IFieldsForm>\n  ) => {\n    setFromDate('');\n    listAvailableRooms();\n  };\n  const currentDate = new Date();\n  const minDate = currentDate.toISOString().split('T')[0];\n  const [fromDate, setFromDate] = React.useState('');\n\n  /**\n   * Valida la siguiente fecha valida del campo Fecha de salida\n   * según la fecha seleccionada en el campo Fecha ingreso\n   * @returns fecha mínima del campo Fecha de salida\n   */\n  const getNextDate = () => {\n    if (fromDate === minDate) {\n      currentDate.setDate(currentDate.getDate() + 1);\n      return currentDate.toISOString().split('T')[0];\n    } else {\n      const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\n      auxDate.setDate(auxDate.getDate() + 1);\n      return auxDate.toISOString().split('T')[0];\n    }\n  };\n\n  const nextDate = getNextDate();\n  return (\n    <>\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\n        <div className=\"row\">\n          <div className=\"card filter-area \">\n            <div className=\"col\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n                onReset={handleReset}\n              >\n                <Form data-testid=\"form-find-rooms\">\n                  <div className=\"form-group row mb-3 mt-3\">\n                    <label\n                      htmlFor=\"fromDate\"\n                      className=\"col-12 col-sm-6 col-lg-2 col-form-label\"\n                    >\n                      Fecha de ingreso*\n                    </label>\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\n                      <Field\n                        className=\"form-control\"\n                        data-testid=\"form-fromDate\"\n                        type=\"date\"\n                        name=\"fromDate\"\n                        id=\"fromDate\"\n                        min={minDate}\n                        value={fromDate}\n                        required\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setFromDate(e.target.value);\n                        }}\n                      />\n                    </div>\n                    <label\n                      htmlFor=\"untilDate\"\n                      className=\"col-12  col-sm-6 col-lg-2 col-form-label\"\n                    >\n                      Fecha de salida*\n                    </label>\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\n                      <Field\n                        className=\"form-control\"\n                        data-testid=\"form-untilDate\"\n                        type=\"date\"\n                        name=\"untilDate\"\n                        id=\"untilDate\"\n                        required\n                        min={nextDate}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"row mb-4\">\n                    <div className=\"d-flex col-12 col-sm-6 col-lg-4 text-center\">\n                      <label className=\"pr-2\" htmlFor=\"capacity\">\n                        Personas\n                      </label>\n                      <Field\n                        component=\"select\"\n                        className=\" filter-select\"\n                        data-testid=\"form-capacity\"\n                        aria-label=\".form-select-sm example\"\n                        id=\"capacity\"\n                        name=\"capacity\"\n                      >\n                        <option value=\"\">Seleccione</option>\n                        <option value=\"1\">1 adulto</option>\n                        <option value=\"2\">2 adultos</option>\n                        <option value=\"3\">3 adultos</option>\n                        <option value=\"4\">4 adultos</option>\n                      </Field>\n                    </div>\n\n                    <div className=\"col-12 col-sm-6 col-lg-4 text-md-center \">\n                      <Field\n                        type=\"checkbox\"\n                        className=\"m-2\"\n                        data-testid=\"form-withAir\"\n                        aria-label=\"Checkbox find room with air\"\n                        name=\"withAir\"\n                        id=\"withAir\"\n                      />\n                      <label className=\"cursor-pointer\" htmlFor=\"withAir\">\n                        ¿Aire acondicionado?\n                      </label>\n                    </div>\n\n                    <div className=\"col-12 col-lg-4 mt-sm-2 mt-md-0\">\n                      <Field\n                        type=\"checkbox\"\n                        className=\"m-2\"\n                        data-testid=\"form-withParking\"\n                        aria-label=\"Checkbox  find room with parking\"\n                        name=\"withParking\"\n                        id=\"withParking\"\n                      />\n                      <label className=\"cursor-pointer\" htmlFor=\"withParking\">\n                        ¿Parqueadero?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"text-center mt-5\">\n                    <Button\n                      className=\" w-50\"\n                      data-testid=\"form-button-find\"\n                      type=\"submit\"\n                    >\n                      Encuentralo!\n                    </Button>\n                  </div>\n                  <div className=\"text-center mb-4 mt-1\">\n                    <Button\n                      className=\"button-link\"\n                      data-testid=\"form-button-reset\"\n                      type=\"reset\"\n                    >\n                      limpiar\n                    </Button>\n                  </div>\n                </Form>\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nFindRooms.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  listAvailableRooms: PropTypes.func.isRequired,\n};\n","import { CardInformation } from 'app/shared/components/CardInformation';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IRoom } from '../../models/Room';\n\nexport interface IListRoomsProps {\n  /**\n   * Lista de habitaciones\n   */\n  listRooms: Array<IRoom>;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom: (roomId: number) => void;\n}\n\nexport const ListRooms: React.FC<IListRoomsProps> = ({\n  listRooms,\n  loadDetailRoom,\n}) => {\n  return (\n    <>\n      <div data-testid=\"list-rooms\" className=\"card-rooms\">\n        <div className=\"row pt-5\">\n          <div className=\"col\">\n            {listRooms &&\n              listRooms.length > 0 &&\n              listRooms.map((data, index) => {\n                return (\n                  <CardInformation\n                    key={index}\n                    data={data}\n                    loadDetailRoom={loadDetailRoom}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nListRooms.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  loadDetailRoom: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import {\n  findRoomsFilter,\n  listingRoomsAsync,\n  loadDetailRoom,\n} from 'app/core/redux/actions/rooms/ActionsRooms';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { Rooms } from '../containers/Rooms';\n\nconst mapStateToProps = (state: Istate) => {\n  return { listRooms: state.rooms.listRooms };\n};\n\nexport const ManageRooms = connect(mapStateToProps, {\n  listAvailableRooms: listingRoomsAsync,\n  findRoomsFilter,\n  loadDetailRoom,\n})(Rooms);\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FindRooms } from '../../components/findRooms';\nimport { ListRooms } from '../../components/ListRooms';\nimport { IFieldsForm, IRoom } from '../../models/Room';\nimport { DivContainer } from './styles';\n\ninterface RoomsProps {\n  listRooms: Array<IRoom>;\n  listAvailableRooms: () => void;\n  findRoomsFilter: (data: IFieldsForm) => void;\n  loadDetailRoom: (roomId: number) => void;\n}\n\nexport const Rooms: React.FC<RoomsProps> = ({\n  listRooms,\n  listAvailableRooms,\n  findRoomsFilter,\n  loadDetailRoom,\n}) => {\n  React.useEffect(() => {\n    if (listRooms && listRooms.length === 0) {\n      listAvailableRooms();\n    }\n  }, [listRooms, listAvailableRooms]);\n\n  return (\n    <DivContainer data-testid=\"room\">\n      <FindRooms\n        onSubmit={findRoomsFilter}\n        listAvailableRooms={listAvailableRooms}\n      />\n      <ListRooms listRooms={listRooms} loadDetailRoom={loadDetailRoom} />\n    </DivContainer>\n  );\n};\n\nRooms.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  listAvailableRooms: PropTypes.func.isRequired,\n  findRoomsFilter: PropTypes.func.isRequired,\n  loadDetailRoom: PropTypes.func.isRequired,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageRooms } from '../hoc/ManageRooms';\n\nconst MainPage: React.FC<RouteComponentProps> = () => {\n  return (\n    <Layout title=\"Habitaciones\" description=\"Encuentra tu habitación\">\n      <ManageRooms />\n    </Layout>\n  );\n};\n\nMainPage.displayName = 'HomeMainPage';\n\nexport default MainPage;\n","import axios from 'axios';\n\nexport const axiosIntance = axios.create({\n  baseURL: process.env.REACT_APP_URL_BASE,\n  timeout: 30000,\n  headers: { 'X-Custom-Header': 'foobar' },\n});\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\ninterface ICustomFieldProps {\n  /**\n   * Título del campo\n   */\n  label: string;\n  /**\n   * Icono a mostrar\n   */\n  icon: string;\n  /**\n   * Indica si cuenta o no con la propiedad\n   */\n  value?: boolean;\n  /**\n   * Valor de la propiedad en texto\n   */\n  valueText?: string;\n}\n\n/**\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\n * @param param0\n * @returns Sección con item y valor de la habitación\n */\nexport const CustomField: React.FC<ICustomFieldProps> = ({\n  label,\n  icon,\n  value,\n  valueText,\n}) => {\n  const valueParse = value !== undefined && value === true;\n  return (\n    <>\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\n        {label} <i className={`fas ${icon}`}></i> :{' '}\n        {valueText && valueText !== '' ? (\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\n        ) : (\n          <i\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\n          ></i>\n        )}\n      </h6>\n    </>\n  );\n};\n\nCustomField.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  valueText: PropTypes.string,\n};\n","import { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  IBooking,\n  IFieldsFormBooking,\n} from '../../../feature/Book/models/Booking';\nimport { IRoom } from '../../../feature/Rooms/models/Room';\nimport { CustomField } from '../CustomFieldIcon';\nimport { Link } from '../Link';\nimport { roomShape } from './model';\n\ninterface ICardInformationProps {\n  /**\n   * Información de cada habitación\n   */\n  data: IRoom;\n  /**\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\n   */\n  selectedRoom?: number;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom?: (roomId: number) => void;\n  /**\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\n/**\n * Componente encargado de renderizar Card con información de la habitación\n * @param param0\n * @returns\n */\nexport const CardInformation: React.FC<ICardInformationProps> = ({\n  data,\n  loadDetailRoom,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <div data-testid=\"card-information\" className=\"card room-item\">\n      <div className=\"card-header room-item-header \">\n        <h3>{data.hotel.name}</h3>\n        <h4>{data.hotel.score}</h4>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col col-md-4\">\n            <img\n              src={data.image}\n              className=\"img-fluid\"\n              alt=\"hotel room\"\n              width=\"260px\"\n              height=\"180px\"\n            />\n          </div>\n          <div className=\"col col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-8\">\n                <h5 className=\"card-title\">{data.title}</h5>\n              </div>\n              <div className=\"col-12 col-lg-4\">\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\n                  <>\n                    <ModalFormBook\n                      saveBookingRoom={saveBookingRoom}\n                      dataRoom={data}\n                    />\n                  </>\n                ) : (\n                  loadDetailRoom && (\n                    <Link to={'/rooms/detail'}>\n                      <button\n                        type=\"button\"\n                        id=\"btn-select-detail\"\n                        className=\"btn btn-primary btn-book w-100\"\n                        data-testid=\"form-button-load-detail\"\n                        onClick={() =>\n                          loadDetailRoom && loadDetailRoom(data.id)\n                        }\n                      >\n                        <i className=\"far fa-calendar-check ml-3\"></i>\n                        {' Seleccionar'}\n                      </button>\n                    </Link>\n                  )\n                )}\n              </div>\n              <div className=\"col-12 col-md-12\">\n                <h4>\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\n                </h4>\n              </div>\n              <div className=\"col-12 col-md-12 d-flex\">\n                <CustomField\n                  label={'Inicio'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_from}\n                />\n\n                <CustomField\n                  label={'-  Fin'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_until}\n                />\n              </div>\n            </div>\n            <p className=\"card-text\">{data.description}</p>\n            {selectedRoom && selectedRoom !== -1 && (\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\n                <p className=\"card-text\">{data.hotel.description}</p>\n                <CustomField\n                  label={'Dirección'}\n                  icon=\"fa-map-marked-alt\"\n                  valueText={`${data.hotel.address}`}\n                />\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Camas'}\n                  icon=\"fa-bed\"\n                  valueText={`${data.capacity}`}\n                />\n\n                <CustomField\n                  label={'Aire'}\n                  icon=\"fa-wind\"\n                  value={data.ac === 'Y'}\n                />\n\n                <CustomField\n                  label={'Wifi'}\n                  icon=\"fa-wifi\"\n                  value={data.wifi === 'Y'}\n                />\n              </div>\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Parqueadero'}\n                  icon=\"fa-car\"\n                  value={data.parking === 'Y'}\n                />\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\n\n                {selectedRoom && selectedRoom !== -1 && (\n                  <StarScore score={data.hotel.stars} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardInformation.propTypes = {\n  data: PropTypes.shape(roomShape).isRequired,\n  selectedRoom: PropTypes.number,\n  loadDetailRoom: PropTypes.func,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IModalFormBookProps {\n  /**\n   * Información de la reserva a registrar\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Información de la habitación\n   */\n  dataRoom: IRoom;\n}\n\nconst initialValues = {\n  name: '',\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\n  name: Yup.string()\n    .min(2, 'Nombre muy corto')\n    .max(50, 'Nombre muy largo')\n    .required('Nacesitamos tu nombre'),\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n});\n\n/**\n * Componente encargado de renderizar el modal con el formulario de reservación\n * de la habitación\n * @param param0\n * @returns\n */\nconst ModalFormBook: React.FC<IModalFormBookProps> = ({\n  saveBookingRoom,\n  dataRoom,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormBooking,\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\n  ) => {\n    saveBookingRoom &&\n      saveBookingRoom({\n        bookData: {\n          name: values.name,\n          email: values.email,\n          identification_type: values.identification_type,\n          identification: values.identification,\n        },\n        roomData: dataRoom,\n      });\n    hideModal();\n    resetForm();\n  };\n\n  const hideModal = () => {\n    $('#modalFormBook').modal('hide');\n  };\n  return (\n    <>\n      <div data-testid=\"modal-form-book\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-book w-100\"\n          data-testid=\"form-detail-button-book\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#modalFormBook\"\n        >\n          <i className=\"far fa-calendar-check ml-3\"></i>\n          {' Reservar'}\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"modalFormBook\"\n          aria-labelledby=\"modalFormBookLabel\"\n          data-testid=\"modal-book\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\n                  Completa tu reserva\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                >\n                  {({ errors, touched }) => (\n                    <Form data-testid=\"modal-book-form\">\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Nombre\n                          </label>\n                          <Field\n                            name=\"name\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: Joe Doe\"\n                            data-testid=\"modal-book-form-name\"\n                          />\n                          {errors.name && touched.name ? (\n                            <small className=\"text-danger\">{errors.name}</small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Correo electrónico\n                          </label>\n                          <Field\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control col-12\"\n                            data-testid=\"modal-book-form-email\"\n                            placeholder=\"eje: joe@email.com\"\n                          />\n                          {errors.email && touched.email ? (\n                            <small className=\"text-danger\">\n                              {errors.email}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-2\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\n                            Tipo de identificación\n                          </label>\n                          <Field\n                            as=\"select\"\n                            className=\" d-block w-100\"\n                            aria-label=\".form-select-sm example\"\n                            id=\"identification_type\"\n                            name=\"identification_type\"\n                            data-testid=\"modal-book-form-identification-type\"\n                          >\n                            <option value=\"\">Seleccione</option>\n                            <option value=\"1\">Cédula de ciudadanía</option>\n                            <option value=\"2\">Cédula de extranjeria</option>\n                            <option value=\"3\">Nit</option>\n                            <option value=\"4\">Pasaporte</option>\n                          </Field>\n                          {errors.identification_type &&\n                          touched.identification_type ? (\n                            <small className=\"text-danger\">\n                              {errors.identification_type}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label className=\"pr-2\" htmlFor=\"identification\">\n                            Identificación\n                          </label>\n                          <Field\n                            name=\"identification\"\n                            className=\"form-control\"\n                            placeholder=\"eje: 60830147\"\n                            data-testid=\"modal-book-form-identification\"\n                          />\n                          {errors.identification && touched.identification ? (\n                            <small className=\"text-danger\">\n                              {errors.identification}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          data-testid=\"modal-book-form-btn-cancel\"\n                        >\n                          Cancelar\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          data-testid=\"modal-book-form-btn-submit\"\n                        >\n                          Finalizar\n                        </button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalFormBook.propTypes = {\n  dataRoom: PropTypes.shape(roomShape).isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IStarScoreProps {\n  /**\n   * Cantidad de estrellas del hotel\n   */\n  score: number;\n}\n\n/**\n * Componente encargado de renderizar estrellas según el nivel del hotel\n */\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\n  const arrStar = new Array(score);\n  arrStar.fill('star', 0);\n  return (\n    <>\n      <div data-testid=\"star-score\">\n        {score &&\n          arrStar.map((data, index) => (\n            <i key={index} className=\"fas fa-star\"></i>\n          ))}\n      </div>\n    </>\n  );\n};\n\nStarScore.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: #ffea00;\n  border-radius: 10px;\n  color: #000;\n  height: auto;\n  font-weight: 700;\n  text-align: center;\n  &[disabled] {\n    opacity: 0.3;\n  }\n`;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}