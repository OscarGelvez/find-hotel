{"version":3,"sources":["app/core/api/bookings.repository.ts","app/core/redux/actions/bookings/ActionBookings.ts","app/feature/Book/components/findBooking/index.tsx","app/feature/Book/components/listBooking/index.tsx","app/feature/Book/containers/Booking/styles.ts","app/feature/Book/hoc/ManageBooking.tsx","app/feature/Book/containers/Booking/index.tsx","app/feature/Book/pages/HomeMainPage.tsx","app/shared/utils/GetNextDateValid.ts","app/core/config/AxiosConfig.ts","app/shared/components/ToastError/index.tsx","app/shared/components/Loading/index.tsx","assets/img/loading.gif","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/shared/components/Button/index.tsx"],"names":["headers","BookingsRepository","bookingData","axios","post","baseUrl","findBookingData","get","filterData","filterBy","email","identification_type","identification","getFilterBook","bookingId","delete","errorDefault","message","type","bookingRoomSaved","roomId","BOOKING_ROOM_SAVED","payload","bookingFinded","bookingsFinded","BOOKING_FINDED","selectedDeleteId","responseCode","BOOKING_SELECTED_DELETE","bookingDeleted","BOOKING_DELETED","isLoading","loading","IS_LOADING","setError","error","ERROR","saveBookingRoom","dispacth","a","then","response","data","id","catch","err","findBooking","cancelBooking","initialValues","validationSchema","Yup","shape","required","FindBookingForm","onFindBooking","data-testid","className","onSubmit","values","resetForm","errors","touched","htmlFor","name","placeholder","as","aria-label","value","Button","ListBookings","listBookingsFinded","React","initial","infoModal","setInfoModal","setDataModal","Loading","length","map","index","key","roomData","hotel","bookData","fromDateBook","title","untilDateBook","capacity","detailRoom","data-bs-toggle","data-bs-target","onClick","confirmDelete","ModalDetailBook","aria-labelledby","data-bs-dismiss","CardInformation","selectedRoom","ModalDeleteBook","hideModal","$","modal","DivContainer","styled","div","ManageBooking","connect","state","bookings","listBookings","main","errorMessage","toast","ToastError","HomeMainPage","Layout","description","displayName","getNextDate","currentDate","fromDate","minDate","setDate","getDate","toISOString","split","auxDate","Date","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","src","Spinner","alt","module","exports","children","Helmet","content","CustomField","label","icon","valueText","valueParse","undefined","loadDetailRoom","score","image","width","height","dataRoom","Link","to","available_from","available_until","address","ac","wifi","parking","stars","min","max","ModalFormBook","setFromDate","nextDate","setFieldValue","onChange","e","target","StarScore","arrStar","Array","fill","button"],"mappings":"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","file":"static/js/4.2a12ec6a.chunk.js","sourcesContent":["import {\r\n  IBooking,\r\n  IFieldsFormFindBooking,\r\n} from 'app/feature/Book/models/Booking';\r\nimport axios from 'axios';\r\n\r\nimport { baseUrl } from '../config/AxiosConfig';\r\n\r\n/**\r\n * Función encargada de armar los filtros en la búsqueda de la reserva\r\n * @param filterData\r\n * @returns cadena filtro\r\n */\r\nconst getFilterBook = (filterData: IFieldsFormFindBooking) => {\r\n  let filterBy = '';\r\n\r\n  if (\r\n    filterData &&\r\n    filterData.email !== '' &&\r\n    filterData.identification_type !== '' &&\r\n    filterData.identification !== ''\r\n  ) {\r\n    filterBy = `?bookData.email=${filterData.email}&bookData.identification_type=${filterData.identification_type}&bookData.identification=${filterData.identification}`;\r\n  }\r\n\r\n  return filterBy;\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const BookingsRepository = {\r\n  /**\r\n   * Almacena una reservación en base de datos\r\n   * @param bookingData datos de la reserva\r\n   * @returns mensaje de éxito\r\n   */\r\n  saveBookingRoom: (bookingData: IBooking) =>\r\n    axios.post(`${baseUrl}/booking`, bookingData, {\r\n      headers: headers,\r\n    }),\r\n  /**\r\n   * Consulta una reservación hecha\r\n   * @returns arreglo de reservaciones\r\n   */\r\n  findBooking: (findBookingData: IFieldsFormFindBooking) =>\r\n    axios.get(`${baseUrl}/booking${getFilterBook(findBookingData)}`),\r\n  /**\r\n   * Elimina una reservación\r\n   * @param bookingId Identificador de la reserva\r\n   * @returns reserva eliminada\r\n   */\r\n  cancelBooking: (bookingId: number) =>\r\n    axios.delete(`${baseUrl}/booking/${bookingId}`),\r\n};\r\n","import { BookingsRepository } from 'app/core/api/bookings.repository';\r\n\r\nimport {\r\n  IBooking,\r\n  IFieldsFormFindBooking,\r\n} from '../../../../feature/Book/models/Booking';\r\nimport { IErrorToast } from '../../modelo/IStateMain';\r\nimport { ERROR, IActionTypesMain, IS_LOADING } from '../main/ActionTypesMain';\r\nimport {\r\n  BOOKING_DELETED,\r\n  BOOKING_FINDED,\r\n  BOOKING_ROOM_SAVED,\r\n  BOOKING_SELECTED_DELETE,\r\n  DEFAULT_STATE,\r\n  IActionTypesBookings,\r\n} from './ActionTypesBookings';\r\n\r\nconst errorDefault = { message: '', type: '' };\r\n\r\nexport function defaultState(id: number): IActionTypesBookings {\r\n  return {\r\n    type: DEFAULT_STATE,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function bookingRoomSaved(roomId: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_ROOM_SAVED,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function bookingFinded(\r\n  bookingsFinded: IBooking[]\r\n): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_FINDED,\r\n    payload: bookingsFinded,\r\n  };\r\n}\r\n\r\nexport function selectedDeleteId(responseCode: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_SELECTED_DELETE,\r\n    payload: responseCode,\r\n  };\r\n}\r\n\r\nexport function bookingDeleted(responseCode: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_DELETED,\r\n    payload: responseCode,\r\n  };\r\n}\r\n\r\nexport function isLoading(loading: boolean): IActionTypesMain {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload: loading,\r\n  };\r\n}\r\n\r\nexport function setError(error: IErrorToast): IActionTypesMain {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function saveBookingRoom(bookingData: IBooking) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await BookingsRepository.saveBookingRoom(bookingData)\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(bookingRoomSaved(response.data.id));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'rooms-save-book',\r\n            message:\r\n              'Se ha presentado un error al guardar tu reserva. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(bookingRoomSaved(-1));\r\n      });\r\n  };\r\n}\r\n\r\nexport function findBooking(findBookingData: IFieldsFormFindBooking) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await BookingsRepository.findBooking(findBookingData)\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(bookingFinded(response.data));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'books',\r\n            message:\r\n              'Se ha presentado un error al cargar las reservas. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(bookingFinded([]));\r\n      });\r\n  };\r\n}\r\n\r\nexport function cancelBooking(bookingId: number) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    dispacth(selectedDeleteId(bookingId));\r\n    await BookingsRepository.cancelBooking(bookingId)\r\n      .then((response) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        dispacth(selectedDeleteId(-1));\r\n        return dispacth(bookingDeleted(0));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'books',\r\n            message:\r\n              'Se ha presentado un error al cancelar la reserva. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        dispacth(selectedDeleteId(-1));\r\n        return dispacth(bookingDeleted(1));\r\n      });\r\n  };\r\n}\r\n","import { IFieldsFormFindBooking } from 'app/feature/Book/models/Booking';\r\nimport { Button } from 'app/shared/components/Button';\r\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\ninterface IFindBookingForm {\r\n  onFindBooking: (findBookingData: IFieldsFormFindBooking) => void;\r\n}\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<IFieldsFormFindBooking>({\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n});\r\n\r\nexport const FindBookingForm: React.FC<IFindBookingForm> = ({\r\n  onFindBooking,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: IFieldsFormFindBooking,\r\n    { resetForm }: FormikHelpers<IFieldsFormFindBooking>\r\n  ) => {\r\n    onFindBooking({\r\n      email: values.email,\r\n      identification_type: values.identification_type,\r\n      identification: values.identification,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div data-testid=\"find-bookings\" className=\"card-rooms\">\r\n        <div className=\"row\">\r\n          <div className=\"card filter-area \">\r\n            <h4 className=\"mt-3\">Encuentra tu reserva</h4>\r\n            <div className=\"col\">\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                {({ errors, touched }) => (\r\n                  <Form data-testid=\"form-find-bookings\">\r\n                    <div className=\"form-group row mb-3 mt-3\">\r\n                      <div className=\" col-12 col-md-4\">\r\n                        <label\r\n                          htmlFor=\"email\"\r\n                          className=\"col-12 col-form-label\"\r\n                        >\r\n                          Correo electrónico*\r\n                        </label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          data-testid=\"form-bookings-email\"\r\n                          type=\"email\"\r\n                          className=\"form-control col-12\"\r\n                          placeholder=\"eje: joe@email.com\"\r\n                        />\r\n                        {errors.email && touched.email ? (\r\n                          <small className=\"text-danger\">{errors.email}</small>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"col-12 col-md-4\">\r\n                        <label\r\n                          className=\"col-12 col-form-label\"\r\n                          htmlFor=\"identification_type\"\r\n                        >\r\n                          Tipo de identificación*\r\n                        </label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          className=\" d-block w-100\"\r\n                          data-testid=\"form-bookings-identification_type\"\r\n                          aria-label=\".form-select\"\r\n                          id=\"identification_type\"\r\n                          name=\"identification_type\"\r\n                        >\r\n                          <option value=\"\">Seleccione</option>\r\n                          <option value=\"1\">Cédula de ciudadanía</option>\r\n                          <option value=\"2\">Cédula de extranjeria</option>\r\n                          <option value=\"3\">Nit</option>\r\n                          <option value=\"4\">Pasaporte</option>\r\n                        </Field>\r\n                        {errors.identification_type &&\r\n                        touched.identification_type ? (\r\n                          <small className=\"text-danger\">\r\n                            {errors.identification_type}\r\n                          </small>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\" col-12 col-md-4\">\r\n                        <label\r\n                          className=\"col-12 col-form-label\"\r\n                          htmlFor=\"identification\"\r\n                        >\r\n                          Identificación*\r\n                        </label>\r\n                        <Field\r\n                          name=\"identification\"\r\n                          id=\"identification\"\r\n                          className=\"form-control\"\r\n                          data-testid=\"form-bookings-identification\"\r\n                          placeholder=\"eje: 60830147\"\r\n                        />\r\n                        {errors.identification && touched.identification ? (\r\n                          <small className=\"text-danger\">\r\n                            {errors.identification}\r\n                          </small>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"mt-4 text-center\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"btn w-75\"\r\n                          data-testid=\"form-bookings-btn-submit\"\r\n                        >\r\n                          Buscar\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"text-center mb-2 mt-1\">\r\n                        <Button\r\n                          className=\"button-link\"\r\n                          data-testid=\"form-bookings-btn-reset\"\r\n                          type=\"reset\"\r\n                        >\r\n                          limpiar\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFindBookingForm.propTypes = {\r\n  onFindBooking: PropTypes.func.isRequired,\r\n};\r\n","import { IRoom } from 'app/feature/Rooms/models/Room';\r\nimport { CardInformation } from 'app/shared/components/CardInformation';\r\nimport { roomShape } from 'app/shared/components/CardInformation/model';\r\nimport Loading from 'app/shared/components/Loading';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { IBooking } from '../../models/Booking';\r\n\r\nexport interface IListBookingsProps {\r\n  /**\r\n   * Lista de reservaciones\r\n   */\r\n  listBookingsFinded: Array<IBooking>;\r\n  /**\r\n   * Función necargada de cancelar una reservación\r\n   */\r\n  cancelBooking: (bookId: number) => void;\r\n  /**\r\n   * Indica si se está o no cargando el recurso\r\n   */\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const ListBookings: React.FC<IListBookingsProps> = ({\r\n  listBookingsFinded,\r\n  cancelBooking,\r\n  isLoading,\r\n}) => {\r\n  let initial: IRoom | undefined;\r\n  const [infoModal, setInfoModal] = React.useState(initial);\r\n\r\n  const setDataModal = (data: IRoom) => {\r\n    setInfoModal(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div data-testid=\"list-bookings\" className=\"card-rooms\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col\">\r\n            {listBookingsFinded && listBookingsFinded.length > 0 ? (\r\n              listBookingsFinded.map((data, index) => {\r\n                return (\r\n                  <div\r\n                    data-testid=\"card-information-bookigns\"\r\n                    className=\"card room-item\"\r\n                    key={index}\r\n                  >\r\n                    <div className=\"card-header book-item-header \">\r\n                      <h3>{data.roomData.hotel.name}</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 col-lg-3\">\r\n                          <h5>A nombre de:</h5>\r\n                          <span>{data.bookData.name}</span>\r\n\r\n                          <h5 className=\"mt-2\">Ingreso:</h5>\r\n                          <span>{data.bookData.fromDateBook}</span>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-3\">\r\n                          <h5>Habitación:</h5>\r\n                          <span>{data.roomData.title}</span>\r\n                          <h5 className=\"mt-2\">Salida:</h5>\r\n                          <span>{data.bookData.untilDateBook}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-3\">\r\n                          <h5>Valor:</h5>\r\n                          <span>{data.roomData.value}</span>\r\n                          <h5 className=\"mt-2\">Camas:</h5>\r\n                          <span>{data.roomData.capacity}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6 col-lg-3\">\r\n                          <ModalDetailBook detailRoom={infoModal} />\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary btn-book w-100 mt-2\"\r\n                            data-testid=\"list-book-btn-detail\"\r\n                            data-bs-toggle=\"modal\"\r\n                            id=\"list-book-btn-detail\"\r\n                            data-bs-target=\"#modalDetailBook\"\r\n                            onClick={() => setDataModal(data.roomData)}\r\n                          >\r\n                            <i className=\"fas fa-check ml-3\"></i>\r\n                            {' Detalles'}\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger btn-book w-100 mt-3\"\r\n                            data-testid=\"list-book-btn-cancel\"\r\n                            id=\"list-book-btn-cancel\"\r\n                            data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#modalDeleteBook\"\r\n                            onClick={() => setDataModal(data.roomData)}\r\n                          >\r\n                            <i className=\"fas fa-times ml-3\"></i>\r\n                            {' Cancelar'}\r\n                          </button>\r\n                          <ModalDeleteBook\r\n                            detailRoom={infoModal}\r\n                            confirmDelete={() =>\r\n                              data.id && cancelBooking(data.id)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <h5>No hay reservas para mostrar</h5>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nListBookings.propTypes = {\r\n  listBookingsFinded: PropTypes.array.isRequired,\r\n  cancelBooking: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\ninterface IDetailBookProps {\r\n  /**\r\n   * Lista de reservaciones\r\n   */\r\n  detailRoom?: IRoom;\r\n}\r\nconst ModalDetailBook: React.FC<IDetailBookProps> = ({ detailRoom }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"modalDetailBook\"\r\n        data-testid=\"modal-detail-book\"\r\n        aria-labelledby=\"modalDetailBookLabel\"\r\n      >\r\n        <div className=\"modal-dialog modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"modalDetailBookLabel\">\r\n                Detalles de tu reserva\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {detailRoom && (\r\n                <CardInformation\r\n                  data={detailRoom}\r\n                  selectedRoom={detailRoom.id}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalDetailBook.propTypes = {\r\n  detailRoom: PropTypes.shape(roomShape),\r\n};\r\n\r\ninterface IDeleteBookProps {\r\n  /**\r\n   * Lista de reservaciones\r\n   */\r\n  detailRoom?: IRoom;\r\n  /**\r\n   * Confirma eliminación de la reserva\r\n   */\r\n  confirmDelete: () => void;\r\n}\r\nconst ModalDeleteBook: React.FC<IDeleteBookProps> = ({\r\n  detailRoom,\r\n  confirmDelete,\r\n}) => {\r\n  const deleteBook = () => {\r\n    confirmDelete();\r\n    hideModal();\r\n  };\r\n\r\n  const hideModal = () => {\r\n    $('#modalDeleteBook').modal('hide');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"modalDeleteBook\"\r\n        data-testid=\"modal-book-delete\"\r\n        aria-labelledby=\"modalDeleteBookLabel\"\r\n      >\r\n        <div className=\"modal-dialog modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"modalDeleteBookLabel\">\r\n                Eliminar reserva\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {detailRoom && (\r\n                <h5>{`¿Está seguro de cancelar la reserva de ${detailRoom.title} en ${detailRoom.hotel.name}?`}</h5>\r\n              )}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <div className=\"d-flex justify-content-between w-100\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary w-25\"\r\n                  data-testid=\"modal-book-delete-no\"\r\n                  data-bs-dismiss=\"modal\"\r\n                >\r\n                  No\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger w-25\"\r\n                  data-testid=\"modal-book-delete-cancel\"\r\n                  onClick={deleteBook}\r\n                >\r\n                  Sí, cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalDeleteBook.propTypes = {\r\n  detailRoom: PropTypes.shape(roomShape),\r\n  confirmDelete: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import {\r\n  cancelBooking,\r\n  findBooking,\r\n} from 'app/core/redux/actions/bookings/ActionBookings';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Booking } from '../containers/Booking';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return {\r\n    listBookingsFinded: state.bookings.listBookings,\r\n    isLoading: state.main.isLoading,\r\n    errorMessage: state.main.errorMessage,\r\n  };\r\n};\r\n\r\nexport const ManageBooking = connect(mapStateToProps, {\r\n  findBooking,\r\n  cancelBooking,\r\n})(Booking);\r\n","import { IErrorToast } from 'app/core/redux/modelo/IStateMain';\r\nimport {\r\n  IBooking,\r\n  IFieldsFormFindBooking,\r\n} from 'app/feature/Book/models/Booking';\r\nimport ToastError from 'app/shared/components/ToastError';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { FindBookingForm } from '../../components/findBooking';\r\nimport { ListBookings } from '../../components/listBooking';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface IBookingsProps {\r\n  findBooking: (findBookingData: IFieldsFormFindBooking) => void;\r\n  listBookingsFinded: Array<IBooking>;\r\n  cancelBooking: (bookId: number) => void;\r\n  isLoading: boolean;\r\n  errorMessage: IErrorToast;\r\n}\r\n\r\nexport const Booking: React.FC<IBookingsProps> = ({\r\n  findBooking,\r\n  listBookingsFinded,\r\n  cancelBooking,\r\n  isLoading,\r\n  errorMessage,\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (errorMessage.message !== '') {\r\n      errorMessage.type === 'books' && toast.error(errorMessage.message);\r\n    }\r\n  }, [errorMessage]);\r\n  return (\r\n    <DivContainer data-testid=\"book\">\r\n      <ToastError />\r\n      <FindBookingForm onFindBooking={findBooking} />\r\n      <ListBookings\r\n        listBookingsFinded={listBookingsFinded}\r\n        cancelBooking={cancelBooking}\r\n        isLoading={isLoading}\r\n      />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nBooking.propTypes = {\r\n  findBooking: PropTypes.func.isRequired,\r\n  listBookingsFinded: PropTypes.array.isRequired,\r\n  cancelBooking: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.shape({\r\n    message: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageBooking } from '../hoc/ManageBooking';\r\n\r\nconst HomeMainPage: React.FC<RouteComponentProps> = () => (\r\n  <Layout title=\"Reservar\" description=\"Consulte las reservaciones hechas\">\r\n    <ManageBooking />\r\n  </Layout>\r\n);\r\n\r\nHomeMainPage.displayName = 'HomeMainPage';\r\n\r\nexport default HomeMainPage;\r\n","/**\r\n * Valida la siguiente fecha valida del campo Fecha de salida\r\n * según la fecha seleccionada en el campo Fecha ingreso\r\n * @param currentDate Fecha actual\r\n * @param fromDate Fecha inicial\r\n * @param minDate mínima fecha incial\r\n * @returns\r\n */\r\nexport const getNextDate = (\r\n  currentDate: Date,\r\n  fromDate: string,\r\n  minDate: string\r\n) => {\r\n  if (fromDate === minDate) {\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n    return currentDate.toISOString().split('T')[0];\r\n  } else {\r\n    const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\r\n    auxDate.setDate(auxDate.getDate() + 1);\r\n    return auxDate.toISOString().split('T')[0];\r\n  }\r\n};\r\n","export const baseUrl = 'http://find-hotels-json-server.herokuapp.com'; // process.env.REACT_APP_URL_BASE,\r\n","import * as React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n/**\r\n * Componente encargado de renderizar mensaje de error\r\n */\r\nconst ToastError = () => {\r\n  return (\r\n    <div data-testid=\"toast-error\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ToastError;\r\n","import * as React from 'react';\r\n\r\nimport Spinner from '../../../../assets/img/loading.gif';\r\n\r\n/**\r\n * Componente encargado de renderizar el spinner de carga\r\n */\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div data-testid=\"view-spinner\" className=\"container-loader\">\r\n        <img\r\n          data-testid=\"view-spinner-loader\"\r\n          src={Spinner}\r\n          alt=\"loading\"\r\n          className=\"img-loader\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Loading;\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.890fa681.gif\";","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface ILayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<ILayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\ninterface ICustomFieldProps {\r\n  /**\r\n   * Título del campo\r\n   */\r\n  label: string;\r\n  /**\r\n   * Icono a mostrar\r\n   */\r\n  icon: string;\r\n  /**\r\n   * Indica si cuenta o no con la propiedad\r\n   */\r\n  value?: boolean;\r\n  /**\r\n   * Valor de la propiedad en texto\r\n   */\r\n  valueText?: string;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\r\n * @param param0\r\n * @returns Sección con item y valor de la habitación\r\n */\r\nexport const CustomField: React.FC<ICustomFieldProps> = ({\r\n  label,\r\n  icon,\r\n  value,\r\n  valueText,\r\n}) => {\r\n  const valueParse = value !== undefined && value === true;\r\n  return (\r\n    <>\r\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\r\n        {label} <i className={`fas ${icon}`}></i> :{' '}\r\n        {valueText && valueText !== '' ? (\r\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\r\n        ) : (\r\n          <i\r\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\r\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\r\n          ></i>\r\n        )}\r\n      </h6>\r\n    </>\r\n  );\r\n};\r\n\r\nCustomField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  valueText: PropTypes.string,\r\n};\r\n","import { getNextDate } from 'app/shared/utils/GetNextDateValid';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  IBooking,\r\n  IFieldsFormBooking,\r\n} from '../../../feature/Book/models/Booking';\r\nimport { IRoom } from '../../../feature/Rooms/models/Room';\r\nimport { CustomField } from '../CustomFieldIcon';\r\nimport { Link } from '../Link';\r\nimport { roomShape } from './model';\r\n\r\ninterface ICardInformationProps {\r\n  /**\r\n   * Información de cada habitación\r\n   */\r\n  data: IRoom;\r\n  /**\r\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\r\n   */\r\n  selectedRoom?: number;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom?: (roomId: number) => void;\r\n  /**\r\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar Card con información de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const CardInformation: React.FC<ICardInformationProps> = ({\r\n  data,\r\n  loadDetailRoom,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <div data-testid=\"card-information\" className=\"card room-item\">\r\n      <div className=\"card-header room-item-header \">\r\n        <h3>{data.hotel.name}</h3>\r\n        <h4>{data.hotel.score}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img\r\n              src={data.image}\r\n              className=\"img-fluid\"\r\n              alt=\"hotel room\"\r\n              width=\"260px\"\r\n              height=\"180px\"\r\n            />\r\n          </div>\r\n          <div className=\"col col-md-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <h5 className=\"card-title\">{data.title}</h5>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4\">\r\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-book w-100\"\r\n                      data-testid=\"form-detail-button-book\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#modalFormBook\"\r\n                      id=\"form-detail-button\"\r\n                    >\r\n                      <i className=\"far fa-calendar-check ml-3\"></i>\r\n                      {' Reservar'}\r\n                    </button>\r\n                    <ModalFormBook\r\n                      saveBookingRoom={saveBookingRoom}\r\n                      dataRoom={data}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  loadDetailRoom && (\r\n                    <Link to={'/rooms/detail'}>\r\n                      <button\r\n                        type=\"button\"\r\n                        id=\"btn-select-detail\"\r\n                        className=\"btn btn-primary btn-book w-100\"\r\n                        data-testid=\"form-button-load-detail\"\r\n                        onClick={() =>\r\n                          loadDetailRoom && loadDetailRoom(data.id)\r\n                        }\r\n                      >\r\n                        <i className=\"far fa-calendar-check ml-3\"></i>\r\n                        {' Seleccionar'}\r\n                      </button>\r\n                    </Link>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-12\">\r\n                <h4>\r\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 d-flex\">\r\n                <CustomField\r\n                  label={'Inicio'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_from}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'-  Fin'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_until}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\">{data.description}</p>\r\n            {selectedRoom && selectedRoom !== -1 && (\r\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\r\n                <p className=\"card-text\">{data.hotel.description}</p>\r\n                <CustomField\r\n                  label={'Dirección'}\r\n                  icon=\"fa-map-marked-alt\"\r\n                  valueText={`${data.hotel.address}`}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Camas'}\r\n                  icon=\"fa-bed\"\r\n                  valueText={`${data.capacity}`}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Aire'}\r\n                  icon=\"fa-wind\"\r\n                  value={data.ac === 'Y'}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Wifi'}\r\n                  icon=\"fa-wifi\"\r\n                  value={data.wifi === 'Y'}\r\n                />\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Parqueadero'}\r\n                  icon=\"fa-car\"\r\n                  value={data.parking === 'Y'}\r\n                />\r\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\r\n\r\n                {selectedRoom && selectedRoom !== -1 && (\r\n                  <StarScore score={data.hotel.stars} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardInformation.propTypes = {\r\n  data: PropTypes.shape(roomShape).isRequired,\r\n  selectedRoom: PropTypes.number,\r\n  loadDetailRoom: PropTypes.func,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IModalFormBookProps {\r\n  /**\r\n   * Información de la reserva a registrar\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n  /**\r\n   * Información de la habitación\r\n   */\r\n  dataRoom: IRoom;\r\n}\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n  fromDateBook: '',\r\n  untilDateBook: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\r\n  name: Yup.string()\r\n    .min(2, 'Nombre muy corto')\r\n    .max(50, 'Nombre muy largo')\r\n    .required('Nacesitamos tu nombre'),\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n  fromDateBook: Yup.string().required('Necesitamos tu fecha de ingreso'),\r\n  untilDateBook: Yup.string().required('Necesitamos tu fecha de salida'),\r\n});\r\n\r\n/**\r\n * Componente encargado de renderizar el modal con el formulario de reservación\r\n * de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const ModalFormBook: React.FC<IModalFormBookProps> = ({\r\n  saveBookingRoom,\r\n  dataRoom,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: IFieldsFormBooking,\r\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\r\n  ) => {\r\n    saveBookingRoom &&\r\n      saveBookingRoom({\r\n        bookData: {\r\n          name: values.name,\r\n          email: values.email,\r\n          identification_type: values.identification_type,\r\n          identification: values.identification,\r\n          fromDateBook: fromDate,\r\n          untilDateBook: values.untilDateBook,\r\n        },\r\n        roomData: dataRoom,\r\n      });\r\n    hideModal();\r\n    setFromDate('');\r\n    resetForm();\r\n  };\r\n\r\n  const hideModal = () => {\r\n    $('#modalFormBook').modal('hide');\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const minDate = currentDate.toISOString().split('T')[0];\r\n  const [fromDate, setFromDate] = React.useState('');\r\n\r\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\r\n  return (\r\n    <>\r\n      <div data-testid=\"modal-form-book\">\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modalFormBook\"\r\n          aria-labelledby=\"modalFormBookLabel\"\r\n          data-testid=\"modal-book\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\r\n                  Completa tu reserva\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ errors, touched, setFieldValue }) => (\r\n                    <Form data-testid=\"modal-book-form\" id=\"form-modal-book\">\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Nombre\r\n                          </label>\r\n                          <Field\r\n                            name=\"name\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: Joe Doe\"\r\n                            data-testid=\"modal-book-form-name\"\r\n                            id=\"book-form-name\"\r\n                          />\r\n                          {errors.name && touched.name ? (\r\n                            <small className=\"text-danger\">{errors.name}</small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Correo electrónico\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control col-12\"\r\n                            data-testid=\"modal-book-form-email\"\r\n                            placeholder=\"eje: joe@email.com\"\r\n                            id=\"book-form-email\"\r\n                          />\r\n                          {errors.email && touched.email ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.email}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de ingreso\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-fromDate\"\r\n                            type=\"date\"\r\n                            name=\"fromDateBook\"\r\n                            id=\"fromDateBook\"\r\n                            min={minDate}\r\n                            value={fromDate}\r\n                            onChange={(\r\n                              e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setFieldValue('fromDateBook', e.target.value);\r\n                              setFromDate(e.target.value);\r\n                            }}\r\n                          />\r\n                          {errors.fromDateBook && touched.fromDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.fromDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de salida\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-untilDate\"\r\n                            type=\"date\"\r\n                            name=\"untilDateBook\"\r\n                            id=\"untilDateBook\"\r\n                            min={nextDate}\r\n                            max={dataRoom.available_until}\r\n                          />\r\n                          {errors.untilDateBook && touched.untilDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.untilDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                            Tipo de identificación\r\n                          </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\" d-block w-100\"\r\n                            aria-label=\".form-select-sm example\"\r\n                            name=\"identification_type\"\r\n                            data-testid=\"modal-book-form-identification-type\"\r\n                            id=\"book-form-select\"\r\n                          >\r\n                            <option value=\"\">Seleccione</option>\r\n                            <option value=\"1\">Cédula de ciudadanía</option>\r\n                            <option value=\"2\">Cédula de extranjeria</option>\r\n                            <option value=\"3\">Nit</option>\r\n                            <option value=\"4\">Pasaporte</option>\r\n                          </Field>\r\n                          {errors.identification_type &&\r\n                          touched.identification_type ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification_type}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label className=\"pr-2\" htmlFor=\"identification\">\r\n                            Identificación\r\n                          </label>\r\n                          <Field\r\n                            name=\"identification\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"eje: 60830147\"\r\n                            data-testid=\"modal-book-form-identification\"\r\n                            id=\"book-form-identification\"\r\n                          />\r\n                          {errors.identification && touched.identification ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between mt-3\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          data-testid=\"modal-book-form-btn-cancel\"\r\n                          id=\"modal-form-btn-cancel\"\r\n                        >\r\n                          Cancelar\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          data-testid=\"modal-book-form-btn-submit\"\r\n                          id=\"modal-form-btn-submit\"\r\n                        >\r\n                          Finalizar\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalFormBook.propTypes = {\r\n  dataRoom: PropTypes.shape(roomShape).isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IStarScoreProps {\r\n  /**\r\n   * Cantidad de estrellas del hotel\r\n   */\r\n  score: number;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar estrellas según el nivel del hotel\r\n */\r\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\r\n  const arrStar = new Array(score);\r\n  arrStar.fill('star', 0);\r\n  return (\r\n    <>\r\n      <div data-testid=\"star-score\">\r\n        {score &&\r\n          arrStar.map((data, index) => (\r\n            <i key={index} className=\"fas fa-star\"></i>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nStarScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: #ffea00;\r\n  border-radius: 10px;\r\n  color: #000;\r\n  height: auto;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n"],"sourceRoot":""}