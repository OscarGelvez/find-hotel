{"version":3,"sources":["app/feature/Book/components/Booking/index.tsx","app/feature/Book/containers/Booking/styles.ts","app/feature/Book/hoc/ManageBooking.tsx","app/feature/Book/containers/Booking/index.tsx","app/feature/Book/pages/Book.tsx","app/core/config/AxiosConfig.ts","app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/Button/index.tsx"],"names":["initialValues","email","identification_type","identification","validationSchema","Yup","shape","required","BookingDetail","onFindBooking","data-testid","className","onSubmit","values","resetForm","errors","touched","htmlFor","name","type","placeholder","as","aria-label","id","value","Button","DivContainer","styled","div","ManageBooking","connect","state","listRooms","rooms","selectedRoom","selectedRoomId","HomeMainPage","Layout","title","description","displayName","axiosIntance","axios","create","baseURL","process","timeout","headers","RoomsRepository","get","dataFilter","data","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","bookingData","post","loadDetailRoom","roomId","LOAD_ROOM_DETAIL","payload","listingRoomsAsync","dispacth","then","response","LIST_ROOMS","findRoomsFilter","FINDED_ROOMS","saveBookingRoom","BOOKING_ROOM_SAVED","findBookingData","children","Helmet","content","button"],"mappings":"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","file":"static/js/5.2d55ab67.chunk.js","sourcesContent":["import { fieldsFormFindBooking } from 'app/feature/Rooms/models/Room';\r\nimport { Button } from 'app/shared/components/Button';\r\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\ninterface BookingDetail {\r\n  onFindBooking: (findBookingData: fieldsFormFindBooking) => void;\r\n}\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<fieldsFormFindBooking>({\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n});\r\n\r\nexport const BookingDetail: React.FC<BookingDetail> = ({ onFindBooking }) => {\r\n  const handleSubmit = (\r\n    values: fieldsFormFindBooking,\r\n    { resetForm }: FormikHelpers<fieldsFormFindBooking>\r\n  ) => {\r\n    onFindBooking({\r\n      email: values.email,\r\n      identification_type: values.identification_type,\r\n      identification: values.identification,\r\n    });\r\n    resetForm();\r\n  };\r\n  return (\r\n    <>\r\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\r\n        <div className=\"row\">\r\n          <div className=\"card filter-area \">\r\n            <div className=\"col\">\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                {({ errors, touched }) => (\r\n                  <Form data-testid=\"form-find-rooms\">\r\n                    <div className=\"form-group row mb-3 mt-3\">\r\n                      <div className=\" col-12 col-md-4\">\r\n                        <label\r\n                          htmlFor=\"email\"\r\n                          className=\"col-12 col-form-label\"\r\n                        >\r\n                          Correo electrónico\r\n                        </label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          className=\"form-control col-12\"\r\n                          placeholder=\"eje: joe@email.com\"\r\n                        />\r\n                        {errors.email && touched.email ? (\r\n                          <small className=\"text-danger\">{errors.email}</small>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"col-12 col-md-4\">\r\n                        <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                          Tipo de identificación\r\n                        </label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          className=\" d-block w-100\"\r\n                          aria-label=\".form-select-sm example\"\r\n                          id=\"identification_type\"\r\n                          name=\"identification_type\"\r\n                        >\r\n                          <option value=\"\">Seleccione</option>\r\n                          <option value=\"1\">Cédula de ciudadanía</option>\r\n                          <option value=\"2\">Cédula de extranjeria</option>\r\n                          <option value=\"3\">Nit</option>\r\n                          <option value=\"4\">Pasaporte</option>\r\n                        </Field>\r\n                        {errors.identification_type &&\r\n                        touched.identification_type ? (\r\n                          <small className=\"text-danger\">\r\n                            {errors.identification_type}\r\n                          </small>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\" col-12 col-md-4\">\r\n                        <label className=\"pr-2\" htmlFor=\"identification\">\r\n                          Identificación\r\n                        </label>\r\n                        <Field\r\n                          name=\"identification\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"eje: 60830147\"\r\n                        />\r\n                        {errors.identification && touched.identification ? (\r\n                          <small className=\"text-danger\">\r\n                            {errors.identification}\r\n                          </small>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row text-center\">\r\n                      <Button type=\"submit\" className=\"btn \">\r\n                        Buscar\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBookingDetail.propTypes = {\r\n  onFindBooking: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import { onFindBooking } from 'app/core/redux/actions/rooms/ActionsRooms';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Booking } from '../containers/Booking';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return {\r\n    listRooms: state.rooms.listRooms,\r\n    selectedRoom: state.rooms.selectedRoomId,\r\n  };\r\n};\r\n\r\nexport const ManageBooking = connect(mapStateToProps, { onFindBooking })(\r\n  Booking\r\n);\r\n","import { fieldsFormFindBooking } from 'app/feature/Rooms/models/Room';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\n// import { useEffect } from 'react';\r\nimport { BookingDetail } from '../../components/Booking';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface RoomsProps {\r\n  onFindBooking: (findBookingData: fieldsFormFindBooking) => void;\r\n}\r\n\r\nexport const Booking: React.FC<RoomsProps> = ({ onFindBooking }) => {\r\n  //   useEffect(() => {\r\n  //     if (listRooms && listRooms.length === 0) {\r\n  //       listAvailableRooms();\r\n  //     }\r\n  //   }, [listRooms, listAvailableRooms]);\r\n\r\n  return (\r\n    <DivContainer data-testid=\"room\">\r\n      <BookingDetail onFindBooking={onFindBooking} />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nBooking.propTypes = {\r\n  //   listRooms: PropTypes.array.isRequired,\r\n  onFindBooking: PropTypes.func.isRequired,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageBooking } from '../hoc/ManageBooking';\r\n\r\nconst HomeMainPage: React.FC<RouteComponentProps> = () => (\r\n  <Layout title=\"Reservar\" description=\"Consulte las reservaciones hechas\">\r\n    <ManageBooking />\r\n  </Layout>\r\n);\r\n\r\nHomeMainPage.displayName = 'HomeMainPage';\r\n\r\nexport default HomeMainPage;\r\n","import axios from 'axios';\r\n\r\nexport const axiosIntance = axios.create({\r\n  baseURL: process.env.REACT_APP_URL_BASE,\r\n  timeout: 30000,\r\n  headers: { 'X-Custom-Header': 'foobar' },\r\n});\r\n","import { BookingData, fieldsForm } from 'app/feature/Rooms/models/Room';\r\n\r\nimport { axiosIntance } from '../config/AxiosConfig';\r\n\r\n// const NUMERO_REGISTROS = 10;\r\n// const limit = (count: number, p: number) =>\r\n//   `limit=${count}&offset=${p ? p * count : 0}`;\r\n\r\nconst getDataFilter = (data: fieldsForm) => {\r\n  let filterBy = '?';\r\n  if (data.fromDate) {\r\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\r\n  }\r\n  if (data.untilDate) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\r\n      data.untilDate\r\n    }`;\r\n  }\r\n  if (data.capacity) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\r\n      data.capacity\r\n    }`;\r\n  }\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\r\n    data.withAir && data.withAir === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\r\n    data.withParking && data.withParking === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  return filterBy;\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const RoomsRepository = {\r\n  findAllRooms: () => axiosIntance.get('/rooms'),\r\n  findFilterRooms: (dataFilter: fieldsForm) =>\r\n    axiosIntance.get(`/rooms${getDataFilter(dataFilter)}`),\r\n  saveBookingRoom: (bookingData: BookingData) =>\r\n    axiosIntance.post('/booking', bookingData, {\r\n      headers: headers,\r\n    }),\r\n};\r\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\r\nimport {\r\n  BookingData,\r\n  fieldsForm,\r\n  fieldsFormFindBooking,\r\n  IRoom,\r\n} from 'app/feature/Rooms/models/Room';\r\n\r\nimport {\r\n  ActionTypesRooms,\r\n  BOOKING_ROOM_SAVED,\r\n  FINDED_ROOMS,\r\n  LIST_ROOMS,\r\n  LOAD_ROOM_DETAIL,\r\n} from './ActionTypesRooms';\r\n\r\nexport function listingRooms(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: LIST_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function roomsFiltered(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: FINDED_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function loadDetailRoom(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: LOAD_ROOM_DETAIL,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function bookingRoomSaved(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: BOOKING_ROOM_SAVED,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function listingRoomsAsync() {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findAllRooms().then((response: any) => {\r\n      return dispacth(listingRooms(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function findRoomsFilter(dataFilter: fieldsForm) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findFilterRooms(dataFilter).then((response: any) => {\r\n      return dispacth(roomsFiltered(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function saveBookingRoom(bookingData: BookingData) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n      return dispacth(bookingRoomSaved(response.data.id));\r\n    });\r\n  };\r\n}\r\n\r\nexport function onFindBooking(findBookingData: fieldsFormFindBooking) {\r\n  return function (dispacth: any) {\r\n    return null;\r\n    // RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n    //   return dispacth(bookingRoomSaved(response.data.id));\r\n    // });\r\n  };\r\n}\r\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface LayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<LayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: #ffea00;\r\n  border-radius: 10px;\r\n  color: #000;\r\n  height: auto;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n"],"sourceRoot":""}