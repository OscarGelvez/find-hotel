{"version":3,"sources":["app/core/api/bookings.repository.ts","app/core/redux/actions/bookings/ActionBookings.ts","app/feature/Rooms/components/roomDetail/index.tsx","app/feature/Rooms/containers/RoomDetail/styles.ts","app/feature/Rooms/hoc/ManageDetail.tsx","app/feature/Rooms/containers/RoomDetail/index.tsx","app/feature/Rooms/pages/DetailPage.tsx","app/shared/utils/GetNextDateValid.ts","app/core/config/AxiosConfig.ts","app/shared/components/ToastError/index.tsx","app/shared/components/Loading/index.tsx","assets/img/loading.gif","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx"],"names":["headers","BookingsRepository","bookingData","axios","post","baseUrl","findBookingData","get","filterData","filterBy","email","identification_type","identification","getFilterBook","bookingId","delete","errorDefault","message","type","bookingRoomSaved","roomId","BOOKING_ROOM_SAVED","payload","bookingFinded","bookingsFinded","BOOKING_FINDED","selectedDeleteId","responseCode","BOOKING_SELECTED_DELETE","bookingDeleted","BOOKING_DELETED","isLoading","loading","IS_LOADING","setError","error","ERROR","saveBookingRoom","dispacth","a","then","response","data","id","catch","err","findBooking","cancelBooking","RoomDetailView","listRooms","selectedRoom","roomSelected","filter","item","Loading","className","data-testid","CardInformation","key","Link","to","onClick","DivContainer","styled","div","ManageDetail","connect","state","rooms","selectedRoomId","main","errorMessage","React","toast","ToastError","DetailPage","Layout","title","description","displayName","getNextDate","currentDate","fromDate","minDate","setDate","getDate","toISOString","split","auxDate","Date","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","src","Spinner","alt","module","exports","children","Helmet","name","content","CustomField","label","icon","value","valueText","valueParse","undefined","loadDetailRoom","hotel","score","image","width","height","data-bs-toggle","data-bs-target","dataRoom","available_from","available_until","address","capacity","ac","wifi","parking","stars","initialValues","fromDateBook","untilDateBook","validationSchema","Yup","shape","min","max","required","ModalFormBook","hideModal","$","modal","setFromDate","nextDate","aria-labelledby","data-bs-dismiss","aria-label","onSubmit","values","resetForm","bookData","roomData","errors","touched","setFieldValue","htmlFor","placeholder","onChange","e","target","as","StarScore","arrStar","Array","fill","map","index"],"mappings":"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","file":"static/js/5.15a3ae20.chunk.js","sourcesContent":["import {\r\n  IBooking,\r\n  IFieldsFormFindBooking,\r\n} from 'app/feature/Book/models/Booking';\r\nimport axios from 'axios';\r\n\r\nimport { baseUrl } from '../config/AxiosConfig';\r\n\r\n/**\r\n * Función encargada de armar los filtros en la búsqueda de la reserva\r\n * @param filterData\r\n * @returns cadena filtro\r\n */\r\nconst getFilterBook = (filterData: IFieldsFormFindBooking) => {\r\n  let filterBy = '';\r\n\r\n  if (\r\n    filterData &&\r\n    filterData.email !== '' &&\r\n    filterData.identification_type !== '' &&\r\n    filterData.identification !== ''\r\n  ) {\r\n    filterBy = `?bookData.email=${filterData.email}&bookData.identification_type=${filterData.identification_type}&bookData.identification=${filterData.identification}`;\r\n  }\r\n\r\n  return filterBy;\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const BookingsRepository = {\r\n  /**\r\n   * Almacena una reservación en base de datos\r\n   * @param bookingData datos de la reserva\r\n   * @returns mensaje de éxito\r\n   */\r\n  saveBookingRoom: (bookingData: IBooking) =>\r\n    axios.post(`${baseUrl}/booking`, bookingData, {\r\n      headers: headers,\r\n    }),\r\n  /**\r\n   * Consulta una reservación hecha\r\n   * @returns arreglo de reservaciones\r\n   */\r\n  findBooking: (findBookingData: IFieldsFormFindBooking) =>\r\n    axios.get(`${baseUrl}/booking${getFilterBook(findBookingData)}`),\r\n  /**\r\n   * Elimina una reservación\r\n   * @param bookingId Identificador de la reserva\r\n   * @returns reserva eliminada\r\n   */\r\n  cancelBooking: (bookingId: number) =>\r\n    axios.delete(`${baseUrl}/booking/${bookingId}`),\r\n};\r\n","import { BookingsRepository } from 'app/core/api/bookings.repository';\r\n\r\nimport {\r\n  IBooking,\r\n  IFieldsFormFindBooking,\r\n} from '../../../../feature/Book/models/Booking';\r\nimport { IErrorToast } from '../../modelo/IStateMain';\r\nimport { ERROR, IActionTypesMain, IS_LOADING } from '../main/ActionTypesMain';\r\nimport {\r\n  BOOKING_DELETED,\r\n  BOOKING_FINDED,\r\n  BOOKING_ROOM_SAVED,\r\n  BOOKING_SELECTED_DELETE,\r\n  DEFAULT_STATE,\r\n  IActionTypesBookings,\r\n} from './ActionTypesBookings';\r\n\r\nconst errorDefault = { message: '', type: '' };\r\n\r\nexport function defaultState(id: number): IActionTypesBookings {\r\n  return {\r\n    type: DEFAULT_STATE,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function bookingRoomSaved(roomId: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_ROOM_SAVED,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function bookingFinded(\r\n  bookingsFinded: IBooking[]\r\n): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_FINDED,\r\n    payload: bookingsFinded,\r\n  };\r\n}\r\n\r\nexport function selectedDeleteId(responseCode: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_SELECTED_DELETE,\r\n    payload: responseCode,\r\n  };\r\n}\r\n\r\nexport function bookingDeleted(responseCode: number): IActionTypesBookings {\r\n  return {\r\n    type: BOOKING_DELETED,\r\n    payload: responseCode,\r\n  };\r\n}\r\n\r\nexport function isLoading(loading: boolean): IActionTypesMain {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload: loading,\r\n  };\r\n}\r\n\r\nexport function setError(error: IErrorToast): IActionTypesMain {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function saveBookingRoom(bookingData: IBooking) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await BookingsRepository.saveBookingRoom(bookingData)\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(bookingRoomSaved(response.data.id));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'rooms-save-book',\r\n            message:\r\n              'Se ha presentado un error al guardar tu reserva. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(bookingRoomSaved(-1));\r\n      });\r\n  };\r\n}\r\n\r\nexport function findBooking(findBookingData: IFieldsFormFindBooking) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await BookingsRepository.findBooking(findBookingData)\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(bookingFinded(response.data));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'books',\r\n            message:\r\n              'Se ha presentado un error al cargar las reservas. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(bookingFinded([]));\r\n      });\r\n  };\r\n}\r\n\r\nexport function cancelBooking(bookingId: number) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    dispacth(selectedDeleteId(bookingId));\r\n    await BookingsRepository.cancelBooking(bookingId)\r\n      .then((response) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        dispacth(selectedDeleteId(-1));\r\n        return dispacth(bookingDeleted(0));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'books',\r\n            message:\r\n              'Se ha presentado un error al cancelar la reserva. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        dispacth(selectedDeleteId(-1));\r\n        return dispacth(bookingDeleted(1));\r\n      });\r\n  };\r\n}\r\n","import { CardInformation } from 'app/shared/components/CardInformation';\r\nimport { Link } from 'app/shared/components/Link';\r\nimport Loading from 'app/shared/components/Loading';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { IBooking } from '../../../Book/models/Booking';\r\nimport { IRoom } from '../../models/Room';\r\n\r\nexport interface IRoomDetailViewProps {\r\n  /**\r\n   * Lista de habitaciones\r\n   */\r\n  listRooms: Array<IRoom>;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  selectedRoom: number;\r\n  /**\r\n   * Función encargada de registrar la reservación\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n  /**\r\n   * Indica si se está o no cargando el recurso\r\n   */\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const RoomDetailView: React.FC<IRoomDetailViewProps> = ({\r\n  listRooms,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n  isLoading,\r\n}) => {\r\n  const roomSelected = listRooms.filter((item) => item.id === selectedRoom)[0];\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div className=\"card card-detail-screen\">\r\n        <div className=\"mt-3 ml-3 text-center\">\r\n          <h3>Detalle de habitación</h3>\r\n        </div>\r\n        <div data-testid=\"room-detail-view\" className=\"card-rooms\">\r\n          <div className=\"row pt-5\">\r\n            <div className=\"col\">\r\n              {roomSelected ? (\r\n                <CardInformation\r\n                  key={selectedRoom}\r\n                  data={roomSelected}\r\n                  selectedRoom={selectedRoom}\r\n                  saveBookingRoom={saveBookingRoom}\r\n                />\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  <h5>No hay datos para mostrar</h5>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-50 d-block p-4\">\r\n          <Link to={'/rooms'}>\r\n            <button\r\n              type=\"button\"\r\n              id=\"btn-back-detail\"\r\n              className=\"btn btn-secondary w-25 ml-4\"\r\n              data-testid=\"btn-back-detail\"\r\n              onClick={() => null}\r\n            >\r\n              <i className=\"fas fa-arrow-left\"></i>\r\n              {' Atras'}\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nRoomDetailView.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  selectedRoom: PropTypes.number.isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import { saveBookingRoom } from 'app/core/redux/actions/bookings/ActionBookings';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { RoomDetail } from '../containers/RoomDetail';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return {\r\n    listRooms: state.rooms.listRooms,\r\n    selectedRoom: state.rooms.selectedRoomId,\r\n    isLoading: state.main.isLoading,\r\n    errorMessage: state.main.errorMessage,\r\n  };\r\n};\r\n\r\nexport const ManageDetail = connect(mapStateToProps, { saveBookingRoom })(\r\n  RoomDetail\r\n);\r\n","import { IErrorToast } from 'app/core/redux/modelo/IStateMain';\r\nimport ToastError from 'app/shared/components/ToastError';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { IBooking } from '../../../Book/models/Booking';\r\nimport { RoomDetailView } from '../../components/roomDetail';\r\nimport { IRoom } from '../../models/Room';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface IRoomsDetailProps {\r\n  listRooms: Array<IRoom>;\r\n  selectedRoom: number;\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n  isLoading: boolean;\r\n  errorMessage: IErrorToast;\r\n}\r\n\r\nexport const RoomDetail: React.FC<IRoomsDetailProps> = ({\r\n  listRooms,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n  isLoading,\r\n  errorMessage,\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (errorMessage.message !== '') {\r\n      errorMessage.type === 'rooms-save-book' &&\r\n        toast.error(errorMessage.message);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    <DivContainer data-testid=\"room-detail\">\r\n      <ToastError />\r\n      <RoomDetailView\r\n        listRooms={listRooms}\r\n        selectedRoom={selectedRoom}\r\n        saveBookingRoom={saveBookingRoom}\r\n        isLoading={isLoading}\r\n      />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nRoomDetail.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  selectedRoom: PropTypes.number.isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.shape({\r\n    message: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageDetail } from '../hoc/ManageDetail';\r\n\r\nconst DetailPage: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Layout\r\n      title=\"Detalle de habitación\"\r\n      description=\"Detalles de tu habitación\"\r\n    >\r\n      <ManageDetail />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nDetailPage.displayName = 'DetailRoomPage';\r\n\r\nexport default DetailPage;\r\n","/**\r\n * Valida la siguiente fecha valida del campo Fecha de salida\r\n * según la fecha seleccionada en el campo Fecha ingreso\r\n * @param currentDate Fecha actual\r\n * @param fromDate Fecha inicial\r\n * @param minDate mínima fecha incial\r\n * @returns\r\n */\r\nexport const getNextDate = (\r\n  currentDate: Date,\r\n  fromDate: string,\r\n  minDate: string\r\n) => {\r\n  if (fromDate === minDate) {\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n    return currentDate.toISOString().split('T')[0];\r\n  } else {\r\n    const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\r\n    auxDate.setDate(auxDate.getDate() + 1);\r\n    return auxDate.toISOString().split('T')[0];\r\n  }\r\n};\r\n","export const baseUrl = 'http://find-hotels-json-server.herokuapp.com'; // process.env.REACT_APP_URL_BASE,\r\n","import * as React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n/**\r\n * Componente encargado de renderizar mensaje de error\r\n */\r\nconst ToastError = () => {\r\n  return (\r\n    <div data-testid=\"toast-error\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ToastError;\r\n","import * as React from 'react';\r\n\r\nimport Spinner from '../../../../assets/img/loading.gif';\r\n\r\n/**\r\n * Componente encargado de renderizar el spinner de carga\r\n */\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div data-testid=\"view-spinner\" className=\"container-loader\">\r\n        <img\r\n          data-testid=\"view-spinner-loader\"\r\n          src={Spinner}\r\n          alt=\"loading\"\r\n          className=\"img-loader\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Loading;\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.890fa681.gif\";","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface ILayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<ILayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\ninterface ICustomFieldProps {\r\n  /**\r\n   * Título del campo\r\n   */\r\n  label: string;\r\n  /**\r\n   * Icono a mostrar\r\n   */\r\n  icon: string;\r\n  /**\r\n   * Indica si cuenta o no con la propiedad\r\n   */\r\n  value?: boolean;\r\n  /**\r\n   * Valor de la propiedad en texto\r\n   */\r\n  valueText?: string;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\r\n * @param param0\r\n * @returns Sección con item y valor de la habitación\r\n */\r\nexport const CustomField: React.FC<ICustomFieldProps> = ({\r\n  label,\r\n  icon,\r\n  value,\r\n  valueText,\r\n}) => {\r\n  const valueParse = value !== undefined && value === true;\r\n  return (\r\n    <>\r\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\r\n        {label} <i className={`fas ${icon}`}></i> :{' '}\r\n        {valueText && valueText !== '' ? (\r\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\r\n        ) : (\r\n          <i\r\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\r\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\r\n          ></i>\r\n        )}\r\n      </h6>\r\n    </>\r\n  );\r\n};\r\n\r\nCustomField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  valueText: PropTypes.string,\r\n};\r\n","import { getNextDate } from 'app/shared/utils/GetNextDateValid';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  IBooking,\r\n  IFieldsFormBooking,\r\n} from '../../../feature/Book/models/Booking';\r\nimport { IRoom } from '../../../feature/Rooms/models/Room';\r\nimport { CustomField } from '../CustomFieldIcon';\r\nimport { Link } from '../Link';\r\nimport { roomShape } from './model';\r\n\r\ninterface ICardInformationProps {\r\n  /**\r\n   * Información de cada habitación\r\n   */\r\n  data: IRoom;\r\n  /**\r\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\r\n   */\r\n  selectedRoom?: number;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom?: (roomId: number) => void;\r\n  /**\r\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar Card con información de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const CardInformation: React.FC<ICardInformationProps> = ({\r\n  data,\r\n  loadDetailRoom,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <div data-testid=\"card-information\" className=\"card room-item\">\r\n      <div className=\"card-header room-item-header \">\r\n        <h3>{data.hotel.name}</h3>\r\n        <h4>{data.hotel.score}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img\r\n              src={data.image}\r\n              className=\"img-fluid\"\r\n              alt=\"hotel room\"\r\n              width=\"260px\"\r\n              height=\"180px\"\r\n            />\r\n          </div>\r\n          <div className=\"col col-md-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <h5 className=\"card-title\">{data.title}</h5>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4\">\r\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-book w-100\"\r\n                      data-testid=\"form-detail-button-book\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#modalFormBook\"\r\n                      id=\"form-detail-button\"\r\n                    >\r\n                      <i className=\"far fa-calendar-check ml-3\"></i>\r\n                      {' Reservar'}\r\n                    </button>\r\n                    <ModalFormBook\r\n                      saveBookingRoom={saveBookingRoom}\r\n                      dataRoom={data}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  loadDetailRoom && (\r\n                    <Link to={'/rooms/detail'}>\r\n                      <button\r\n                        type=\"button\"\r\n                        id=\"btn-select-detail\"\r\n                        className=\"btn btn-primary btn-book w-100\"\r\n                        data-testid=\"form-button-load-detail\"\r\n                        onClick={() =>\r\n                          loadDetailRoom && loadDetailRoom(data.id)\r\n                        }\r\n                      >\r\n                        <i className=\"far fa-calendar-check ml-3\"></i>\r\n                        {' Seleccionar'}\r\n                      </button>\r\n                    </Link>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-12\">\r\n                <h4>\r\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 d-flex\">\r\n                <CustomField\r\n                  label={'Inicio'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_from}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'-  Fin'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_until}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\">{data.description}</p>\r\n            {selectedRoom && selectedRoom !== -1 && (\r\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\r\n                <p className=\"card-text\">{data.hotel.description}</p>\r\n                <CustomField\r\n                  label={'Dirección'}\r\n                  icon=\"fa-map-marked-alt\"\r\n                  valueText={`${data.hotel.address}`}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Camas'}\r\n                  icon=\"fa-bed\"\r\n                  valueText={`${data.capacity}`}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Aire'}\r\n                  icon=\"fa-wind\"\r\n                  value={data.ac === 'Y'}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Wifi'}\r\n                  icon=\"fa-wifi\"\r\n                  value={data.wifi === 'Y'}\r\n                />\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Parqueadero'}\r\n                  icon=\"fa-car\"\r\n                  value={data.parking === 'Y'}\r\n                />\r\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\r\n\r\n                {selectedRoom && selectedRoom !== -1 && (\r\n                  <StarScore score={data.hotel.stars} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardInformation.propTypes = {\r\n  data: PropTypes.shape(roomShape).isRequired,\r\n  selectedRoom: PropTypes.number,\r\n  loadDetailRoom: PropTypes.func,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IModalFormBookProps {\r\n  /**\r\n   * Información de la reserva a registrar\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n  /**\r\n   * Información de la habitación\r\n   */\r\n  dataRoom: IRoom;\r\n}\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n  fromDateBook: '',\r\n  untilDateBook: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\r\n  name: Yup.string()\r\n    .min(2, 'Nombre muy corto')\r\n    .max(50, 'Nombre muy largo')\r\n    .required('Nacesitamos tu nombre'),\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n  fromDateBook: Yup.string().required('Necesitamos tu fecha de ingreso'),\r\n  untilDateBook: Yup.string().required('Necesitamos tu fecha de salida'),\r\n});\r\n\r\n/**\r\n * Componente encargado de renderizar el modal con el formulario de reservación\r\n * de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const ModalFormBook: React.FC<IModalFormBookProps> = ({\r\n  saveBookingRoom,\r\n  dataRoom,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: IFieldsFormBooking,\r\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\r\n  ) => {\r\n    saveBookingRoom &&\r\n      saveBookingRoom({\r\n        bookData: {\r\n          name: values.name,\r\n          email: values.email,\r\n          identification_type: values.identification_type,\r\n          identification: values.identification,\r\n          fromDateBook: fromDate,\r\n          untilDateBook: values.untilDateBook,\r\n        },\r\n        roomData: dataRoom,\r\n      });\r\n    hideModal();\r\n    setFromDate('');\r\n    resetForm();\r\n  };\r\n\r\n  const hideModal = () => {\r\n    $('#modalFormBook').modal('hide');\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const minDate = currentDate.toISOString().split('T')[0];\r\n  const [fromDate, setFromDate] = React.useState('');\r\n\r\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\r\n  return (\r\n    <>\r\n      <div data-testid=\"modal-form-book\">\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modalFormBook\"\r\n          aria-labelledby=\"modalFormBookLabel\"\r\n          data-testid=\"modal-book\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\r\n                  Completa tu reserva\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ errors, touched, setFieldValue }) => (\r\n                    <Form data-testid=\"modal-book-form\" id=\"form-modal-book\">\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Nombre\r\n                          </label>\r\n                          <Field\r\n                            name=\"name\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: Joe Doe\"\r\n                            data-testid=\"modal-book-form-name\"\r\n                            id=\"book-form-name\"\r\n                          />\r\n                          {errors.name && touched.name ? (\r\n                            <small className=\"text-danger\">{errors.name}</small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Correo electrónico\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control col-12\"\r\n                            data-testid=\"modal-book-form-email\"\r\n                            placeholder=\"eje: joe@email.com\"\r\n                            id=\"book-form-email\"\r\n                          />\r\n                          {errors.email && touched.email ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.email}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de ingreso\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-fromDate\"\r\n                            type=\"date\"\r\n                            name=\"fromDateBook\"\r\n                            id=\"fromDateBook\"\r\n                            min={minDate}\r\n                            value={fromDate}\r\n                            onChange={(\r\n                              e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setFieldValue('fromDateBook', e.target.value);\r\n                              setFromDate(e.target.value);\r\n                            }}\r\n                          />\r\n                          {errors.fromDateBook && touched.fromDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.fromDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de salida\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-untilDate\"\r\n                            type=\"date\"\r\n                            name=\"untilDateBook\"\r\n                            id=\"untilDateBook\"\r\n                            min={nextDate}\r\n                            max={dataRoom.available_until}\r\n                          />\r\n                          {errors.untilDateBook && touched.untilDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.untilDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                            Tipo de identificación\r\n                          </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\" d-block w-100\"\r\n                            aria-label=\".form-select-sm example\"\r\n                            name=\"identification_type\"\r\n                            data-testid=\"modal-book-form-identification-type\"\r\n                            id=\"book-form-select\"\r\n                          >\r\n                            <option value=\"\">Seleccione</option>\r\n                            <option value=\"1\">Cédula de ciudadanía</option>\r\n                            <option value=\"2\">Cédula de extranjeria</option>\r\n                            <option value=\"3\">Nit</option>\r\n                            <option value=\"4\">Pasaporte</option>\r\n                          </Field>\r\n                          {errors.identification_type &&\r\n                          touched.identification_type ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification_type}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label className=\"pr-2\" htmlFor=\"identification\">\r\n                            Identificación\r\n                          </label>\r\n                          <Field\r\n                            name=\"identification\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"eje: 60830147\"\r\n                            data-testid=\"modal-book-form-identification\"\r\n                            id=\"book-form-identification\"\r\n                          />\r\n                          {errors.identification && touched.identification ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between mt-3\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          data-testid=\"modal-book-form-btn-cancel\"\r\n                          id=\"modal-form-btn-cancel\"\r\n                        >\r\n                          Cancelar\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          data-testid=\"modal-book-form-btn-submit\"\r\n                          id=\"modal-form-btn-submit\"\r\n                        >\r\n                          Finalizar\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalFormBook.propTypes = {\r\n  dataRoom: PropTypes.shape(roomShape).isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IStarScoreProps {\r\n  /**\r\n   * Cantidad de estrellas del hotel\r\n   */\r\n  score: number;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar estrellas según el nivel del hotel\r\n */\r\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\r\n  const arrStar = new Array(score);\r\n  arrStar.fill('star', 0);\r\n  return (\r\n    <>\r\n      <div data-testid=\"star-score\">\r\n        {score &&\r\n          arrStar.map((data, index) => (\r\n            <i key={index} className=\"fas fa-star\"></i>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nStarScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n"],"sourceRoot":""}