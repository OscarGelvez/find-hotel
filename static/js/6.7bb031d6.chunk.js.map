{"version":3,"sources":["app/feature/Rooms/components/roomDetail/index.tsx","app/feature/Rooms/containers/RoomDetail/styles.ts","app/feature/Rooms/hoc/ManageDetail.tsx","app/feature/Rooms/containers/RoomDetail/index.tsx","app/feature/Rooms/pages/RoomDetail.tsx","app/core/config/AxiosConfig.ts","app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx"],"names":["RoomDetailView","listRooms","selectedRoom","saveBookingRoom","roomSelected","filter","item","id","data-testid","className","CardInformation","key","data","DivContainer","styled","div","ManageDetail","connect","state","rooms","selectedRoomId","DetailPage","Layout","title","description","displayName","axiosIntance","axios","create","baseURL","timeout","headers","RoomsRepository","get","dataFilter","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","bookingData","post","loadDetailRoom","roomId","type","LOAD_ROOM_DETAIL","payload","listingRoomsAsync","dispacth","then","response","LIST_ROOMS","findRoomsFilter","FINDED_ROOMS","BOOKING_ROOM_SAVED","onFindBooking","findBookingData","children","Helmet","name","content","CustomField","label","icon","value","valueText","undefined","hotel","score","src","image","alt","width","height","dataRoom","Link","to","onClick","available_from","available_until","address","ac","wifi","parking","stars","initialValues","email","identification_type","identification","validationSchema","Yup","shape","min","max","required","ModalFormBook","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","onSubmit","values","resetForm","bookData","roomData","errors","touched","htmlFor","placeholder","as","StarScore","arrStar","Array","fill","map","index"],"mappings":"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","file":"static/js/6.7bb031d6.chunk.js","sourcesContent":["import { CardInformation } from 'app/shared/components/CardInformation';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { BookingData, IRoom } from '../../models/Room';\r\n\r\nexport interface RoomDetailViewProps {\r\n  /**\r\n   * Lista de habitaciones\r\n   */\r\n  listRooms: Array<IRoom>;\r\n  /**\r\n   * Funci贸n necargada de mostrar el detalle de la habitaci贸n\r\n   */\r\n  selectedRoom: number;\r\n  /**\r\n   * Funci贸n encargada de registrar la reservaci贸n\r\n   */\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n}\r\n\r\nexport const RoomDetailView: React.FC<RoomDetailViewProps> = ({\r\n  listRooms,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  const roomSelected = listRooms.filter((item) => item.id === selectedRoom)[0];\r\n  return (\r\n    <>\r\n      <div data-testid=\"room-detail-view\" className=\"card-rooms\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col\">\r\n            <CardInformation\r\n              key={selectedRoom}\r\n              data={roomSelected}\r\n              selectedRoom={selectedRoom}\r\n              saveBookingRoom={saveBookingRoom}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nRoomDetailView.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  selectedRoom: PropTypes.number.isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import { saveBookingRoom } from 'app/core/redux/actions/rooms/ActionsRooms';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { RoomDetail } from '../containers/RoomDetail';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return {\r\n    listRooms: state.rooms.listRooms,\r\n    selectedRoom: state.rooms.selectedRoomId,\r\n  };\r\n};\r\n\r\nexport const ManageDetail = connect(mapStateToProps, { saveBookingRoom })(\r\n  RoomDetail\r\n);\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { RoomDetailView } from '../../components/roomDetail';\r\nimport { BookingData, IRoom } from '../../models/Room';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface RoomsDetailProps {\r\n  listRooms: Array<IRoom>;\r\n  selectedRoom: number;\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n}\r\n\r\nexport const RoomDetail: React.FC<RoomsDetailProps> = ({\r\n  listRooms,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <DivContainer data-testid=\"room-detail\">\r\n      <RoomDetailView\r\n        listRooms={listRooms}\r\n        selectedRoom={selectedRoom}\r\n        saveBookingRoom={saveBookingRoom}\r\n      />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nRoomDetail.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  selectedRoom: PropTypes.number.isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageDetail } from '../hoc/ManageDetail';\r\n\r\nconst DetailPage: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Layout\r\n      title=\"Detalle de habitaci贸n\"\r\n      description=\"Detalles de tu habitaci贸n\"\r\n    >\r\n      <ManageDetail />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nDetailPage.displayName = 'DetailRoomPage';\r\n\r\nexport default DetailPage;\r\n","import axios from 'axios';\r\n\r\nexport const axiosIntance = axios.create({\r\n  baseURL: 'https://find-hotels-json-server.herokuapp.com',\r\n  timeout: 30000,\r\n  headers: { 'X-Custom-Header': 'foobar' },\r\n});\r\n","import { BookingData, fieldsForm } from 'app/feature/Rooms/models/Room';\r\n\r\nimport { axiosIntance } from '../config/AxiosConfig';\r\n\r\n// const NUMERO_REGISTROS = 10;\r\n// const limit = (count: number, p: number) =>\r\n//   `limit=${count}&offset=${p ? p * count : 0}`;\r\n\r\nconst getDataFilter = (data: fieldsForm) => {\r\n  let filterBy = '?';\r\n  if (data.fromDate) {\r\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\r\n  }\r\n  if (data.untilDate) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\r\n      data.untilDate\r\n    }`;\r\n  }\r\n  if (data.capacity) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\r\n      data.capacity\r\n    }`;\r\n  }\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\r\n    data.withAir && data.withAir === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\r\n    data.withParking && data.withParking === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  return filterBy;\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const RoomsRepository = {\r\n  findAllRooms: () => axiosIntance.get('/rooms'),\r\n  findFilterRooms: (dataFilter: fieldsForm) =>\r\n    axiosIntance.get(`/rooms${getDataFilter(dataFilter)}`),\r\n  saveBookingRoom: (bookingData: BookingData) =>\r\n    axiosIntance.post('/booking', bookingData, {\r\n      headers: headers,\r\n    }),\r\n};\r\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\r\nimport {\r\n  BookingData,\r\n  fieldsForm,\r\n  fieldsFormFindBooking,\r\n  IRoom,\r\n} from 'app/feature/Rooms/models/Room';\r\n\r\nimport {\r\n  ActionTypesRooms,\r\n  BOOKING_ROOM_SAVED,\r\n  FINDED_ROOMS,\r\n  LIST_ROOMS,\r\n  LOAD_ROOM_DETAIL,\r\n} from './ActionTypesRooms';\r\n\r\nexport function listingRooms(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: LIST_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function roomsFiltered(rooms: Array<IRoom>): ActionTypesRooms {\r\n  return {\r\n    type: FINDED_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function loadDetailRoom(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: LOAD_ROOM_DETAIL,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function bookingRoomSaved(roomId: number): ActionTypesRooms {\r\n  return {\r\n    type: BOOKING_ROOM_SAVED,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function listingRoomsAsync() {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findAllRooms().then((response: any) => {\r\n      return dispacth(listingRooms(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function findRoomsFilter(dataFilter: fieldsForm) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.findFilterRooms(dataFilter).then((response: any) => {\r\n      return dispacth(roomsFiltered(response.data));\r\n    });\r\n  };\r\n}\r\n\r\nexport function saveBookingRoom(bookingData: BookingData) {\r\n  return function (dispacth: any) {\r\n    RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n      return dispacth(bookingRoomSaved(response.data.id));\r\n    });\r\n  };\r\n}\r\n\r\nexport function onFindBooking(findBookingData: fieldsFormFindBooking) {\r\n  return function (dispacth: any) {\r\n    return null;\r\n    // RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\r\n    //   return dispacth(bookingRoomSaved(response.data.id));\r\n    // });\r\n  };\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface LayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<LayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\ninterface CustomFieldProps {\r\n  /**\r\n   * T铆tulo del campo\r\n   */\r\n  label: string;\r\n  /**\r\n   * Icono a mostrar\r\n   */\r\n  icon: string;\r\n  /**\r\n   * Indica si cuenta o no con la propiedad\r\n   */\r\n  value?: boolean;\r\n  /**\r\n   * Valor de la propiedad en texto\r\n   */\r\n  valueText?: string;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\r\n * @param param0\r\n * @returns Secci贸n con item y valor de la habitaci贸n\r\n */\r\nexport const CustomField: React.FC<CustomFieldProps> = ({\r\n  label,\r\n  icon,\r\n  value,\r\n  valueText,\r\n}) => {\r\n  return (\r\n    <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\r\n      {label} <i className={`fas ${icon}`}></i> :{' '}\r\n      {valueText && valueText !== '' ? (\r\n        <span data-testid=\"custom-field-value-text\">{valueText}</span>\r\n      ) : value !== undefined && value === true ? (\r\n        <i className=\"fas fa-check\" data-testid=\"custom-field-value-true\"></i>\r\n      ) : (\r\n        <i className=\"fas fa-times\" data-testid=\"custom-field-value-false\"></i>\r\n      )}\r\n    </h6>\r\n  );\r\n};\r\n\r\nCustomField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  valueText: PropTypes.string,\r\n};\r\n","import { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  BookingData,\r\n  fieldsFormBooking,\r\n  IRoom,\r\n} from '../../../feature/Rooms/models/Room';\r\nimport { CustomField } from '../CustomFieldIcon';\r\nimport { Link } from '../Link';\r\n\r\ninterface CardInformationProps {\r\n  /**\r\n   * Informaci贸n de cada habitaci贸n\r\n   */\r\n  data: IRoom;\r\n  /**\r\n   * Identificador de la habitaci贸n seleccionada (existe cuando se visualiza como detalle)\r\n   */\r\n  selectedRoom?: number;\r\n  /**\r\n   * Funci贸n necargada de mostrar el detalle de la habitaci贸n\r\n   */\r\n  loadDetailRoom?: (roomId: number) => void;\r\n  /**\r\n   * Funci贸n encargada de registrar la reservaci贸n (existe cuando se visualiza como detalle)\r\n   */\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar Card con informaci贸n de la habitaci贸n\r\n * @param param0\r\n * @returns\r\n */\r\nexport const CardInformation: React.FC<CardInformationProps> = ({\r\n  data,\r\n  loadDetailRoom,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <div data-testid=\"card-information\" className=\"card room-item\">\r\n      <div className=\"card-header room-item-header \">\r\n        <h3>{data.hotel.name}</h3>\r\n        <h4>{data.hotel.score}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img\r\n              src={data.image}\r\n              className=\"img-fluid\"\r\n              alt=\"hotel room\"\r\n              width=\"260px\"\r\n              height=\"180px\"\r\n            />\r\n          </div>\r\n          <div className=\"col col-md-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <h5 className=\"card-title\">{data.title}</h5>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4\">\r\n                {selectedRoom && selectedRoom !== -1 ? (\r\n                  <>\r\n                    <ModalFormBook\r\n                      saveBookingRoom={saveBookingRoom}\r\n                      dataRoom={data}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Link to={'/rooms/detail'}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-book w-100\"\r\n                      data-testid=\"form-button-load-detail\"\r\n                      onClick={() => loadDetailRoom && loadDetailRoom(data.id)}\r\n                    >\r\n                      <i className=\"far fa-calendar-check ml-3\"></i>\r\n                      {' Seleccionar'}\r\n                    </button>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-12\">\r\n                <h4>\r\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 d-flex\">\r\n                <CustomField\r\n                  label={'Inicio'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_from}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'-  Fin'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_until}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\">{data.description}</p>\r\n            {selectedRoom && selectedRoom !== -1 && (\r\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\r\n                <p className=\"card-text\">{data.hotel.description}</p>\r\n                <CustomField\r\n                  label={'Direcci贸n'}\r\n                  icon=\"fa-map-marked-alt\"\r\n                  valueText={`${data.hotel.address}`}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Camas'}\r\n                  icon=\"fa-bed\"\r\n                  valueText={`${data.capacity}`}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Aire'}\r\n                  icon=\"fa-wind\"\r\n                  value={data.ac === 'Y'}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Wifi'}\r\n                  icon=\"fa-wifi\"\r\n                  value={data.wifi === 'Y'}\r\n                />\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Parqueadero'}\r\n                  icon=\"fa-car\"\r\n                  value={data.parking === 'Y'}\r\n                />\r\n                <CustomField label={'Ba帽os'} icon=\"fa-restroom\" value={true} />\r\n\r\n                {selectedRoom && selectedRoom !== -1 && (\r\n                  <StarScore score={data.hotel.stars} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardInformation.propTypes = {\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    hotel: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      address: PropTypes.string.isRequired,\r\n      stars: PropTypes.number.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      score: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    ac: PropTypes.string.isRequired,\r\n    parking: PropTypes.string.isRequired,\r\n    available_from: PropTypes.string.isRequired,\r\n    available_until: PropTypes.string.isRequired,\r\n    wifi: PropTypes.string.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  selectedRoom: PropTypes.number,\r\n  loadDetailRoom: PropTypes.func,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface ModalFormBookProps {\r\n  /**\r\n   * Informaci贸n de la reserva a registrar\r\n   */\r\n  saveBookingRoom?: (bookingData: BookingData) => void;\r\n  /**\r\n   * Informaci贸n de la habitaci贸n\r\n   */\r\n  dataRoom: IRoom;\r\n}\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<fieldsFormBooking>({\r\n  name: Yup.string()\r\n    .min(2, 'Nombre muy corto')\r\n    .max(50, 'Nombre muy largo')\r\n    .required('Nacesitamos tu nombre'),\r\n  email: Yup.string().email('Email no v谩lido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificaci贸n'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificaci贸n'),\r\n});\r\n\r\n/**\r\n * Componente encargado de renderizar el modal con el formulario de reservaci贸n\r\n * de la habitaci贸n\r\n * @param param0\r\n * @returns\r\n */\r\nconst ModalFormBook: React.FC<ModalFormBookProps> = ({\r\n  saveBookingRoom,\r\n  dataRoom,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: fieldsFormBooking,\r\n    { resetForm }: FormikHelpers<fieldsFormBooking>\r\n  ) => {\r\n    saveBookingRoom &&\r\n      saveBookingRoom({\r\n        bookData: {\r\n          name: values.name,\r\n          email: values.email,\r\n          identification_type: values.identification_type,\r\n          identification: values.identification,\r\n        },\r\n        roomData: dataRoom,\r\n      });\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div data-testid=\"modal-form-book\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-book w-100\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#modalFormBook\"\r\n        >\r\n          <i className=\"far fa-calendar-check ml-3\"></i>\r\n          {' Reservar'}\r\n        </button>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modalFormBook\"\r\n          aria-labelledby=\"modalFormBookLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\r\n                  Completa tu reserva\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Nombre\r\n                          </label>\r\n                          <Field\r\n                            name=\"name\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: Joe Doe\"\r\n                          />\r\n                          {errors.name && touched.name ? (\r\n                            <small className=\"text-danger\">{errors.name}</small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Correo electr贸nico\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: joe@email.com\"\r\n                          />\r\n                          {errors.email && touched.email ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.email}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                            Tipo de identificaci贸n\r\n                          </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\" d-block w-100\"\r\n                            aria-label=\".form-select-sm example\"\r\n                            id=\"identification_type\"\r\n                            name=\"identification_type\"\r\n                          >\r\n                            <option value=\"\">Seleccione</option>\r\n                            <option value=\"1\">C茅dula de ciudadan铆a</option>\r\n                            <option value=\"2\">C茅dula de extranjeria</option>\r\n                            <option value=\"3\">Nit</option>\r\n                            <option value=\"4\">Pasaporte</option>\r\n                          </Field>\r\n                          {errors.identification_type &&\r\n                          touched.identification_type ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification_type}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label className=\"pr-2\" htmlFor=\"identification\">\r\n                            Identificaci贸n\r\n                          </label>\r\n                          <Field\r\n                            name=\"identification\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"eje: 60830147\"\r\n                          />\r\n                          {errors.identification && touched.identification ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between mt-3\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                        >\r\n                          Cancelar\r\n                        </button>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Finalizar\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalFormBook.propTypes = {\r\n  dataRoom: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    hotel: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      address: PropTypes.string.isRequired,\r\n      stars: PropTypes.number.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      score: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    ac: PropTypes.string.isRequired,\r\n    parking: PropTypes.string.isRequired,\r\n    available_from: PropTypes.string.isRequired,\r\n    available_until: PropTypes.string.isRequired,\r\n    wifi: PropTypes.string.isRequired,\r\n    capacity: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\n/**\r\n * Componente encargado de renderizar estrellas seg煤n el nivel del hotel\r\n */\r\nconst StarScore: React.FC<StarScoreProps> = ({ score }) => {\r\n  const arrStar = new Array(score);\r\n  arrStar.fill('star', 0);\r\n  return (\r\n    <>\r\n      <div data-testid=\"star-score\">\r\n        {score &&\r\n          arrStar.map((data, index) => (\r\n            <i key={index} className=\"fas fa-star\"></i>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface StarScoreProps {\r\n  /**\r\n   * Cantidad de estrellas del hotel\r\n   */\r\n  score: number;\r\n}\r\n\r\nStarScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n"],"sourceRoot":""}