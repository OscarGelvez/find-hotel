{"version":3,"sources":["app/feature/Rooms/components/roomDetail/index.tsx","app/feature/Rooms/containers/RoomDetail/styles.ts","app/feature/Rooms/hoc/ManageDetail.tsx","app/feature/Rooms/containers/RoomDetail/index.tsx","app/feature/Rooms/pages/DetailPage.tsx","app/core/config/AxiosConfig.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/core/api/bookings.repository.ts","app/core/redux/actions/bookings/ActionBookings.ts"],"names":["RoomDetailView","listRooms","selectedRoom","saveBookingRoom","roomSelected","filter","item","id","data-testid","className","CardInformation","key","data","DivContainer","styled","div","ManageDetail","connect","state","rooms","selectedRoomId","DetailPage","Layout","title","description","displayName","axiosIntance","axios","create","baseURL","process","timeout","headers","children","Helmet","name","content","CustomField","label","icon","value","valueText","valueParse","undefined","loadDetailRoom","hotel","score","src","image","alt","width","height","dataRoom","Link","to","type","onClick","available_from","available_until","address","capacity","ac","wifi","parking","stars","initialValues","email","identification_type","identification","validationSchema","Yup","shape","min","max","required","ModalFormBook","hideModal","$","modal","data-bs-toggle","data-bs-target","aria-labelledby","data-bs-dismiss","aria-label","onSubmit","values","resetForm","bookData","roomData","errors","touched","htmlFor","placeholder","as","StarScore","arrStar","Array","fill","map","index","BookingsRepository","bookingData","post","findBookingData","get","filterData","filterBy","getFilterBook","bookingId","delete","bookingRoomSaved","roomId","BOOKING_ROOM_SAVED","payload","bookingFinded","bookingsFinded","BOOKING_FINDED","bookingDeleted","responseCode","BOOKING_DELETED","dispacth","then","response","catch","err","findBooking","cancelBooking","BOOKING_SELECTED_DELETE"],"mappings":"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","file":"static/js/6.ca627b28.chunk.js","sourcesContent":["import { CardInformation } from 'app/shared/components/CardInformation';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IBooking } from '../../../Book/models/Booking';\nimport { IRoom } from '../../models/Room';\n\nexport interface IRoomDetailViewProps {\n  /**\n   * Lista de habitaciones\n   */\n  listRooms: Array<IRoom>;\n  /**\n   * Funci贸n necargada de mostrar el detalle de la habitaci贸n\n   */\n  selectedRoom: number;\n  /**\n   * Funci贸n encargada de registrar la reservaci贸n\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\nexport const RoomDetailView: React.FC<IRoomDetailViewProps> = ({\n  listRooms,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  const roomSelected = listRooms.filter((item) => item.id === selectedRoom)[0];\n  return (\n    <>\n      <div data-testid=\"room-detail-view\" className=\"card-rooms\">\n        <div className=\"row pt-5\">\n          <div className=\"col\">\n            {roomSelected ? (\n              <CardInformation\n                key={selectedRoom}\n                data={roomSelected}\n                selectedRoom={selectedRoom}\n                saveBookingRoom={saveBookingRoom}\n              />\n            ) : (\n              <div className=\"text-center\">\n                <h5>No hay datos para mostrar</h5>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nRoomDetailView.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  selectedRoom: PropTypes.number.isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import { saveBookingRoom } from 'app/core/redux/actions/bookings/ActionBookings';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { RoomDetail } from '../containers/RoomDetail';\n\nconst mapStateToProps = (state: Istate) => {\n  return {\n    listRooms: state.rooms.listRooms,\n    selectedRoom: state.rooms.selectedRoomId,\n  };\n};\n\nexport const ManageDetail = connect(mapStateToProps, { saveBookingRoom })(\n  RoomDetail\n);\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IBooking } from '../../../Book/models/Booking';\nimport { RoomDetailView } from '../../components/roomDetail';\nimport { IRoom } from '../../models/Room';\nimport { DivContainer } from './styles';\n\ninterface IRoomsDetailProps {\n  listRooms: Array<IRoom>;\n  selectedRoom: number;\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\nexport const RoomDetail: React.FC<IRoomsDetailProps> = ({\n  listRooms,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <DivContainer data-testid=\"room-detail\">\n      <RoomDetailView\n        listRooms={listRooms}\n        selectedRoom={selectedRoom}\n        saveBookingRoom={saveBookingRoom}\n      />\n    </DivContainer>\n  );\n};\n\nRoomDetail.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  selectedRoom: PropTypes.number.isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageDetail } from '../hoc/ManageDetail';\n\nconst DetailPage: React.FC<RouteComponentProps> = () => {\n  return (\n    <Layout\n      title=\"Detalle de habitaci贸n\"\n      description=\"Detalles de tu habitaci贸n\"\n    >\n      <ManageDetail />\n    </Layout>\n  );\n};\n\nDetailPage.displayName = 'DetailRoomPage';\n\nexport default DetailPage;\n","import axios from 'axios';\n\nexport const axiosIntance = axios.create({\n  baseURL: process.env.REACT_APP_URL_BASE,\n  timeout: 30000,\n  headers: { 'X-Custom-Header': 'foobar' },\n});\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\ninterface ICustomFieldProps {\n  /**\n   * T铆tulo del campo\n   */\n  label: string;\n  /**\n   * Icono a mostrar\n   */\n  icon: string;\n  /**\n   * Indica si cuenta o no con la propiedad\n   */\n  value?: boolean;\n  /**\n   * Valor de la propiedad en texto\n   */\n  valueText?: string;\n}\n\n/**\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\n * @param param0\n * @returns Secci贸n con item y valor de la habitaci贸n\n */\nexport const CustomField: React.FC<ICustomFieldProps> = ({\n  label,\n  icon,\n  value,\n  valueText,\n}) => {\n  const valueParse = value !== undefined && value === true;\n  return (\n    <>\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\n        {label} <i className={`fas ${icon}`}></i> :{' '}\n        {valueText && valueText !== '' ? (\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\n        ) : (\n          <i\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\n          ></i>\n        )}\n      </h6>\n    </>\n  );\n};\n\nCustomField.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  valueText: PropTypes.string,\n};\n","import { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  IBooking,\n  IFieldsFormBooking,\n} from '../../../feature/Book/models/Booking';\nimport { IRoom } from '../../../feature/Rooms/models/Room';\nimport { CustomField } from '../CustomFieldIcon';\nimport { Link } from '../Link';\nimport { roomShape } from './model';\n\ninterface ICardInformationProps {\n  /**\n   * Informaci贸n de cada habitaci贸n\n   */\n  data: IRoom;\n  /**\n   * Identificador de la habitaci贸n seleccionada (existe cuando se visualiza como detalle)\n   */\n  selectedRoom?: number;\n  /**\n   * Funci贸n necargada de mostrar el detalle de la habitaci贸n\n   */\n  loadDetailRoom?: (roomId: number) => void;\n  /**\n   * Funci贸n encargada de registrar la reservaci贸n (existe cuando se visualiza como detalle)\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\n/**\n * Componente encargado de renderizar Card con informaci贸n de la habitaci贸n\n * @param param0\n * @returns\n */\nexport const CardInformation: React.FC<ICardInformationProps> = ({\n  data,\n  loadDetailRoom,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <div data-testid=\"card-information\" className=\"card room-item\">\n      <div className=\"card-header room-item-header \">\n        <h3>{data.hotel.name}</h3>\n        <h4>{data.hotel.score}</h4>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col col-md-4\">\n            <img\n              src={data.image}\n              className=\"img-fluid\"\n              alt=\"hotel room\"\n              width=\"260px\"\n              height=\"180px\"\n            />\n          </div>\n          <div className=\"col col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-8\">\n                <h5 className=\"card-title\">{data.title}</h5>\n              </div>\n              <div className=\"col-12 col-lg-4\">\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\n                  <>\n                    <ModalFormBook\n                      saveBookingRoom={saveBookingRoom}\n                      dataRoom={data}\n                    />\n                  </>\n                ) : (\n                  loadDetailRoom && (\n                    <Link to={'/rooms/detail'}>\n                      <button\n                        type=\"button\"\n                        id=\"btn-select-detail\"\n                        className=\"btn btn-primary btn-book w-100\"\n                        data-testid=\"form-button-load-detail\"\n                        onClick={() =>\n                          loadDetailRoom && loadDetailRoom(data.id)\n                        }\n                      >\n                        <i className=\"far fa-calendar-check ml-3\"></i>\n                        {' Seleccionar'}\n                      </button>\n                    </Link>\n                  )\n                )}\n              </div>\n              <div className=\"col-12 col-md-12\">\n                <h4>\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\n                </h4>\n              </div>\n              <div className=\"col-12 col-md-12 d-flex\">\n                <CustomField\n                  label={'Inicio'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_from}\n                />\n\n                <CustomField\n                  label={'-  Fin'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_until}\n                />\n              </div>\n            </div>\n            <p className=\"card-text\">{data.description}</p>\n            {selectedRoom && selectedRoom !== -1 && (\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\n                <p className=\"card-text\">{data.hotel.description}</p>\n                <CustomField\n                  label={'Direcci贸n'}\n                  icon=\"fa-map-marked-alt\"\n                  valueText={`${data.hotel.address}`}\n                />\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Camas'}\n                  icon=\"fa-bed\"\n                  valueText={`${data.capacity}`}\n                />\n\n                <CustomField\n                  label={'Aire'}\n                  icon=\"fa-wind\"\n                  value={data.ac === 'Y'}\n                />\n\n                <CustomField\n                  label={'Wifi'}\n                  icon=\"fa-wifi\"\n                  value={data.wifi === 'Y'}\n                />\n              </div>\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Parqueadero'}\n                  icon=\"fa-car\"\n                  value={data.parking === 'Y'}\n                />\n                <CustomField label={'Ba帽os'} icon=\"fa-restroom\" value={true} />\n\n                {selectedRoom && selectedRoom !== -1 && (\n                  <StarScore score={data.hotel.stars} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardInformation.propTypes = {\n  data: PropTypes.shape(roomShape).isRequired,\n  selectedRoom: PropTypes.number,\n  loadDetailRoom: PropTypes.func,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IModalFormBookProps {\n  /**\n   * Informaci贸n de la reserva a registrar\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Informaci贸n de la habitaci贸n\n   */\n  dataRoom: IRoom;\n}\n\nconst initialValues = {\n  name: '',\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\n  name: Yup.string()\n    .min(2, 'Nombre muy corto')\n    .max(50, 'Nombre muy largo')\n    .required('Nacesitamos tu nombre'),\n  email: Yup.string().email('Email no v谩lido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificaci贸n'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificaci贸n'),\n});\n\n/**\n * Componente encargado de renderizar el modal con el formulario de reservaci贸n\n * de la habitaci贸n\n * @param param0\n * @returns\n */\nconst ModalFormBook: React.FC<IModalFormBookProps> = ({\n  saveBookingRoom,\n  dataRoom,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormBooking,\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\n  ) => {\n    saveBookingRoom &&\n      saveBookingRoom({\n        bookData: {\n          name: values.name,\n          email: values.email,\n          identification_type: values.identification_type,\n          identification: values.identification,\n        },\n        roomData: dataRoom,\n      });\n    hideModal();\n    resetForm();\n  };\n\n  const hideModal = () => {\n    $('#modalFormBook').modal('hide');\n  };\n  return (\n    <>\n      <div data-testid=\"modal-form-book\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-book w-100\"\n          data-testid=\"form-detail-button-book\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#modalFormBook\"\n        >\n          <i className=\"far fa-calendar-check ml-3\"></i>\n          {' Reservar'}\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"modalFormBook\"\n          aria-labelledby=\"modalFormBookLabel\"\n          data-testid=\"modal-book\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\n                  Completa tu reserva\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                >\n                  {({ errors, touched }) => (\n                    <Form data-testid=\"modal-book-form\">\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Nombre\n                          </label>\n                          <Field\n                            name=\"name\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: Joe Doe\"\n                            data-testid=\"modal-book-form-name\"\n                          />\n                          {errors.name && touched.name ? (\n                            <small className=\"text-danger\">{errors.name}</small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Correo electr贸nico\n                          </label>\n                          <Field\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control col-12\"\n                            data-testid=\"modal-book-form-email\"\n                            placeholder=\"eje: joe@email.com\"\n                          />\n                          {errors.email && touched.email ? (\n                            <small className=\"text-danger\">\n                              {errors.email}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-2\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\n                            Tipo de identificaci贸n\n                          </label>\n                          <Field\n                            as=\"select\"\n                            className=\" d-block w-100\"\n                            aria-label=\".form-select-sm example\"\n                            id=\"identification_type\"\n                            name=\"identification_type\"\n                            data-testid=\"modal-book-form-identification-type\"\n                          >\n                            <option value=\"\">Seleccione</option>\n                            <option value=\"1\">C茅dula de ciudadan铆a</option>\n                            <option value=\"2\">C茅dula de extranjeria</option>\n                            <option value=\"3\">Nit</option>\n                            <option value=\"4\">Pasaporte</option>\n                          </Field>\n                          {errors.identification_type &&\n                          touched.identification_type ? (\n                            <small className=\"text-danger\">\n                              {errors.identification_type}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label className=\"pr-2\" htmlFor=\"identification\">\n                            Identificaci贸n\n                          </label>\n                          <Field\n                            name=\"identification\"\n                            className=\"form-control\"\n                            placeholder=\"eje: 60830147\"\n                            data-testid=\"modal-book-form-identification\"\n                          />\n                          {errors.identification && touched.identification ? (\n                            <small className=\"text-danger\">\n                              {errors.identification}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          data-testid=\"modal-book-form-btn-cancel\"\n                        >\n                          Cancelar\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          data-testid=\"modal-book-form-btn-submit\"\n                        >\n                          Finalizar\n                        </button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalFormBook.propTypes = {\n  dataRoom: PropTypes.shape(roomShape).isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IStarScoreProps {\n  /**\n   * Cantidad de estrellas del hotel\n   */\n  score: number;\n}\n\n/**\n * Componente encargado de renderizar estrellas seg煤n el nivel del hotel\n */\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\n  const arrStar = new Array(score);\n  arrStar.fill('star', 0);\n  return (\n    <>\n      <div data-testid=\"star-score\">\n        {score &&\n          arrStar.map((data, index) => (\n            <i key={index} className=\"fas fa-star\"></i>\n          ))}\n      </div>\n    </>\n  );\n};\n\nStarScore.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n","import {\n  IBooking,\n  IFieldsFormFindBooking,\n} from 'app/feature/Book/models/Booking';\n\nimport { axiosIntance } from '../config/AxiosConfig';\n\n/**\n * Funci贸n encargada de armar los filtros en la b煤squeda de la reserva\n * @param filterData\n * @returns cadena filtro\n */\nconst getFilterBook = (filterData: IFieldsFormFindBooking) => {\n  let filterBy = '';\n\n  if (\n    filterData &&\n    filterData.email !== '' &&\n    filterData.identification_type !== '' &&\n    filterData.identification !== ''\n  ) {\n    filterBy = `?bookData.email=${filterData.email}&bookData.identification_type=${filterData.identification_type}&bookData.identification=${filterData.identification}`;\n  }\n\n  return filterBy;\n};\n\nconst headers = {\n  'Content-Type': 'application/json',\n};\n\nexport const BookingsRepository = {\n  /**\n   * Almacena una reservaci贸n en base de datos\n   * @param bookingData datos de la reserva\n   * @returns mensaje de 茅xito\n   */\n  saveBookingRoom: (bookingData: IBooking) =>\n    axiosIntance.post('/booking', bookingData, {\n      headers: headers,\n    }),\n  /**\n   * Consulta una reservaci贸n hecha\n   * @returns arreglo de reservaciones\n   */\n  findBooking: (findBookingData: IFieldsFormFindBooking) =>\n    axiosIntance.get(`/booking${getFilterBook(findBookingData)}`),\n  /**\n   * Elimina una reservaci贸n\n   * @param bookingId Identificador de la reserva\n   * @returns reserva eliminada\n   */\n  cancelBooking: (bookingId: number) =>\n    axiosIntance.delete(`/booking/${bookingId}`),\n};\n","import { BookingsRepository } from 'app/core/api/bookings.repository';\n\nimport {\n  IBooking,\n  IFieldsFormFindBooking,\n} from '../../../../feature/Book/models/Booking';\nimport {\n  BOOKING_DELETED,\n  BOOKING_FINDED,\n  BOOKING_ROOM_SAVED,\n  BOOKING_SELECTED_DELETE,\n  DEFAULT_STATE,\n  IActionTypesBookings,\n} from './ActionTypesBookings';\n\nexport function defaultState(id: number): IActionTypesBookings {\n  return {\n    type: DEFAULT_STATE,\n    payload: id,\n  };\n}\n\nexport function bookingRoomSaved(roomId: number): IActionTypesBookings {\n  return {\n    type: BOOKING_ROOM_SAVED,\n    payload: roomId,\n  };\n}\n\nexport function bookingFinded(\n  bookingsFinded: IBooking[]\n): IActionTypesBookings {\n  return {\n    type: BOOKING_FINDED,\n    payload: bookingsFinded,\n  };\n}\n\nexport function selectedDeleteId(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_SELECTED_DELETE,\n    payload: responseCode,\n  };\n}\n\nexport function bookingDeleted(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_DELETED,\n    payload: responseCode,\n  };\n}\n\nexport function saveBookingRoom(bookingData: IBooking) {\n  return function (dispacth: any) {\n    BookingsRepository.saveBookingRoom(bookingData)\n      .then((response: any) => {\n        return dispacth(bookingRoomSaved(response.data.id));\n      })\n      .catch((err) => {\n        return dispacth(bookingRoomSaved(-1));\n      });\n  };\n}\n\nexport function findBooking(findBookingData: IFieldsFormFindBooking) {\n  return function (dispacth: any) {\n    BookingsRepository.findBooking(findBookingData)\n      .then((response: any) => {\n        return dispacth(bookingFinded(response.data));\n      })\n      .catch((err) => {\n        return dispacth(bookingFinded([]));\n      });\n  };\n}\n\nexport function cancelBooking(bookingId: number) {\n  return function (dispacth: any) {\n    dispacth(selectedDeleteId(bookingId));\n    BookingsRepository.cancelBooking(bookingId)\n      .then((response) => {\n        return dispacth(bookingDeleted(0));\n      })\n      .catch((err) => {\n        return dispacth(bookingDeleted(1));\n      });\n  };\n}\n"],"sourceRoot":""}