{"version":3,"sources":["app/core/redux/actions/rooms/ActionTypesRooms.ts","app/shared/components/Link/index.tsx","assets/img/logoHotel.png","app/shared/components/LazyFallback/styles.ts","app/shared/components/LazyFallback/index.tsx","app/feature/Book/BookingRouter.tsx","app/feature/Rooms/RoomsRouter.tsx","app/shared/components/NavigationHeader/NavBrand/styles.ts","app/shared/components/NavigationHeader/NavBrand/index.tsx","app/shared/components/NavigationHeader/NavItem/styles.ts","app/shared/components/NavigationHeader/NavItem/index.tsx","app/shared/components/NavigationHeader/NavList/styles.ts","app/shared/components/NavigationHeader/NavList/index.tsx","app/shared/components/NavigationHeader/styles.ts","app/shared/components/NavigationHeader/index.tsx","app/AppRouter.tsx","app/core/redux/reductores/rooms/roomsReducers.ts","app/core/redux/reductores/index.ts","app/core/redux/store.ts","app/core/errors/GlobalErrorBoundary/index.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["LIST_ROOMS","FINDED_ROOMS","LOAD_ROOM_DETAIL","BOOKING_ROOM_SAVED","Link","styled","RouterLink","module","exports","SpanFallback","span","Div","div","LazyFallback","BookMainPage","React","BookingRouter","fallback","path","component","MainPage","DetailPage","RoomsRouter","BrandDiv","LogoImg","img","LogoSpan","NavBrand","imgSrc","text","to","replace","src","alt","NavItemDiv","NavItem","label","NavListUl","ul","NavList","items","map","url","key","HeaderNav","nav","NavigationHeader","LogoCeiba","AppRouter","initialState","listRooms","Array","selectedRoomId","combineReducers","rooms","state","action","type","payload","roomId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","GlobalErrorBoundary","props","hasError","error","errorInfo","this","children","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.59e53f95.chunk.js","sourcesContent":["import { IRoom } from 'app/feature/Rooms/models/Room';\r\n\r\nexport const LIST_ROOMS = 'LISTAR_HABITACIONES';\r\nexport const FINDED_ROOMS = 'HABITACIONES_FILTRADAS';\r\nexport const LOAD_ROOM_DETAIL = 'CARGA_HABITACION_SELECCIONADA';\r\nexport const BOOKING_ROOM_SAVED = 'RESERVA_REGISTRADA';\r\n\r\ninterface ListRoomsAction {\r\n  type: typeof LIST_ROOMS;\r\n  payload: IRoom[];\r\n}\r\n\r\ninterface findedRoomsAction {\r\n  type: typeof FINDED_ROOMS;\r\n  payload: IRoom[];\r\n}\r\n\r\ninterface loadRoomDetail {\r\n  type: typeof LOAD_ROOM_DETAIL;\r\n  payload: number;\r\n}\r\n\r\ninterface bookingRoomSaved {\r\n  type: typeof BOOKING_ROOM_SAVED;\r\n  payload: number;\r\n}\r\n\r\n// interface AccionAgregarProducto {\r\n//   type: typeof AGREGAR_PRODUCTO;\r\n//   payload: Producto;\r\n// }\r\n\r\n// interface AccionEliminarProducto {\r\n//   type: typeof ELIMINAR_PRODUCTO;\r\n//   payload: Producto;\r\n// }\r\n\r\nexport type ActionTypesRooms =\r\n  | ListRoomsAction\r\n  | findedRoomsAction\r\n  | loadRoomDetail\r\n  | bookingRoomSaved;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Link = styled(RouterLink)`\r\n  text-decoration: none;\r\n  color: white;\r\n  &:hover {\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/media/logoHotel.1e0431ed.png\";","import styled from 'styled-components';\r\n\r\nexport const SpanFallback = styled.span`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport {};\r\n","import * as React from 'react';\r\n\r\nimport { Div, SpanFallback } from './styles';\r\n\r\nexport const LazyFallback = () => (\r\n  <Div>\r\n    <SpanFallback>Cargando página...</SpanFallback>\r\n  </Div>\r\n);\r\n","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { LazyFallback } from '../../shared/components/LazyFallback';\r\n\r\nconst BookMainPage = React.lazy(() => import('./pages/Book'));\r\n\r\nexport const BookingRouter = () => (\r\n  <React.Suspense fallback={<LazyFallback />}>\r\n    {/* Layout compartido entre las rutas va aquí */}\r\n    <Switch>\r\n      <Route path=\"/\" component={BookMainPage}></Route>\r\n    </Switch>\r\n  </React.Suspense>\r\n);\r\n","import { LazyFallback } from 'app/shared/components/LazyFallback';\r\nimport * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst MainPage = React.lazy(() => import('./pages/Main'));\r\nconst DetailPage = React.lazy(() => import('./pages/RoomDetail'));\r\n\r\nexport const RoomsRouter = () => (\r\n  <React.Suspense fallback={<LazyFallback />}>\r\n    {/* Layout compartido entre las rutas va aquí */}\r\n    <Switch>\r\n      <Route path=\"/rooms/detail\" component={DetailPage}></Route>\r\n      <Route path=\"/rooms\" component={MainPage}></Route>\r\n    </Switch>\r\n  </React.Suspense>\r\n);\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const BrandDiv = styled.div`\r\n  margin: 5px;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  max-height: 70px;\r\n  max-width: 150px;\r\n`;\r\n\r\nexport const LogoSpan = styled.span`\r\n  color: green;\r\n  font-size: calc(18px + 2vmin);\r\n`;\r\n\r\nexport const BrandLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default {};\r\n","import { Link } from 'app/shared/components/Link';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { BrandDiv, LogoImg, LogoSpan } from './styles';\r\n\r\ninterface NavBrandProps {\r\n  imgSrc?: string;\r\n  text: string;\r\n}\r\n\r\nexport const NavBrand: React.FC<NavBrandProps> = ({ imgSrc, text }) => (\r\n  <BrandDiv>\r\n    <Link to=\"/\" replace={true}>\r\n      {imgSrc ? (\r\n        <LogoImg src={imgSrc} alt={text}></LogoImg>\r\n      ) : (\r\n        <LogoSpan>{text}</LogoSpan>\r\n      )}\r\n    </Link>\r\n  </BrandDiv>\r\n);\r\n\r\nNavBrand.propTypes = {\r\n  imgSrc: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NavItemDiv = styled.div`\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport {};\r\n","import { Link } from 'app/shared/components/Link';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { NavItemDiv } from './styles';\r\n\r\ninterface NavItemProps {\r\n  label: string;\r\n  to: string;\r\n}\r\n\r\nexport const NavItem: React.FC<NavItemProps> = ({ label, to }) => (\r\n  <NavItemDiv>\r\n    <Link to={to} replace={true}>\r\n      {label}\r\n    </Link>\r\n  </NavItemDiv>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NavListUl = styled.ul`\r\n  display: flex;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { NavItem } from '../NavItem';\r\nimport { NavListUl } from './styles';\r\n\r\ninterface NavListProps {\r\n  items: { label: string; url: string }[];\r\n}\r\n\r\nexport const NavList: React.FC<NavListProps> = ({ items }) => {\r\n  return (\r\n    <NavListUl>\r\n      {items.map(({ label, url }) => (\r\n        <li key={label}>\r\n          <NavItem label={label} to={url} />\r\n        </li>\r\n      ))}\r\n    </NavListUl>\r\n  );\r\n};\r\n\r\nNavList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderNav = styled.nav`\r\n  display: flex;\r\n  position: relative;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-wrap: wrap;\r\n  flex-wrap: wrap;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n  padding: 0.5rem 1rem;\r\n  background-color: #2962FF;\r\n  box-shadow: 0px 1px 14px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport default {};\r\n","import LogoCeiba from 'assets/img/logoHotel.png';\r\nimport * as React from 'react';\r\n\r\nimport { NavBrand } from './NavBrand';\r\nimport { NavList } from './NavList';\r\nimport { HeaderNav } from './styles';\r\n\r\nexport const NavigationHeader: React.FC = () => {\r\n  const routes = [\r\n    { label: 'Habitaciones', url: '/' },\r\n    { label: 'Reservas', url: '/booking' },\r\n  ];\r\n  return (\r\n    <HeaderNav>\r\n      <NavBrand imgSrc={LogoCeiba} text=\"Find Hotel\"></NavBrand>\r\n      <NavList items={routes} />\r\n    </HeaderNav>\r\n  );\r\n};\r\n","import { BookingRouter } from 'app/feature/Book/BookingRouter';\r\nimport { RoomsRouter } from 'app/feature/Rooms/RoomsRouter';\r\nimport { NavigationHeader } from 'app/shared/components/NavigationHeader';\r\nimport * as React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <NavigationHeader />\r\n      <Switch>\r\n        <Route path=\"/booking\" component={BookingRouter} />\r\n        <Route path=\"/rooms\" component={RoomsRouter} />\r\n        <Redirect to=\"/rooms\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { IRoom } from 'app/feature/Rooms/models/Room';\r\n\r\nimport {\r\n  ActionTypesRooms,\r\n  BOOKING_ROOM_SAVED,\r\n  FINDED_ROOMS,\r\n  LIST_ROOMS,\r\n  LOAD_ROOM_DETAIL,\r\n} from '../../actions/rooms/ActionTypesRooms';\r\nimport { IStateRooms } from '../../modelo/IStateRooms';\r\n\r\nconst initialState: IStateRooms = {\r\n  listRooms: Array<IRoom>(),\r\n  selectedRoomId: -1,\r\n};\r\n\r\nexport default function (\r\n  state = initialState,\r\n  action: ActionTypesRooms\r\n): IStateRooms {\r\n  switch (action.type) {\r\n    case LIST_ROOMS: {\r\n      const rooms = action.payload;\r\n      return {\r\n        ...state,\r\n        listRooms: rooms,\r\n      };\r\n    }\r\n    case FINDED_ROOMS: {\r\n      const rooms = action.payload;\r\n      return {\r\n        ...state,\r\n        listRooms: rooms,\r\n      };\r\n    }\r\n    case LOAD_ROOM_DETAIL: {\r\n      const roomId = action.payload;\r\n      return {\r\n        ...state,\r\n        selectedRoomId: roomId,\r\n      };\r\n    }\r\n    case BOOKING_ROOM_SAVED: {\r\n      return {\r\n        ...state,\r\n        selectedRoomId: -1,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport rooms from './rooms/roomsReducers';\r\n\r\nexport default combineReducers({ rooms });\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reductores';\r\n\r\ndeclare const window: any;\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import * as React from 'react';\r\nimport { ErrorInfo } from 'react';\r\n\r\nexport class GlobalErrorBoundary extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    // Log error to metrics\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Algo salió mal.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { AppRouter } from 'app/AppRouter';\r\nimport store from 'app/core/redux/store';\r\nimport * as React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { GlobalErrorBoundary } from './core/errors/GlobalErrorBoundary';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalErrorBoundary>\r\n      <Provider store={store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    </GlobalErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import './styles.scss';\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}