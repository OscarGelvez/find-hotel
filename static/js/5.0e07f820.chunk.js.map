{"version":3,"sources":["app/feature/Book/components/Booking/index.tsx","app/feature/Book/containers/Booking/styles.ts","app/feature/Book/hoc/ManageBooking.tsx","app/feature/Book/containers/Booking/index.tsx","app/feature/Book/pages/HomeMainPage.tsx","app/core/config/AxiosConfig.ts","app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/Button/index.tsx"],"names":["initialValues","email","identification_type","identification","validationSchema","Yup","shape","required","BookingDetail","onFindBooking","data-testid","className","onSubmit","values","resetForm","errors","touched","htmlFor","name","type","placeholder","as","aria-label","id","value","Button","DivContainer","styled","div","ManageBooking","connect","state","listRooms","rooms","selectedRoom","selectedRoomId","HomeMainPage","Layout","title","description","displayName","axiosIntance","axios","create","baseURL","process","timeout","headers","RoomsRepository","get","dataFilter","data","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","bookingData","post","listingRooms","LIST_ROOMS","payload","loadDetailRoom","roomId","LOAD_ROOM_DETAIL","listingRoomsAsync","dispacth","then","response","findRoomsFilter","saveBookingRoom","BOOKING_ROOM_SAVED","findBookingData","children","Helmet","content","button"],"mappings":"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","file":"static/js/5.0e07f820.chunk.js","sourcesContent":["import { IFieldsFormFindBooking } from 'app/feature/Rooms/models/Room';\nimport { Button } from 'app/shared/components/Button';\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\ninterface IBookingDetail {\n  onFindBooking: (findBookingData: IFieldsFormFindBooking) => void;\n}\n\nconst initialValues = {\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormFindBooking>({\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n});\n\nexport const BookingDetail: React.FC<IBookingDetail> = ({ onFindBooking }) => {\n  const handleSubmit = (\n    values: IFieldsFormFindBooking,\n    { resetForm }: FormikHelpers<IFieldsFormFindBooking>\n  ) => {\n    onFindBooking({\n      email: values.email,\n      identification_type: values.identification_type,\n      identification: values.identification,\n    });\n    resetForm();\n  };\n  return (\n    <>\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\n        <div className=\"row\">\n          <div className=\"card filter-area \">\n            <div className=\"col\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n              >\n                {({ errors, touched }) => (\n                  <Form data-testid=\"form-find-rooms\">\n                    <div className=\"form-group row mb-3 mt-3\">\n                      <div className=\" col-12 col-md-4\">\n                        <label\n                          htmlFor=\"email\"\n                          className=\"col-12 col-form-label\"\n                        >\n                          Correo electrónico*\n                        </label>\n                        <Field\n                          name=\"email\"\n                          type=\"email\"\n                          className=\"form-control col-12\"\n                          placeholder=\"eje: joe@email.com\"\n                        />\n                        {errors.email && touched.email ? (\n                          <small className=\"text-danger\">{errors.email}</small>\n                        ) : null}\n                      </div>\n                      <div className=\"col-12 col-md-4\">\n                        <label\n                          className=\"col-12 col-form-label\"\n                          htmlFor=\"identification_type\"\n                        >\n                          Tipo de identificación*\n                        </label>\n                        <Field\n                          as=\"select\"\n                          className=\" d-block w-100\"\n                          aria-label=\".form-select\"\n                          id=\"identification_type\"\n                          name=\"identification_type\"\n                        >\n                          <option value=\"\">Seleccione</option>\n                          <option value=\"1\">Cédula de ciudadanía</option>\n                          <option value=\"2\">Cédula de extranjeria</option>\n                          <option value=\"3\">Nit</option>\n                          <option value=\"4\">Pasaporte</option>\n                        </Field>\n                        {errors.identification_type &&\n                        touched.identification_type ? (\n                          <small className=\"text-danger\">\n                            {errors.identification_type}\n                          </small>\n                        ) : null}\n                      </div>\n                      <div className=\" col-12 col-md-4\">\n                        <label\n                          className=\"col-12 col-form-label\"\n                          htmlFor=\"identification\"\n                        >\n                          Identificación*\n                        </label>\n                        <Field\n                          name=\"identification\"\n                          className=\"form-control\"\n                          placeholder=\"eje: 60830147\"\n                        />\n                        {errors.identification && touched.identification ? (\n                          <small className=\"text-danger\">\n                            {errors.identification}\n                          </small>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"row text-center\">\n                      <Button type=\"submit\" className=\"btn \">\n                        Buscar\n                      </Button>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nBookingDetail.propTypes = {\n  onFindBooking: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import { onFindBooking } from 'app/core/redux/actions/rooms/ActionsRooms';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { Booking } from '../containers/Booking';\n\nconst mapStateToProps = (state: Istate) => {\n  return {\n    listRooms: state.rooms.listRooms,\n    selectedRoom: state.rooms.selectedRoomId,\n  };\n};\n\nexport const ManageBooking = connect(mapStateToProps, { onFindBooking })(\n  Booking\n);\n","import { IFieldsFormFindBooking } from 'app/feature/Rooms/models/Room';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { BookingDetail } from '../../components/Booking';\nimport { DivContainer } from './styles';\n\ninterface IRoomsProps {\n  onFindBooking: (findBookingData: IFieldsFormFindBooking) => void;\n}\n\nexport const Booking: React.FC<IRoomsProps> = ({ onFindBooking }) => {\n  return (\n    <DivContainer data-testid=\"room\">\n      <BookingDetail onFindBooking={onFindBooking} />\n    </DivContainer>\n  );\n};\n\nBooking.propTypes = {\n  onFindBooking: PropTypes.func.isRequired,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageBooking } from '../hoc/ManageBooking';\n\nconst HomeMainPage: React.FC<RouteComponentProps> = () => (\n  <Layout title=\"Reservar\" description=\"Consulte las reservaciones hechas\">\n    <ManageBooking />\n  </Layout>\n);\n\nHomeMainPage.displayName = 'HomeMainPage';\n\nexport default HomeMainPage;\n","import axios from 'axios';\n\nexport const axiosIntance = axios.create({\n  baseURL: process.env.REACT_APP_URL_BASE,\n  timeout: 30000,\n  headers: { 'X-Custom-Header': 'foobar' },\n});\n","import { IBookingData, IFieldsForm } from 'app/feature/Rooms/models/Room';\n\nimport { axiosIntance } from '../config/AxiosConfig';\n\nconst getDataFilter = (data: IFieldsForm) => {\n  let filterBy = '?';\n  if (data.fromDate) {\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\n  }\n  if (data.untilDate) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\n      data.untilDate\n    }`;\n  }\n  if (data.capacity) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\n      data.capacity\n    }`;\n  }\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\n    data.withAir && data.withAir === true ? 'Y' : 'N'\n  }`;\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\n    data.withParking && data.withParking === true ? 'Y' : 'N'\n  }`;\n\n  return filterBy;\n};\n\nconst headers = {\n  'Content-Type': 'application/json',\n};\n\nexport const RoomsRepository = {\n  findAllRooms: () => axiosIntance.get('/rooms'),\n  findFilterRooms: (dataFilter: IFieldsForm) =>\n    axiosIntance.get(`/rooms${getDataFilter(dataFilter)}`),\n  saveBookingRoom: (bookingData: IBookingData) =>\n    axiosIntance.post('/booking', bookingData, {\n      headers: headers,\n    }),\n};\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\nimport {\n  IBookingData,\n  IFieldsForm,\n  IFieldsFormFindBooking,\n  IRoom,\n} from 'app/feature/Rooms/models/Room';\n\nimport {\n  BOOKING_ROOM_SAVED,\n  IActionTypesRooms,\n  LIST_ROOMS,\n  LOAD_ROOM_DETAIL,\n} from './ActionTypesRooms';\n\nexport function listingRooms(rooms: Array<IRoom>): IActionTypesRooms {\n  return {\n    type: LIST_ROOMS,\n    payload: rooms,\n  };\n}\n\nexport function loadDetailRoom(roomId: number): IActionTypesRooms {\n  return {\n    type: LOAD_ROOM_DETAIL,\n    payload: roomId,\n  };\n}\n\nexport function bookingRoomSaved(roomId: number): IActionTypesRooms {\n  return {\n    type: BOOKING_ROOM_SAVED,\n    payload: roomId,\n  };\n}\n\nexport function listingRoomsAsync() {\n  return function (dispacth: any) {\n    RoomsRepository.findAllRooms().then((response: any) => {\n      return dispacth(listingRooms(response.data));\n    });\n  };\n}\n\nexport function findRoomsFilter(dataFilter: IFieldsForm) {\n  return function (dispacth: any) {\n    RoomsRepository.findFilterRooms(dataFilter).then((response: any) => {\n      return dispacth(listingRooms(response.data));\n    });\n  };\n}\n\nexport function saveBookingRoom(bookingData: IBookingData) {\n  return function (dispacth: any) {\n    RoomsRepository.saveBookingRoom(bookingData).then((response: any) => {\n      return dispacth(bookingRoomSaved(response.data.id));\n    });\n  };\n}\n\nexport function onFindBooking(findBookingData: IFieldsFormFindBooking) {\n  return function (dispacth: any) {\n    return null;\n  };\n}\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: #ffea00;\n  border-radius: 10px;\n  color: #000;\n  height: auto;\n  font-weight: 700;\n  text-align: center;\n  &[disabled] {\n    opacity: 0.3;\n  }\n`;\n"],"sourceRoot":""}