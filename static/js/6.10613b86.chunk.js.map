{"version":3,"sources":["app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/feature/Rooms/components/findRooms/index.tsx","app/feature/Rooms/components/ListRooms/index.tsx","app/feature/Rooms/containers/Rooms/styles.ts","app/feature/Rooms/hoc/ManageRooms.tsx","app/feature/Rooms/containers/Rooms/index.tsx","app/feature/Rooms/pages/MainPage.tsx","app/shared/utils/GetNextDateValid.ts","app/core/config/AxiosConfig.ts","app/shared/components/ToastError/index.tsx","app/shared/components/Loading/index.tsx","assets/img/loading.gif","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/shared/components/Button/index.tsx"],"names":["RoomsRepository","axios","get","baseUrl","dataFilter","data","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","errorDefault","message","type","listingRooms","rooms","LIST_ROOMS","payload","isLoading","loading","IS_LOADING","setError","error","ERROR","initialValues","validationSchema","Yup","shape","notRequired","FindRooms","onSubmit","listAvailableRooms","currentDate","Date","minDate","toISOString","split","React","setFromDate","nextDate","getNextDate","data-testid","className","values","onReset","resetForm","htmlFor","name","id","min","value","required","onChange","e","target","component","aria-label","Button","ListRooms","listRooms","loadDetailRoom","Loading","length","map","index","CardInformation","key","DivContainer","styled","div","ManageRooms","connect","state","main","errorMessage","dispacth","a","then","response","catch","err","findRoomsFilter","roomId","LOAD_ROOM_DETAIL","toast","info","ToastError","MainPage","Layout","title","description","displayName","setDate","getDate","auxDate","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","src","Spinner","alt","module","exports","children","Helmet","content","CustomField","label","icon","valueText","valueParse","undefined","selectedRoom","saveBookingRoom","hotel","score","image","width","height","data-bs-toggle","data-bs-target","dataRoom","Link","to","onClick","available_from","available_until","address","ac","wifi","parking","stars","email","identification_type","identification","fromDateBook","untilDateBook","max","ModalFormBook","hideModal","$","modal","aria-labelledby","data-bs-dismiss","bookData","roomData","errors","touched","setFieldValue","placeholder","as","StarScore","arrStar","Array","fill","button"],"mappings":"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","file":"static/js/6.10613b86.chunk.js","sourcesContent":["import { IFieldsForm } from 'app/feature/Rooms/models/Room';\nimport axios from 'axios';\n\nimport { baseUrl } from '../config/AxiosConfig';\n\n/**\n * Función encargad de armar los filtros para la obtención de hoteles/habitaciones\n * @param data\n * @returns cadena filtro\n */\nconst getDataFilter = (data: IFieldsForm) => {\n  let filterBy = '?';\n  if (data.fromDate) {\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\n  }\n  if (data.untilDate) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\n      data.untilDate\n    }`;\n  }\n  if (data.capacity) {\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\n      data.capacity\n    }`;\n  }\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\n    data.withAir && data.withAir === true ? 'Y' : 'N'\n  }`;\n\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\n    data.withParking && data.withParking === true ? 'Y' : 'N'\n  }`;\n\n  return filterBy;\n};\n\n/**\n * Función encargada de armar los filtros en la búsqueda de la reserva\n * @param filterData\n * @returns cadena filtro\n */\n\nexport const RoomsRepository = {\n  /**\n   * Obtiene todas los hoteles/habitaciones disponibles\n   * @returns arreglo de habitaciones\n   */\n  findAllRooms: () => axios.get(`${baseUrl}/rooms`),\n  /**\n   * Obtiene todas los hoteles/habitaciones disponibles según los filtros\n   * @param dataFilter filtros a aplicar\n   * @returns arreglo de habitaciones\n   */\n  findFilterRooms: (dataFilter: IFieldsForm) =>\n    axios.get(`${baseUrl}/rooms${getDataFilter(dataFilter)}`),\n};\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\nimport { IFieldsForm, IRoom } from 'app/feature/Rooms/models/Room';\n\nimport { IErrorToast } from '../../modelo/IStateMain';\nimport { ERROR, IActionTypesMain, IS_LOADING } from '../main/ActionTypesMain';\nimport {\n  DEFAULT_STATE,\n  IActionTypesRooms,\n  LIST_ROOMS,\n  LOAD_ROOM_DETAIL,\n} from './ActionTypesRooms';\nconst errorDefault = { message: '', type: '' };\n\nexport function defaultState(id: number): IActionTypesRooms {\n  return {\n    type: DEFAULT_STATE,\n    payload: id,\n  };\n}\n\nexport function listingRooms(rooms: Array<IRoom>): IActionTypesRooms {\n  return {\n    type: LIST_ROOMS,\n    payload: rooms,\n  };\n}\n\nexport function loadDetailRoom(roomId: number): IActionTypesRooms {\n  return {\n    type: LOAD_ROOM_DETAIL,\n    payload: roomId,\n  };\n}\n\nexport function isLoading(loading: boolean): IActionTypesMain {\n  return {\n    type: IS_LOADING,\n    payload: loading,\n  };\n}\n\nexport function setError(error: IErrorToast): IActionTypesMain {\n  return {\n    type: ERROR,\n    payload: error,\n  };\n}\n\nexport function listingRoomsAsync() {\n  return async function (dispacth: any) {\n    dispacth(isLoading(true));\n    await RoomsRepository.findAllRooms()\n      .then((response: any) => {\n        dispacth(isLoading(false));\n        dispacth(setError(errorDefault));\n        return dispacth(listingRooms(response.data));\n      })\n      .catch((err) => {\n        dispacth(isLoading(false));\n        dispacth(\n          setError({\n            type: 'rooms',\n            message:\n              'Error al cargar los hoteles. Por favor, intente nuevamente',\n          })\n        );\n        return dispacth(listingRooms([]));\n      });\n  };\n}\n\nexport function findRoomsFilter(dataFilter: IFieldsForm) {\n  return async function (dispacth: any) {\n    dispacth(isLoading(true));\n    await RoomsRepository.findFilterRooms(dataFilter)\n      .then((response: any) => {\n        dispacth(isLoading(false));\n        dispacth(setError(errorDefault));\n        return dispacth(listingRooms(response.data));\n      })\n      .catch((err) => {\n        dispacth(isLoading(false));\n        dispacth(\n          setError({\n            type: 'rooms-filter',\n            message:\n              'No se encotraron resultados. Por favor, intente nuevamente',\n          })\n        );\n        return dispacth(listingRooms([]));\n      });\n  };\n}\n","import { Button } from 'app/shared/components/Button';\nimport { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport { getNextDate } from '../../../../shared/utils/GetNextDateValid';\nimport { IFieldsForm } from '../../models/Room';\n\nexport interface IFindRoomsProps {\n  onSubmit: (payload: IFieldsForm) => void;\n  listAvailableRooms: () => void;\n}\n\nconst initialValues = {\n  fromDate: '',\n  untilDate: '',\n  capacity: '',\n  withAir: false,\n};\n\nconst validationSchema = Yup.object().shape<IFieldsForm>({\n  fromDate: Yup.string().notRequired(),\n  untilDate: Yup.string().notRequired(),\n  capacity: Yup.string().notRequired(),\n  withAir: Yup.boolean().notRequired(),\n  withParking: Yup.boolean().notRequired(),\n});\n\nexport const FindRooms: React.FC<IFindRoomsProps> = ({\n  onSubmit,\n  listAvailableRooms,\n}) => {\n  const handleSubmit = (values: IFieldsForm) => {\n    onSubmit({\n      fromDate: fromDate,\n      untilDate: values.untilDate,\n      capacity: values.capacity,\n      withAir: values.withAir,\n      withParking: values.withParking,\n    });\n  };\n\n  const handleReset = (\n    values: IFieldsForm,\n    { resetForm }: FormikHelpers<IFieldsForm>\n  ) => {\n    setFromDate('');\n    listAvailableRooms();\n  };\n  const currentDate = new Date();\n  const minDate = currentDate.toISOString().split('T')[0];\n  const [fromDate, setFromDate] = React.useState('');\n\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\n  return (\n    <>\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\n        <div className=\"row\">\n          <div className=\"card filter-area \">\n            <div className=\"col\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n                onReset={handleReset}\n              >\n                <Form data-testid=\"form-find-rooms\">\n                  <div className=\"form-group row mb-3 mt-3\">\n                    <label\n                      htmlFor=\"fromDate\"\n                      className=\"col-12 col-sm-6 col-lg-2 col-form-label\"\n                    >\n                      Fecha de ingreso*\n                    </label>\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\n                      <Field\n                        className=\"form-control\"\n                        data-testid=\"form-fromDate\"\n                        type=\"date\"\n                        name=\"fromDate\"\n                        id=\"fromDate\"\n                        min={minDate}\n                        value={fromDate}\n                        required\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setFromDate(e.target.value);\n                        }}\n                      />\n                    </div>\n                    <label\n                      htmlFor=\"untilDate\"\n                      className=\"col-12  col-sm-6 col-lg-2 col-form-label\"\n                    >\n                      Fecha de salida*\n                    </label>\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\n                      <Field\n                        className=\"form-control\"\n                        data-testid=\"form-untilDate\"\n                        type=\"date\"\n                        name=\"untilDate\"\n                        id=\"untilDate\"\n                        required\n                        min={nextDate}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"row mb-4\">\n                    <div className=\"d-flex col-12 col-sm-6 col-lg-4 text-center\">\n                      <label className=\"pr-2\" htmlFor=\"capacity\">\n                        Personas\n                      </label>\n                      <Field\n                        component=\"select\"\n                        className=\" filter-select\"\n                        data-testid=\"form-capacity\"\n                        aria-label=\".form-select-sm example\"\n                        id=\"capacity\"\n                        name=\"capacity\"\n                      >\n                        <option value=\"\">Seleccione</option>\n                        <option value=\"1\">1 adulto</option>\n                        <option value=\"2\">2 adultos</option>\n                        <option value=\"3\">3 adultos</option>\n                        <option value=\"4\">4 adultos</option>\n                      </Field>\n                    </div>\n\n                    <div className=\"col-12 col-sm-6 col-lg-4 text-md-center \">\n                      <Field\n                        type=\"checkbox\"\n                        className=\"m-2\"\n                        data-testid=\"form-withAir\"\n                        aria-label=\"Checkbox find room with air\"\n                        name=\"withAir\"\n                        id=\"withAir\"\n                      />\n                      <label className=\"cursor-pointer\" htmlFor=\"withAir\">\n                        ¿Aire acondicionado?\n                      </label>\n                    </div>\n\n                    <div className=\"col-12 col-lg-4 mt-sm-2 mt-md-0\">\n                      <Field\n                        type=\"checkbox\"\n                        className=\"m-2\"\n                        data-testid=\"form-withParking\"\n                        aria-label=\"Checkbox  find room with parking\"\n                        name=\"withParking\"\n                        id=\"withParking\"\n                      />\n                      <label className=\"cursor-pointer\" htmlFor=\"withParking\">\n                        ¿Parqueadero?\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"text-center mt-5\">\n                    <Button\n                      className=\" w-50\"\n                      data-testid=\"form-button-find\"\n                      type=\"submit\"\n                    >\n                      Encuentralo!\n                    </Button>\n                  </div>\n                  <div className=\"text-center mb-4 mt-1\">\n                    <Button\n                      className=\"button-link\"\n                      data-testid=\"form-button-reset\"\n                      type=\"reset\"\n                    >\n                      limpiar\n                    </Button>\n                  </div>\n                </Form>\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nFindRooms.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  listAvailableRooms: PropTypes.func.isRequired,\n};\n","import { CardInformation } from 'app/shared/components/CardInformation';\nimport Loading from 'app/shared/components/Loading';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IRoom } from '../../models/Room';\n\nexport interface IListRoomsProps {\n  /**\n   * Lista de habitaciones\n   */\n  listRooms: Array<IRoom>;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom: (roomId: number) => void;\n  /**\n   * Indica si se está o no cargando el recurso\n   */\n  isLoading: boolean;\n}\n\nexport const ListRooms: React.FC<IListRoomsProps> = ({\n  listRooms,\n  loadDetailRoom,\n  isLoading,\n}) => {\n  return (\n    <>\n      {isLoading && <Loading />}\n      <div data-testid=\"list-rooms\" className=\"card-rooms\">\n        <div className=\"row pt-5\">\n          <div className=\"col\">\n            {listRooms &&\n              listRooms.length > 0 &&\n              listRooms.map((data, index) => {\n                return (\n                  <CardInformation\n                    key={index}\n                    data={data}\n                    loadDetailRoom={loadDetailRoom}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nListRooms.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  loadDetailRoom: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import {\n  findRoomsFilter,\n  listingRoomsAsync,\n  loadDetailRoom,\n} from 'app/core/redux/actions/rooms/ActionsRooms';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { Rooms } from '../containers/Rooms';\n\nconst mapStateToProps = (state: Istate) => {\n  return {\n    listRooms: state.rooms.listRooms,\n    isLoading: state.main.isLoading,\n    errorMessage: state.main.errorMessage,\n  };\n};\n\nexport const ManageRooms = connect(mapStateToProps, {\n  listAvailableRooms: listingRoomsAsync,\n  findRoomsFilter,\n  loadDetailRoom,\n})(Rooms);\n","import { IErrorToast } from 'app/core/redux/modelo/IStateMain';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { toast } from 'react-toastify';\n\nimport ToastError from '../../../../shared/components/ToastError';\nimport { FindRooms } from '../../components/findRooms';\nimport { ListRooms } from '../../components/ListRooms';\nimport { IFieldsForm, IRoom } from '../../models/Room';\nimport { DivContainer } from './styles';\n\ninterface RoomsProps {\n  listRooms: Array<IRoom>;\n  listAvailableRooms: () => void;\n  findRoomsFilter: (data: IFieldsForm) => void;\n  loadDetailRoom: (roomId: number) => void;\n  isLoading: boolean;\n  errorMessage: IErrorToast;\n}\n\nexport const Rooms: React.FC<RoomsProps> = ({\n  listRooms,\n  listAvailableRooms,\n  findRoomsFilter,\n  loadDetailRoom,\n  isLoading,\n  errorMessage,\n}) => {\n  React.useEffect(() => {\n    if (listRooms && listRooms.length === 0 && errorMessage.message === '') {\n      listAvailableRooms();\n    }\n  }, [listRooms, listAvailableRooms, errorMessage]);\n\n  React.useEffect(() => {\n    if (errorMessage.message !== '') {\n      errorMessage.type === 'rooms'\n        ? toast.error(errorMessage.message)\n        : errorMessage.type === 'rooms-filter' &&\n          toast.info(errorMessage.message);\n    }\n  }, [errorMessage]);\n\n  return (\n    <DivContainer data-testid=\"room\">\n      <ToastError />\n      <FindRooms\n        onSubmit={findRoomsFilter}\n        listAvailableRooms={listAvailableRooms}\n      />\n      <ListRooms\n        listRooms={listRooms}\n        loadDetailRoom={loadDetailRoom}\n        isLoading={isLoading}\n      />\n    </DivContainer>\n  );\n};\n\nRooms.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  listAvailableRooms: PropTypes.func.isRequired,\n  findRoomsFilter: PropTypes.func.isRequired,\n  loadDetailRoom: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageRooms } from '../hoc/ManageRooms';\n\nconst MainPage: React.FC<RouteComponentProps> = () => {\n  return (\n    <Layout title=\"Habitaciones\" description=\"Encuentra tu habitación\">\n      <ManageRooms />\n    </Layout>\n  );\n};\n\nMainPage.displayName = 'HomeMainPage';\n\nexport default MainPage;\n","/**\n * Valida la siguiente fecha valida del campo Fecha de salida\n * según la fecha seleccionada en el campo Fecha ingreso\n * @param currentDate Fecha actual\n * @param fromDate Fecha inicial\n * @param minDate mínima fecha incial\n * @returns\n */\nexport const getNextDate = (\n  currentDate: Date,\n  fromDate: string,\n  minDate: string\n) => {\n  if (fromDate === minDate) {\n    currentDate.setDate(currentDate.getDate() + 1);\n    return currentDate.toISOString().split('T')[0];\n  } else {\n    const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\n    auxDate.setDate(auxDate.getDate() + 1);\n    return auxDate.toISOString().split('T')[0];\n  }\n};\n","export const baseUrl = 'http://find-hotels-json-server.herokuapp.com'; // process.env.REACT_APP_URL_BASE,\n","import * as React from 'react';\nimport { ToastContainer } from 'react-toastify';\n\n/**\n * Componente encargado de renderizar mensaje de error\n */\nconst ToastError = () => {\n  return (\n    <div data-testid=\"toast-error\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n};\nexport default ToastError;\n","import * as React from 'react';\n\nimport Spinner from '../../../../assets/img/loading.gif';\n\n/**\n * Componente encargado de renderizar el spinner de carga\n */\nconst Loading = () => {\n  return (\n    <>\n      <div data-testid=\"view-spinner\" className=\"container-loader\">\n        <img\n          data-testid=\"view-spinner-loader\"\n          src={Spinner}\n          alt=\"loading\"\n          className=\"img-loader\"\n        />\n      </div>\n    </>\n  );\n};\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/loading.890fa681.gif\";","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\ninterface ICustomFieldProps {\n  /**\n   * Título del campo\n   */\n  label: string;\n  /**\n   * Icono a mostrar\n   */\n  icon: string;\n  /**\n   * Indica si cuenta o no con la propiedad\n   */\n  value?: boolean;\n  /**\n   * Valor de la propiedad en texto\n   */\n  valueText?: string;\n}\n\n/**\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\n * @param param0\n * @returns Sección con item y valor de la habitación\n */\nexport const CustomField: React.FC<ICustomFieldProps> = ({\n  label,\n  icon,\n  value,\n  valueText,\n}) => {\n  const valueParse = value !== undefined && value === true;\n  return (\n    <>\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\n        {label} <i className={`fas ${icon}`}></i> :{' '}\n        {valueText && valueText !== '' ? (\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\n        ) : (\n          <i\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\n          ></i>\n        )}\n      </h6>\n    </>\n  );\n};\n\nCustomField.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  valueText: PropTypes.string,\n};\n","import { getNextDate } from 'app/shared/utils/GetNextDateValid';\nimport { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  IBooking,\n  IFieldsFormBooking,\n} from '../../../feature/Book/models/Booking';\nimport { IRoom } from '../../../feature/Rooms/models/Room';\nimport { CustomField } from '../CustomFieldIcon';\nimport { Link } from '../Link';\nimport { roomShape } from './model';\n\ninterface ICardInformationProps {\n  /**\n   * Información de cada habitación\n   */\n  data: IRoom;\n  /**\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\n   */\n  selectedRoom?: number;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom?: (roomId: number) => void;\n  /**\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\n/**\n * Componente encargado de renderizar Card con información de la habitación\n * @param param0\n * @returns\n */\nexport const CardInformation: React.FC<ICardInformationProps> = ({\n  data,\n  loadDetailRoom,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <div data-testid=\"card-information\" className=\"card room-item\">\n      <div className=\"card-header room-item-header \">\n        <h3>{data.hotel.name}</h3>\n        <h4>{data.hotel.score}</h4>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col col-md-4\">\n            <img\n              src={data.image}\n              className=\"img-fluid\"\n              alt=\"hotel room\"\n              width=\"260px\"\n              height=\"180px\"\n            />\n          </div>\n          <div className=\"col col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-8\">\n                <h5 className=\"card-title\">{data.title}</h5>\n              </div>\n              <div className=\"col-12 col-lg-4\">\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\n                  <>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary btn-book w-100\"\n                      data-testid=\"form-detail-button-book\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#modalFormBook\"\n                      id=\"form-detail-button\"\n                    >\n                      <i className=\"far fa-calendar-check ml-3\"></i>\n                      {' Reservar'}\n                    </button>\n                    <ModalFormBook\n                      saveBookingRoom={saveBookingRoom}\n                      dataRoom={data}\n                    />\n                  </>\n                ) : (\n                  loadDetailRoom && (\n                    <Link to={'/rooms/detail'}>\n                      <button\n                        type=\"button\"\n                        id=\"btn-select-detail\"\n                        className=\"btn btn-primary btn-book w-100\"\n                        data-testid=\"form-button-load-detail\"\n                        onClick={() =>\n                          loadDetailRoom && loadDetailRoom(data.id)\n                        }\n                      >\n                        <i className=\"far fa-calendar-check ml-3\"></i>\n                        {' Seleccionar'}\n                      </button>\n                    </Link>\n                  )\n                )}\n              </div>\n              <div className=\"col-12 col-md-12\">\n                <h4>\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\n                </h4>\n              </div>\n              <div className=\"col-12 col-md-12 d-flex\">\n                <CustomField\n                  label={'Inicio'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_from}\n                />\n\n                <CustomField\n                  label={'-  Fin'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_until}\n                />\n              </div>\n            </div>\n            <p className=\"card-text\">{data.description}</p>\n            {selectedRoom && selectedRoom !== -1 && (\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\n                <p className=\"card-text\">{data.hotel.description}</p>\n                <CustomField\n                  label={'Dirección'}\n                  icon=\"fa-map-marked-alt\"\n                  valueText={`${data.hotel.address}`}\n                />\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Camas'}\n                  icon=\"fa-bed\"\n                  valueText={`${data.capacity}`}\n                />\n\n                <CustomField\n                  label={'Aire'}\n                  icon=\"fa-wind\"\n                  value={data.ac === 'Y'}\n                />\n\n                <CustomField\n                  label={'Wifi'}\n                  icon=\"fa-wifi\"\n                  value={data.wifi === 'Y'}\n                />\n              </div>\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Parqueadero'}\n                  icon=\"fa-car\"\n                  value={data.parking === 'Y'}\n                />\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\n\n                {selectedRoom && selectedRoom !== -1 && (\n                  <StarScore score={data.hotel.stars} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardInformation.propTypes = {\n  data: PropTypes.shape(roomShape).isRequired,\n  selectedRoom: PropTypes.number,\n  loadDetailRoom: PropTypes.func,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IModalFormBookProps {\n  /**\n   * Información de la reserva a registrar\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Información de la habitación\n   */\n  dataRoom: IRoom;\n}\n\nconst initialValues = {\n  name: '',\n  email: '',\n  identification_type: '',\n  identification: '',\n  fromDateBook: '',\n  untilDateBook: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\n  name: Yup.string()\n    .min(2, 'Nombre muy corto')\n    .max(50, 'Nombre muy largo')\n    .required('Nacesitamos tu nombre'),\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n  fromDateBook: Yup.string().required('Necesitamos tu fecha de ingreso'),\n  untilDateBook: Yup.string().required('Necesitamos tu fecha de salida'),\n});\n\n/**\n * Componente encargado de renderizar el modal con el formulario de reservación\n * de la habitación\n * @param param0\n * @returns\n */\nexport const ModalFormBook: React.FC<IModalFormBookProps> = ({\n  saveBookingRoom,\n  dataRoom,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormBooking,\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\n  ) => {\n    saveBookingRoom &&\n      saveBookingRoom({\n        bookData: {\n          name: values.name,\n          email: values.email,\n          identification_type: values.identification_type,\n          identification: values.identification,\n          fromDateBook: fromDate,\n          untilDateBook: values.untilDateBook,\n        },\n        roomData: dataRoom,\n      });\n    hideModal();\n    setFromDate('');\n    resetForm();\n  };\n\n  const hideModal = () => {\n    $('#modalFormBook').modal('hide');\n  };\n\n  const currentDate = new Date();\n  const minDate = currentDate.toISOString().split('T')[0];\n  const [fromDate, setFromDate] = React.useState('');\n\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\n  return (\n    <>\n      <div data-testid=\"modal-form-book\">\n        <div\n          className=\"modal fade\"\n          id=\"modalFormBook\"\n          aria-labelledby=\"modalFormBookLabel\"\n          data-testid=\"modal-book\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\n                  Completa tu reserva\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                >\n                  {({ errors, touched, setFieldValue }) => (\n                    <Form data-testid=\"modal-book-form\" id=\"form-modal-book\">\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Nombre\n                          </label>\n                          <Field\n                            name=\"name\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: Joe Doe\"\n                            data-testid=\"modal-book-form-name\"\n                            id=\"book-form-name\"\n                          />\n                          {errors.name && touched.name ? (\n                            <small className=\"text-danger\">{errors.name}</small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Correo electrónico\n                          </label>\n                          <Field\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control col-12\"\n                            data-testid=\"modal-book-form-email\"\n                            placeholder=\"eje: joe@email.com\"\n                            id=\"book-form-email\"\n                          />\n                          {errors.email && touched.email ? (\n                            <small className=\"text-danger\">\n                              {errors.email}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Fecha de ingreso\n                          </label>\n                          <Field\n                            className=\"form-control\"\n                            data-testid=\"form-book-fromDate\"\n                            type=\"date\"\n                            name=\"fromDateBook\"\n                            id=\"fromDateBook\"\n                            min={minDate}\n                            value={fromDate}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setFieldValue('fromDateBook', e.target.value);\n                              setFromDate(e.target.value);\n                            }}\n                          />\n                          {errors.fromDateBook && touched.fromDateBook ? (\n                            <small className=\"text-danger\">\n                              {errors.fromDateBook}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Fecha de salida\n                          </label>\n                          <Field\n                            className=\"form-control\"\n                            data-testid=\"form-book-untilDate\"\n                            type=\"date\"\n                            name=\"untilDateBook\"\n                            id=\"untilDateBook\"\n                            min={nextDate}\n                            max={dataRoom.available_until}\n                          />\n                          {errors.untilDateBook && touched.untilDateBook ? (\n                            <small className=\"text-danger\">\n                              {errors.untilDateBook}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-2\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\n                            Tipo de identificación\n                          </label>\n                          <Field\n                            as=\"select\"\n                            className=\" d-block w-100\"\n                            aria-label=\".form-select-sm example\"\n                            name=\"identification_type\"\n                            data-testid=\"modal-book-form-identification-type\"\n                            id=\"book-form-select\"\n                          >\n                            <option value=\"\">Seleccione</option>\n                            <option value=\"1\">Cédula de ciudadanía</option>\n                            <option value=\"2\">Cédula de extranjeria</option>\n                            <option value=\"3\">Nit</option>\n                            <option value=\"4\">Pasaporte</option>\n                          </Field>\n                          {errors.identification_type &&\n                          touched.identification_type ? (\n                            <small className=\"text-danger\">\n                              {errors.identification_type}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label className=\"pr-2\" htmlFor=\"identification\">\n                            Identificación\n                          </label>\n                          <Field\n                            name=\"identification\"\n                            className=\"form-control\"\n                            placeholder=\"eje: 60830147\"\n                            data-testid=\"modal-book-form-identification\"\n                            id=\"book-form-identification\"\n                          />\n                          {errors.identification && touched.identification ? (\n                            <small className=\"text-danger\">\n                              {errors.identification}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          data-testid=\"modal-book-form-btn-cancel\"\n                          id=\"modal-form-btn-cancel\"\n                        >\n                          Cancelar\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          data-testid=\"modal-book-form-btn-submit\"\n                          id=\"modal-form-btn-submit\"\n                        >\n                          Finalizar\n                        </button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalFormBook.propTypes = {\n  dataRoom: PropTypes.shape(roomShape).isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IStarScoreProps {\n  /**\n   * Cantidad de estrellas del hotel\n   */\n  score: number;\n}\n\n/**\n * Componente encargado de renderizar estrellas según el nivel del hotel\n */\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\n  const arrStar = new Array(score);\n  arrStar.fill('star', 0);\n  return (\n    <>\n      <div data-testid=\"star-score\">\n        {score &&\n          arrStar.map((data, index) => (\n            <i key={index} className=\"fas fa-star\"></i>\n          ))}\n      </div>\n    </>\n  );\n};\n\nStarScore.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: #ffea00;\n  border-radius: 10px;\n  color: #000;\n  height: auto;\n  font-weight: 700;\n  text-align: center;\n  &[disabled] {\n    opacity: 0.3;\n  }\n`;\n"],"sourceRoot":""}