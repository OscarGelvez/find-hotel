{"version":3,"sources":["app/shared/components/Link/index.tsx","app/core/redux/actions/bookings/ActionTypesBookings.ts","app/core/redux/actions/main/ActionTypesMain.ts","app/core/redux/actions/rooms/ActionTypesRooms.ts","assets/img/logoHotel.png","app/shared/components/LazyFallback/styles.ts","app/shared/components/LazyFallback/index.tsx","app/feature/Book/BookingRouter.tsx","app/feature/Rooms/RoomsRouter.tsx","app/shared/components/NavigationHeader/NavBrand/styles.ts","app/shared/components/NavigationHeader/NavBrand/index.tsx","app/shared/components/NavigationHeader/NavItem/styles.ts","app/shared/components/NavigationHeader/NavItem/index.tsx","app/shared/components/NavigationHeader/NavList/styles.ts","app/shared/components/NavigationHeader/NavList/index.tsx","app/shared/components/NavigationHeader/styles.ts","app/shared/components/NavigationHeader/index.tsx","app/AppRouter.tsx","app/core/redux/reductores/bookings/bookingReducer.ts","app/core/redux/reductores/main/mainReducer.ts","app/core/redux/reductores/rooms/roomsReducers.ts","app/core/redux/reductores/index.ts","app/core/redux/store.ts","app/core/errors/GlobalErrorBoundary/index.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["Link","styled","RouterLink","DEFAULT_STATE","BOOKING_ROOM_SAVED","BOOKING_FINDED","BOOKING_DELETED","BOOKING_SELECTED_DELETE","IS_LOADING","ERROR","LIST_ROOMS","LOAD_ROOM_DETAIL","module","exports","SpanFallback","span","Div","div","LazyFallback","BookMainPage","React","BookingRouter","fallback","path","component","MainPage","DetailPage","RoomsRouter","BrandDiv","LogoImg","img","LogoSpan","NavBrand","imgSrc","text","data-testid","to","replace","src","alt","NavItemDiv","NavItem","label","NavListUl","ul","NavList","items","map","url","key","HeaderNav","nav","NavigationHeader","LogoCeiba","AppRouter","initialState","listBookings","deleteBookingId","isLoading","errorMessage","message","type","selectedRoomId","listRooms","combineReducers","rooms","state","action","payload","roomId","bookings","books","code","filter","item","id","bookiId","main","loading","error","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","GlobalErrorBoundary","props","hasError","errorInfo","this","children","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.494bc888.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(RouterLink)`\n  text-decoration: none;\n  color: white;\n  &:hover {\n    color: rgba(0, 0, 0, 0.7);\n  }\n`;\n","import { IBooking } from 'app/feature/Book/models/Booking';\n\nexport const DEFAULT_STATE = 'DEFAULT_STATE';\nexport const BOOKING_ROOM_SAVED = 'RESERVA_REGISTRADA';\nexport const BOOKING_FINDED = 'RESERVAS_ENCONTRADAS';\nexport const BOOKING_DELETED = 'RESERVA_ELIMINADA';\nexport const BOOKING_SELECTED_DELETE = 'RESERVA_A_ELIMINAR';\n\ninterface IDefaultState {\n  type: typeof DEFAULT_STATE;\n  payload: number;\n}\n\ninterface IBookingRoomSaved {\n  type: typeof BOOKING_ROOM_SAVED;\n  payload: number;\n}\n\ninterface IBookingRoomFinded {\n  type: typeof BOOKING_FINDED;\n  payload: IBooking[];\n}\n\ninterface IBookingDeleted {\n  type: typeof BOOKING_DELETED;\n  payload: number;\n}\n\ninterface ISelectDeleteId {\n  type: typeof BOOKING_SELECTED_DELETE;\n  payload: number;\n}\n\nexport type IActionTypesBookings =\n  | IBookingRoomSaved\n  | IBookingRoomFinded\n  | IBookingDeleted\n  | ISelectDeleteId\n  | IDefaultState;\n","import { IErrorToast } from '../../modelo/IStateMain';\n\nexport const DEFAULT_STATE = 'DEFAULT_STATE';\nexport const IS_LOADING = 'CARGANDO_RECURSO';\nexport const ERROR = 'OBTENIENDO_ERROR';\n\ninterface IDefaultState {\n  type: typeof DEFAULT_STATE;\n  payload: boolean;\n}\n\ninterface IIsLoadingAction {\n  type: typeof IS_LOADING;\n  payload: boolean;\n}\n\ninterface IErrorAction {\n  type: typeof ERROR;\n  payload: IErrorToast;\n}\n\nexport type IActionTypesMain = IDefaultState | IIsLoadingAction | IErrorAction;\n","import { IRoom } from 'app/feature/Rooms/models/Room';\n\nexport const DEFAULT_STATE = 'DEFAULT_STATE';\nexport const LIST_ROOMS = 'LISTAR_HABITACIONES';\nexport const LOAD_ROOM_DETAIL = 'CARGA_HABITACION_SELECCIONADA';\n\ninterface IDefaultState {\n  type: typeof DEFAULT_STATE;\n  payload: number;\n}\n\ninterface IListRoomsAction {\n  type: typeof LIST_ROOMS;\n  payload: IRoom[];\n}\n\ninterface ILoadRoomDetail {\n  type: typeof LOAD_ROOM_DETAIL;\n  payload: number;\n}\n\nexport type IActionTypesRooms =\n  | IListRoomsAction\n  | ILoadRoomDetail\n  | IDefaultState;\n","module.exports = __webpack_public_path__ + \"static/media/logoHotel.1e0431ed.png\";","import styled from 'styled-components';\n\nexport const SpanFallback = styled.span`\n  font-weight: bold;\n  font-size: 18px;\n`;\n\nexport const Div = styled.div`\n  margin-top: 10px;\n  margin-left: 10px;\n`;\n\nexport {};\n","import * as React from 'react';\n\nimport { Div, SpanFallback } from './styles';\n\nexport const LazyFallback = () => (\n  <Div>\n    <SpanFallback>Cargando página, espere porfavor...</SpanFallback>\n  </Div>\n);\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { LazyFallback } from '../../shared/components/LazyFallback';\n\nconst BookMainPage = React.lazy(() => import('./pages/HomeMainPage'));\n\nexport const BookingRouter = () => (\n  <React.Suspense fallback={<LazyFallback />}>\n    <Switch>\n      <Route path=\"/\" component={BookMainPage}></Route>\n    </Switch>\n  </React.Suspense>\n);\n","import { LazyFallback } from 'app/shared/components/LazyFallback';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nconst MainPage = React.lazy(() => import('./pages/MainPage'));\nconst DetailPage = React.lazy(() => import('./pages/DetailPage'));\n\nexport const RoomsRouter = () => (\n  <React.Suspense fallback={<LazyFallback />}>\n    {/* Layout compartido entre las rutas va aquí */}\n    <Switch>\n      <Route path=\"/rooms/detail\" component={DetailPage}></Route>\n      <Route path=\"/rooms\" component={MainPage}></Route>\n    </Switch>\n  </React.Suspense>\n);\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BrandDiv = styled.div`\n  margin: 5px;\n`;\n\nexport const LogoImg = styled.img`\n  max-height: 70px;\n  max-width: 150px;\n`;\n\nexport const LogoSpan = styled.span`\n  color: green;\n  font-size: calc(18px + 2vmin);\n`;\n\nexport const BrandLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport default {};\n","import { Link } from 'app/shared/components/Link';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { BrandDiv, LogoImg, LogoSpan } from './styles';\n\ninterface INavBrandProps {\n  imgSrc?: string;\n  text: string;\n}\n\nexport const NavBrand: React.FC<INavBrandProps> = ({ imgSrc, text }) => (\n  <BrandDiv data-testid=\"div-brand\">\n    <Link data-testid=\"link-brand\" to=\"/\" replace={true}>\n      {imgSrc ? (\n        <LogoImg data-testid=\"image-brand\" src={imgSrc} alt={text}></LogoImg>\n      ) : (\n        <LogoSpan data-testid=\"text-brand\">{text}</LogoSpan>\n      )}\n    </Link>\n  </BrandDiv>\n);\n\nNavBrand.propTypes = {\n  imgSrc: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const NavItemDiv = styled.div`\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n\nexport {};\n","import { Link } from 'app/shared/components/Link';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { NavItemDiv } from './styles';\n\ninterface INavItemProps {\n  label: string;\n  to: string;\n}\n\nexport const NavItem: React.FC<INavItemProps> = ({ label, to }) => (\n  <NavItemDiv data-testid=\"nav-item\">\n    <Link data-testid=\"link-nav-item\" to={to} replace={true}>\n      {label}\n    </Link>\n  </NavItemDiv>\n);\n\nNavItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const NavListUl = styled.ul`\n  display: flex;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { NavItem } from '../NavItem';\nimport { NavListUl } from './styles';\n\ninterface INavListProps {\n  items: { label: string; url: string }[];\n}\n\nexport const NavList: React.FC<INavListProps> = ({ items }) => {\n  return (\n    <NavListUl data-testid=\"nav-list\">\n      {items.map(({ label, url }) => (\n        <li key={label} data-testid=\"nav-item-li\">\n          <NavItem label={label} to={url} />\n        </li>\n      ))}\n    </NavListUl>\n  );\n};\n\nNavList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const HeaderNav = styled.nav`\n  display: flex;\n  position: relative;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n  background-color: #2962FF;\n  box-shadow: 0px 1px 14px rgba(0, 0, 0, 0.2);\n`;\n\nexport default {};\n","import LogoCeiba from 'assets/img/logoHotel.png';\nimport * as React from 'react';\n\nimport { NavBrand } from './NavBrand';\nimport { NavList } from './NavList';\nimport { HeaderNav } from './styles';\n\nexport const NavigationHeader: React.FC = () => {\n  const routes = [\n    { label: 'Habitaciones', url: '/' },\n    { label: 'Reservas', url: '/booking' },\n  ];\n  return (\n    <HeaderNav data-testid=\"div-header-nav\">\n      <NavBrand imgSrc={LogoCeiba} text=\"Find Hotel\"></NavBrand>\n      <NavList items={routes} />\n    </HeaderNav>\n  );\n};\n","import { BookingRouter } from 'app/feature/Book/BookingRouter';\nimport { RoomsRouter } from 'app/feature/Rooms/RoomsRouter';\nimport { NavigationHeader } from 'app/shared/components/NavigationHeader';\nimport * as React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nexport const AppRouter = () => {\n  return (\n    <BrowserRouter>\n      <NavigationHeader />\n      <Switch>\n        <Route path=\"/booking\" component={BookingRouter} />\n        <Route path=\"/rooms\" component={RoomsRouter} />\n        <Redirect to=\"/rooms\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","import {\n  BOOKING_DELETED,\n  BOOKING_FINDED,\n  BOOKING_SELECTED_DELETE,\n  IActionTypesBookings,\n} from '../../actions/bookings/ActionTypesBookings';\nimport { IStateBookings } from '../../modelo/IStateBookings';\n\nconst initialState: IStateBookings = {\n  listBookings: [],\n  deleteBookingId: -1,\n};\n\nexport default function (\n  state = initialState,\n  action: IActionTypesBookings\n): IStateBookings {\n  switch (action.type) {\n    case BOOKING_FINDED: {\n      const books = action.payload;\n      return {\n        ...state,\n        listBookings: books,\n      };\n    }\n    case BOOKING_DELETED: {\n      const code = action.payload;\n      return {\n        ...state,\n        listBookings:\n          code === 0\n            ? [\n                ...state.listBookings.filter(\n                  (item) => item.id !== state.deleteBookingId\n                ),\n              ]\n            : state.listBookings,\n        deleteBookingId: code === 0 ? -1 : state.deleteBookingId,\n      };\n    }\n\n    case BOOKING_SELECTED_DELETE: {\n      const bookiId = action.payload;\n      return {\n        ...state,\n        deleteBookingId: bookiId,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  ERROR,\n  IActionTypesMain,\n  IS_LOADING,\n} from '../../actions/main/ActionTypesMain';\nimport { IStateMain } from '../../modelo/IStateMain';\n\nconst initialState: IStateMain = {\n  isLoading: false,\n  errorMessage: { message: '', type: '' },\n};\n\nexport default function (\n  state = initialState,\n  action: IActionTypesMain\n): IStateMain {\n  switch (action.type) {\n    case IS_LOADING: {\n      const loading = action.payload;\n      return {\n        ...state,\n        isLoading: loading,\n      };\n    }\n    case ERROR: {\n      const error = action.payload;\n      return {\n        ...state,\n        errorMessage: error,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  IActionTypesRooms,\n  LIST_ROOMS,\n  LOAD_ROOM_DETAIL,\n} from '../../actions/rooms/ActionTypesRooms';\nimport { IStateRooms } from '../../modelo/IStateRooms';\n\nconst initialState: IStateRooms = {\n  selectedRoomId: -1,\n  listRooms: [],\n};\n\nexport default function (\n  state = initialState,\n  action: IActionTypesRooms\n): IStateRooms {\n  switch (action.type) {\n    case LIST_ROOMS: {\n      const rooms = action.payload;\n      return {\n        ...state,\n        listRooms: rooms,\n      };\n    }\n    case LOAD_ROOM_DETAIL: {\n      const roomId = action.payload;\n      return {\n        ...state,\n        selectedRoomId: roomId,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport bookings from './bookings/bookingReducer';\nimport main from './main/mainReducer';\nimport rooms from './rooms/roomsReducers';\n\nexport default combineReducers({ rooms, bookings, main });\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reductores';\n\ndeclare const window: any;\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import * as React from 'react';\nimport { ErrorInfo } from 'react';\n\nexport class GlobalErrorBoundary extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Log error to metrics\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Algo salió mal.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import { AppRouter } from 'app/AppRouter';\nimport store from 'app/core/redux/store';\nimport * as React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { GlobalErrorBoundary } from './core/errors/GlobalErrorBoundary';\n\nfunction App() {\n  return (\n    <GlobalErrorBoundary>\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    </GlobalErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './styles.scss';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}