{"version":3,"sources":["app/core/api/rooms.repository.ts","app/core/redux/actions/rooms/ActionsRooms.ts","app/feature/Rooms/components/findRooms/index.tsx","app/feature/Rooms/components/ListRooms/index.tsx","app/feature/Rooms/containers/Rooms/styles.ts","app/feature/Rooms/hoc/ManageRooms.tsx","app/feature/Rooms/containers/Rooms/index.tsx","app/feature/Rooms/pages/MainPage.tsx","app/shared/utils/GetNextDateValid.ts","app/core/config/AxiosConfig.ts","app/shared/components/ToastError/index.tsx","app/shared/components/Loading/index.tsx","assets/img/loading.gif","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/shared/components/Button/index.tsx"],"names":["RoomsRepository","axios","get","baseUrl","dataFilter","data","filterBy","fromDate","untilDate","capacity","withAir","withParking","getDataFilter","errorDefault","message","type","listingRooms","rooms","LIST_ROOMS","payload","isLoading","loading","IS_LOADING","setError","error","ERROR","initialValues","validationSchema","Yup","shape","notRequired","FindRooms","onSubmit","listAvailableRooms","currentDate","Date","minDate","toISOString","split","React","setFromDate","nextDate","getNextDate","data-testid","className","values","onReset","resetForm","htmlFor","name","id","min","value","required","onChange","e","target","component","aria-label","Button","ListRooms","listRooms","loadDetailRoom","Loading","length","map","index","CardInformation","key","DivContainer","styled","div","ManageRooms","connect","state","main","errorMessage","dispacth","a","then","response","catch","err","findRoomsFilter","roomId","LOAD_ROOM_DETAIL","toast","info","ToastError","MainPage","Layout","title","description","displayName","setDate","getDate","auxDate","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","src","Spinner","alt","module","exports","children","Helmet","content","CustomField","label","icon","valueText","valueParse","undefined","selectedRoom","saveBookingRoom","hotel","score","image","width","height","data-bs-toggle","data-bs-target","dataRoom","Link","to","onClick","available_from","available_until","address","ac","wifi","parking","stars","email","identification_type","identification","fromDateBook","untilDateBook","max","ModalFormBook","hideModal","$","modal","aria-labelledby","data-bs-dismiss","bookData","roomData","errors","touched","setFieldValue","placeholder","as","StarScore","arrStar","Array","fill","button"],"mappings":"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","file":"static/js/6.0e6c8504.chunk.js","sourcesContent":["import { IFieldsForm } from 'app/feature/Rooms/models/Room';\r\nimport axios from 'axios';\r\n\r\nimport { baseUrl } from '../config/AxiosConfig';\r\n\r\n/**\r\n * Función encargad de armar los filtros para la obtención de hoteles/habitaciones\r\n * @param data\r\n * @returns cadena filtro\r\n */\r\nconst getDataFilter = (data: IFieldsForm) => {\r\n  let filterBy = '?';\r\n  if (data.fromDate) {\r\n    filterBy = `${filterBy}available_from_lte=${data.fromDate}`;\r\n  }\r\n  if (data.untilDate) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}available_until_gte=${\r\n      data.untilDate\r\n    }`;\r\n  }\r\n  if (data.capacity) {\r\n    filterBy = `${filterBy !== '' ? filterBy + '&' : ''}capacity=${\r\n      data.capacity\r\n    }`;\r\n  }\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}ac=${\r\n    data.withAir && data.withAir === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  filterBy = `${filterBy !== '' ? filterBy + '&' : ''}parking=${\r\n    data.withParking && data.withParking === true ? 'Y' : 'N'\r\n  }`;\r\n\r\n  return filterBy;\r\n};\r\n\r\n/**\r\n * Función encargada de armar los filtros en la búsqueda de la reserva\r\n * @param filterData\r\n * @returns cadena filtro\r\n */\r\n\r\nexport const RoomsRepository = {\r\n  /**\r\n   * Obtiene todas los hoteles/habitaciones disponibles\r\n   * @returns arreglo de habitaciones\r\n   */\r\n  findAllRooms: () => axios.get(`${baseUrl}/rooms`),\r\n  /**\r\n   * Obtiene todas los hoteles/habitaciones disponibles según los filtros\r\n   * @param dataFilter filtros a aplicar\r\n   * @returns arreglo de habitaciones\r\n   */\r\n  findFilterRooms: (dataFilter: IFieldsForm) =>\r\n    axios.get(`${baseUrl}/rooms${getDataFilter(dataFilter)}`),\r\n};\r\n","import { RoomsRepository } from 'app/core/api/rooms.repository';\r\nimport { IFieldsForm, IRoom } from 'app/feature/Rooms/models/Room';\r\n\r\nimport { IErrorToast } from '../../modelo/IStateMain';\r\nimport { ERROR, IActionTypesMain, IS_LOADING } from '../main/ActionTypesMain';\r\nimport {\r\n  DEFAULT_STATE,\r\n  IActionTypesRooms,\r\n  LIST_ROOMS,\r\n  LOAD_ROOM_DETAIL,\r\n} from './ActionTypesRooms';\r\nconst errorDefault = { message: '', type: '' };\r\n\r\nexport function defaultState(id: number): IActionTypesRooms {\r\n  return {\r\n    type: DEFAULT_STATE,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function listingRooms(rooms: Array<IRoom>): IActionTypesRooms {\r\n  return {\r\n    type: LIST_ROOMS,\r\n    payload: rooms,\r\n  };\r\n}\r\n\r\nexport function loadDetailRoom(roomId: number): IActionTypesRooms {\r\n  return {\r\n    type: LOAD_ROOM_DETAIL,\r\n    payload: roomId,\r\n  };\r\n}\r\n\r\nexport function isLoading(loading: boolean): IActionTypesMain {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload: loading,\r\n  };\r\n}\r\n\r\nexport function setError(error: IErrorToast): IActionTypesMain {\r\n  return {\r\n    type: ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function listingRoomsAsync() {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await RoomsRepository.findAllRooms()\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(listingRooms(response.data));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'rooms',\r\n            message:\r\n              'Error al cargar los hoteles. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(listingRooms([]));\r\n      });\r\n  };\r\n}\r\n\r\nexport function findRoomsFilter(dataFilter: IFieldsForm) {\r\n  return async function (dispacth: any) {\r\n    dispacth(isLoading(true));\r\n    await RoomsRepository.findFilterRooms(dataFilter)\r\n      .then((response: any) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(setError(errorDefault));\r\n        return dispacth(listingRooms(response.data));\r\n      })\r\n      .catch((err) => {\r\n        dispacth(isLoading(false));\r\n        dispacth(\r\n          setError({\r\n            type: 'rooms-filter',\r\n            message:\r\n              'No se encotraron resultados. Por favor, intente nuevamente',\r\n          })\r\n        );\r\n        return dispacth(listingRooms([]));\r\n      });\r\n  };\r\n}\r\n","import { Button } from 'app/shared/components/Button';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { IFieldsForm } from '../../models/Room';\r\nimport { getNextDate } from '../../../../shared/utils/GetNextDateValid';\r\n\r\nexport interface IFindRoomsProps {\r\n  onSubmit: (payload: IFieldsForm) => void;\r\n  listAvailableRooms: () => void;\r\n}\r\n\r\nconst initialValues = {\r\n  fromDate: '',\r\n  untilDate: '',\r\n  capacity: '',\r\n  withAir: false,\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<IFieldsForm>({\r\n  fromDate: Yup.string().notRequired(),\r\n  untilDate: Yup.string().notRequired(),\r\n  capacity: Yup.string().notRequired(),\r\n  withAir: Yup.boolean().notRequired(),\r\n  withParking: Yup.boolean().notRequired(),\r\n});\r\n\r\nexport const FindRooms: React.FC<IFindRoomsProps> = ({\r\n  onSubmit,\r\n  listAvailableRooms,\r\n}) => {\r\n  const handleSubmit = (values: IFieldsForm) => {\r\n    onSubmit({\r\n      fromDate: fromDate,\r\n      untilDate: values.untilDate,\r\n      capacity: values.capacity,\r\n      withAir: values.withAir,\r\n      withParking: values.withParking,\r\n    });\r\n  };\r\n\r\n  const handleReset = (\r\n    values: IFieldsForm,\r\n    { resetForm }: FormikHelpers<IFieldsForm>\r\n  ) => {\r\n    setFromDate('');\r\n    listAvailableRooms();\r\n  };\r\n  const currentDate = new Date();\r\n  const minDate = currentDate.toISOString().split('T')[0];\r\n  const [fromDate, setFromDate] = React.useState('');\r\n\r\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\r\n  return (\r\n    <>\r\n      <div data-testid=\"find-rooms\" className=\"card-rooms\">\r\n        <div className=\"row\">\r\n          <div className=\"card filter-area \">\r\n            <div className=\"col\">\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n                onReset={handleReset}\r\n              >\r\n                <Form data-testid=\"form-find-rooms\">\r\n                  <div className=\"form-group row mb-3 mt-3\">\r\n                    <label\r\n                      htmlFor=\"fromDate\"\r\n                      className=\"col-12 col-sm-6 col-lg-2 col-form-label\"\r\n                    >\r\n                      Fecha de ingreso*\r\n                    </label>\r\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        data-testid=\"form-fromDate\"\r\n                        type=\"date\"\r\n                        name=\"fromDate\"\r\n                        id=\"fromDate\"\r\n                        min={minDate}\r\n                        value={fromDate}\r\n                        required\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setFromDate(e.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <label\r\n                      htmlFor=\"untilDate\"\r\n                      className=\"col-12  col-sm-6 col-lg-2 col-form-label\"\r\n                    >\r\n                      Fecha de salida*\r\n                    </label>\r\n                    <div className=\"col-12 col-sm-6 col-lg-4\">\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        data-testid=\"form-untilDate\"\r\n                        type=\"date\"\r\n                        name=\"untilDate\"\r\n                        id=\"untilDate\"\r\n                        required\r\n                        min={nextDate}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row mb-4\">\r\n                    <div className=\"d-flex col-12 col-sm-6 col-lg-4 text-center\">\r\n                      <label className=\"pr-2\" htmlFor=\"capacity\">\r\n                        Personas\r\n                      </label>\r\n                      <Field\r\n                        component=\"select\"\r\n                        className=\" filter-select\"\r\n                        data-testid=\"form-capacity\"\r\n                        aria-label=\".form-select-sm example\"\r\n                        id=\"capacity\"\r\n                        name=\"capacity\"\r\n                      >\r\n                        <option value=\"\">Seleccione</option>\r\n                        <option value=\"1\">1 adulto</option>\r\n                        <option value=\"2\">2 adultos</option>\r\n                        <option value=\"3\">3 adultos</option>\r\n                        <option value=\"4\">4 adultos</option>\r\n                      </Field>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-6 col-lg-4 text-md-center \">\r\n                      <Field\r\n                        type=\"checkbox\"\r\n                        className=\"m-2\"\r\n                        data-testid=\"form-withAir\"\r\n                        aria-label=\"Checkbox find room with air\"\r\n                        name=\"withAir\"\r\n                        id=\"withAir\"\r\n                      />\r\n                      <label className=\"cursor-pointer\" htmlFor=\"withAir\">\r\n                        ¿Aire acondicionado?\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 mt-sm-2 mt-md-0\">\r\n                      <Field\r\n                        type=\"checkbox\"\r\n                        className=\"m-2\"\r\n                        data-testid=\"form-withParking\"\r\n                        aria-label=\"Checkbox  find room with parking\"\r\n                        name=\"withParking\"\r\n                        id=\"withParking\"\r\n                      />\r\n                      <label className=\"cursor-pointer\" htmlFor=\"withParking\">\r\n                        ¿Parqueadero?\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center mt-5\">\r\n                    <Button\r\n                      className=\" w-50\"\r\n                      data-testid=\"form-button-find\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Encuentralo!\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"text-center mb-4 mt-1\">\r\n                    <Button\r\n                      className=\"button-link\"\r\n                      data-testid=\"form-button-reset\"\r\n                      type=\"reset\"\r\n                    >\r\n                      limpiar\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFindRooms.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  listAvailableRooms: PropTypes.func.isRequired,\r\n};\r\n","import { CardInformation } from 'app/shared/components/CardInformation';\r\nimport Loading from 'app/shared/components/Loading';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport { IRoom } from '../../models/Room';\r\n\r\nexport interface IListRoomsProps {\r\n  /**\r\n   * Lista de habitaciones\r\n   */\r\n  listRooms: Array<IRoom>;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom: (roomId: number) => void;\r\n  /**\r\n   * Indica si se está o no cargando el recurso\r\n   */\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const ListRooms: React.FC<IListRoomsProps> = ({\r\n  listRooms,\r\n  loadDetailRoom,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div data-testid=\"list-rooms\" className=\"card-rooms\">\r\n        <div className=\"row pt-5\">\r\n          <div className=\"col\">\r\n            {listRooms &&\r\n              listRooms.length > 0 &&\r\n              listRooms.map((data, index) => {\r\n                return (\r\n                  <CardInformation\r\n                    key={index}\r\n                    data={data}\r\n                    loadDetailRoom={loadDetailRoom}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nListRooms.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  loadDetailRoom: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import {\r\n  findRoomsFilter,\r\n  listingRoomsAsync,\r\n  loadDetailRoom,\r\n} from 'app/core/redux/actions/rooms/ActionsRooms';\r\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Rooms } from '../containers/Rooms';\r\n\r\nconst mapStateToProps = (state: Istate) => {\r\n  return {\r\n    listRooms: state.rooms.listRooms,\r\n    isLoading: state.main.isLoading,\r\n    errorMessage: state.main.errorMessage,\r\n  };\r\n};\r\n\r\nexport const ManageRooms = connect(mapStateToProps, {\r\n  listAvailableRooms: listingRoomsAsync,\r\n  findRoomsFilter,\r\n  loadDetailRoom,\r\n})(Rooms);\r\n","import { IErrorToast } from 'app/core/redux/modelo/IStateMain';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ToastError from '../../../../shared/components/ToastError';\r\nimport { FindRooms } from '../../components/findRooms';\r\nimport { ListRooms } from '../../components/ListRooms';\r\nimport { IFieldsForm, IRoom } from '../../models/Room';\r\nimport { DivContainer } from './styles';\r\n\r\ninterface RoomsProps {\r\n  listRooms: Array<IRoom>;\r\n  listAvailableRooms: () => void;\r\n  findRoomsFilter: (data: IFieldsForm) => void;\r\n  loadDetailRoom: (roomId: number) => void;\r\n  isLoading: boolean;\r\n  errorMessage: IErrorToast;\r\n}\r\n\r\nexport const Rooms: React.FC<RoomsProps> = ({\r\n  listRooms,\r\n  listAvailableRooms,\r\n  findRoomsFilter,\r\n  loadDetailRoom,\r\n  isLoading,\r\n  errorMessage,\r\n}) => {\r\n  React.useEffect(() => {\r\n    if (listRooms && listRooms.length === 0 && errorMessage.message === '') {\r\n      listAvailableRooms();\r\n    }\r\n  }, [listRooms, listAvailableRooms, errorMessage]);\r\n\r\n  React.useEffect(() => {\r\n    if (errorMessage.message !== '') {\r\n      errorMessage.type === 'rooms'\r\n        ? toast.error(errorMessage.message)\r\n        : errorMessage.type === 'rooms-filter' &&\r\n          toast.info(errorMessage.message);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    <DivContainer data-testid=\"room\">\r\n      <ToastError />\r\n      <FindRooms\r\n        onSubmit={findRoomsFilter}\r\n        listAvailableRooms={listAvailableRooms}\r\n      />\r\n      <ListRooms\r\n        listRooms={listRooms}\r\n        loadDetailRoom={loadDetailRoom}\r\n        isLoading={isLoading}\r\n      />\r\n    </DivContainer>\r\n  );\r\n};\r\n\r\nRooms.propTypes = {\r\n  listRooms: PropTypes.array.isRequired,\r\n  listAvailableRooms: PropTypes.func.isRequired,\r\n  findRoomsFilter: PropTypes.func.isRequired,\r\n  loadDetailRoom: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.shape({\r\n    message: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import { Layout } from 'app/shared/components/Layout';\r\nimport * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { ManageRooms } from '../hoc/ManageRooms';\r\n\r\nconst MainPage: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Layout title=\"Habitaciones\" description=\"Encuentra tu habitación\">\r\n      <ManageRooms />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMainPage.displayName = 'HomeMainPage';\r\n\r\nexport default MainPage;\r\n","/**\r\n * Valida la siguiente fecha valida del campo Fecha de salida\r\n * según la fecha seleccionada en el campo Fecha ingreso\r\n * @param currentDate Fecha actual\r\n * @param fromDate Fecha inicial\r\n * @param minDate mínima fecha incial\r\n * @returns\r\n */\r\nexport const getNextDate = (\r\n  currentDate: Date,\r\n  fromDate: string,\r\n  minDate: string\r\n) => {\r\n  if (fromDate === minDate) {\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n    return currentDate.toISOString().split('T')[0];\r\n  } else {\r\n    const auxDate = fromDate !== '' ? new Date(fromDate) : currentDate;\r\n    auxDate.setDate(auxDate.getDate() + 1);\r\n    return auxDate.toISOString().split('T')[0];\r\n  }\r\n};\r\n","export const baseUrl = 'http://find-hotels-json-server.herokuapp.com'; // process.env.REACT_APP_URL_BASE,\r\n","import * as React from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n/**\r\n * Componente encargado de renderizar mensaje de error\r\n */\r\nconst ToastError = () => {\r\n  return (\r\n    <div data-testid=\"toast-error\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default ToastError;\r\n","import * as React from 'react';\r\n\r\nimport Spinner from '../../../../assets/img/loading.gif';\r\n\r\n/**\r\n * Componente encargado de renderizar el spinner de carga\r\n */\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div data-testid=\"view-spinner\" className=\"container-loader\">\r\n        <img\r\n          data-testid=\"view-spinner-loader\"\r\n          src={Spinner}\r\n          alt=\"loading\"\r\n          className=\"img-loader\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Loading;\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.890fa681.gif\";","import styled from 'styled-components';\r\n\r\nexport const DivContainer = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { DivContainer } from './styles';\r\n\r\ninterface ILayoutProps {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const Layout: React.FC<ILayoutProps> = ({\r\n  children,\r\n  title,\r\n  description,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {\r\n          // eslint-disable-next-line\r\n          title && <title>Find hotel | {title}</title>\r\n        }\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  description: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  //@ts-ignore\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\ninterface ICustomFieldProps {\r\n  /**\r\n   * Título del campo\r\n   */\r\n  label: string;\r\n  /**\r\n   * Icono a mostrar\r\n   */\r\n  icon: string;\r\n  /**\r\n   * Indica si cuenta o no con la propiedad\r\n   */\r\n  value?: boolean;\r\n  /**\r\n   * Valor de la propiedad en texto\r\n   */\r\n  valueText?: string;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\r\n * @param param0\r\n * @returns Sección con item y valor de la habitación\r\n */\r\nexport const CustomField: React.FC<ICustomFieldProps> = ({\r\n  label,\r\n  icon,\r\n  value,\r\n  valueText,\r\n}) => {\r\n  const valueParse = value !== undefined && value === true;\r\n  return (\r\n    <>\r\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\r\n        {label} <i className={`fas ${icon}`}></i> :{' '}\r\n        {valueText && valueText !== '' ? (\r\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\r\n        ) : (\r\n          <i\r\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\r\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\r\n          ></i>\r\n        )}\r\n      </h6>\r\n    </>\r\n  );\r\n};\r\n\r\nCustomField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  valueText: PropTypes.string,\r\n};\r\n","import { getNextDate } from 'app/shared/utils/GetNextDateValid';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FormikHelpers } from 'formik/dist/types';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  IBooking,\r\n  IFieldsFormBooking,\r\n} from '../../../feature/Book/models/Booking';\r\nimport { IRoom } from '../../../feature/Rooms/models/Room';\r\nimport { CustomField } from '../CustomFieldIcon';\r\nimport { Link } from '../Link';\r\nimport { roomShape } from './model';\r\n\r\ninterface ICardInformationProps {\r\n  /**\r\n   * Información de cada habitación\r\n   */\r\n  data: IRoom;\r\n  /**\r\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\r\n   */\r\n  selectedRoom?: number;\r\n  /**\r\n   * Función necargada de mostrar el detalle de la habitación\r\n   */\r\n  loadDetailRoom?: (roomId: number) => void;\r\n  /**\r\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar Card con información de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const CardInformation: React.FC<ICardInformationProps> = ({\r\n  data,\r\n  loadDetailRoom,\r\n  selectedRoom,\r\n  saveBookingRoom,\r\n}) => {\r\n  return (\r\n    <div data-testid=\"card-information\" className=\"card room-item\">\r\n      <div className=\"card-header room-item-header \">\r\n        <h3>{data.hotel.name}</h3>\r\n        <h4>{data.hotel.score}</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img\r\n              src={data.image}\r\n              className=\"img-fluid\"\r\n              alt=\"hotel room\"\r\n              width=\"260px\"\r\n              height=\"180px\"\r\n            />\r\n          </div>\r\n          <div className=\"col col-md-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <h5 className=\"card-title\">{data.title}</h5>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4\">\r\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary btn-book w-100\"\r\n                      data-testid=\"form-detail-button-book\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#modalFormBook\"\r\n                      id=\"form-detail-button\"\r\n                    >\r\n                      <i className=\"far fa-calendar-check ml-3\"></i>\r\n                      {' Reservar'}\r\n                    </button>\r\n                    <ModalFormBook\r\n                      saveBookingRoom={saveBookingRoom}\r\n                      dataRoom={data}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  loadDetailRoom && (\r\n                    <Link to={'/rooms/detail'}>\r\n                      <button\r\n                        type=\"button\"\r\n                        id=\"btn-select-detail\"\r\n                        className=\"btn btn-primary btn-book w-100\"\r\n                        data-testid=\"form-button-load-detail\"\r\n                        onClick={() =>\r\n                          loadDetailRoom && loadDetailRoom(data.id)\r\n                        }\r\n                      >\r\n                        <i className=\"far fa-calendar-check ml-3\"></i>\r\n                        {' Seleccionar'}\r\n                      </button>\r\n                    </Link>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"col-12 col-md-12\">\r\n                <h4>\r\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\r\n                </h4>\r\n              </div>\r\n              <div className=\"col-12 col-md-12 d-flex\">\r\n                <CustomField\r\n                  label={'Inicio'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_from}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'-  Fin'}\r\n                  icon=\"fa-calendar-alt\"\r\n                  valueText={data.available_until}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p className=\"card-text\">{data.description}</p>\r\n            {selectedRoom && selectedRoom !== -1 && (\r\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\r\n                <p className=\"card-text\">{data.hotel.description}</p>\r\n                <CustomField\r\n                  label={'Dirección'}\r\n                  icon=\"fa-map-marked-alt\"\r\n                  valueText={`${data.hotel.address}`}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Camas'}\r\n                  icon=\"fa-bed\"\r\n                  valueText={`${data.capacity}`}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Aire'}\r\n                  icon=\"fa-wind\"\r\n                  value={data.ac === 'Y'}\r\n                />\r\n\r\n                <CustomField\r\n                  label={'Wifi'}\r\n                  icon=\"fa-wifi\"\r\n                  value={data.wifi === 'Y'}\r\n                />\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <CustomField\r\n                  label={'Parqueadero'}\r\n                  icon=\"fa-car\"\r\n                  value={data.parking === 'Y'}\r\n                />\r\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\r\n\r\n                {selectedRoom && selectedRoom !== -1 && (\r\n                  <StarScore score={data.hotel.stars} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCardInformation.propTypes = {\r\n  data: PropTypes.shape(roomShape).isRequired,\r\n  selectedRoom: PropTypes.number,\r\n  loadDetailRoom: PropTypes.func,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IModalFormBookProps {\r\n  /**\r\n   * Información de la reserva a registrar\r\n   */\r\n  saveBookingRoom?: (bookingData: IBooking) => void;\r\n  /**\r\n   * Información de la habitación\r\n   */\r\n  dataRoom: IRoom;\r\n}\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  identification_type: '',\r\n  identification: '',\r\n  fromDateBook: '',\r\n  untilDateBook: '',\r\n};\r\n\r\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\r\n  name: Yup.string()\r\n    .min(2, 'Nombre muy corto')\r\n    .max(50, 'Nombre muy largo')\r\n    .required('Nacesitamos tu nombre'),\r\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\r\n  identification_type: Yup.string().required(\r\n    'Necesitamos tu tipo de identificación'\r\n  ),\r\n  identification: Yup.string().required('Necesitamos tu identificación'),\r\n  fromDateBook: Yup.string().required('Necesitamos tu fecha de ingreso'),\r\n  untilDateBook: Yup.string().required('Necesitamos tu fecha de salida'),\r\n});\r\n\r\n/**\r\n * Componente encargado de renderizar el modal con el formulario de reservación\r\n * de la habitación\r\n * @param param0\r\n * @returns\r\n */\r\nexport const ModalFormBook: React.FC<IModalFormBookProps> = ({\r\n  saveBookingRoom,\r\n  dataRoom,\r\n}) => {\r\n  const handleSubmit = (\r\n    values: IFieldsFormBooking,\r\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\r\n  ) => {\r\n    saveBookingRoom &&\r\n      saveBookingRoom({\r\n        bookData: {\r\n          name: values.name,\r\n          email: values.email,\r\n          identification_type: values.identification_type,\r\n          identification: values.identification,\r\n          fromDateBook: fromDate,\r\n          untilDateBook: values.untilDateBook,\r\n        },\r\n        roomData: dataRoom,\r\n      });\r\n    hideModal();\r\n    setFromDate('');\r\n    resetForm();\r\n  };\r\n\r\n  const hideModal = () => {\r\n    $('#modalFormBook').modal('hide');\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const minDate = currentDate.toISOString().split('T')[0];\r\n  const [fromDate, setFromDate] = React.useState('');\r\n\r\n  const nextDate = getNextDate(currentDate, fromDate, minDate);\r\n  return (\r\n    <>\r\n      <div data-testid=\"modal-form-book\">\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modalFormBook\"\r\n          aria-labelledby=\"modalFormBookLabel\"\r\n          data-testid=\"modal-book\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\r\n                  Completa tu reserva\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  {({ errors, touched, setFieldValue }) => (\r\n                    <Form data-testid=\"modal-book-form\" id=\"form-modal-book\">\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Nombre\r\n                          </label>\r\n                          <Field\r\n                            name=\"name\"\r\n                            className=\"form-control col-12\"\r\n                            placeholder=\"eje: Joe Doe\"\r\n                            data-testid=\"modal-book-form-name\"\r\n                            id=\"book-form-name\"\r\n                          />\r\n                          {errors.name && touched.name ? (\r\n                            <small className=\"text-danger\">{errors.name}</small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Correo electrónico\r\n                          </label>\r\n                          <Field\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control col-12\"\r\n                            data-testid=\"modal-book-form-email\"\r\n                            placeholder=\"eje: joe@email.com\"\r\n                            id=\"book-form-email\"\r\n                          />\r\n                          {errors.email && touched.email ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.email}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-3\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de ingreso\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-fromDate\"\r\n                            type=\"date\"\r\n                            name=\"fromDateBook\"\r\n                            id=\"fromDateBook\"\r\n                            min={minDate}\r\n                            value={fromDate}\r\n                            onChange={(\r\n                              e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setFieldValue('fromDateBook', e.target.value);\r\n                              setFromDate(e.target.value);\r\n                            }}\r\n                          />\r\n                          {errors.fromDateBook && touched.fromDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.fromDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"col-12 col-form-label\"\r\n                          >\r\n                            Fecha de salida\r\n                          </label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            data-testid=\"form-book-untilDate\"\r\n                            type=\"date\"\r\n                            name=\"untilDateBook\"\r\n                            id=\"untilDateBook\"\r\n                            min={nextDate}\r\n                            max={dataRoom.available_until}\r\n                          />\r\n                          {errors.untilDateBook && touched.untilDateBook ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.untilDateBook}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-12 col-md-6 \">\r\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\r\n                            Tipo de identificación\r\n                          </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            className=\" d-block w-100\"\r\n                            aria-label=\".form-select-sm example\"\r\n                            name=\"identification_type\"\r\n                            data-testid=\"modal-book-form-identification-type\"\r\n                            id=\"book-form-select\"\r\n                          >\r\n                            <option value=\"\">Seleccione</option>\r\n                            <option value=\"1\">Cédula de ciudadanía</option>\r\n                            <option value=\"2\">Cédula de extranjeria</option>\r\n                            <option value=\"3\">Nit</option>\r\n                            <option value=\"4\">Pasaporte</option>\r\n                          </Field>\r\n                          {errors.identification_type &&\r\n                          touched.identification_type ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification_type}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                        <div className=\" col-12 col-md-6\">\r\n                          <label className=\"pr-2\" htmlFor=\"identification\">\r\n                            Identificación\r\n                          </label>\r\n                          <Field\r\n                            name=\"identification\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"eje: 60830147\"\r\n                            data-testid=\"modal-book-form-identification\"\r\n                            id=\"book-form-identification\"\r\n                          />\r\n                          {errors.identification && touched.identification ? (\r\n                            <small className=\"text-danger\">\r\n                              {errors.identification}\r\n                            </small>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-between mt-3\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          data-testid=\"modal-book-form-btn-cancel\"\r\n                          id=\"modal-form-btn-cancel\"\r\n                        >\r\n                          Cancelar\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          data-testid=\"modal-book-form-btn-submit\"\r\n                          id=\"modal-form-btn-submit\"\r\n                        >\r\n                          Finalizar\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModalFormBook.propTypes = {\r\n  dataRoom: PropTypes.shape(roomShape).isRequired,\r\n  saveBookingRoom: PropTypes.func,\r\n};\r\n\r\ninterface IStarScoreProps {\r\n  /**\r\n   * Cantidad de estrellas del hotel\r\n   */\r\n  score: number;\r\n}\r\n\r\n/**\r\n * Componente encargado de renderizar estrellas según el nivel del hotel\r\n */\r\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\r\n  const arrStar = new Array(score);\r\n  arrStar.fill('star', 0);\r\n  return (\r\n    <>\r\n      <div data-testid=\"star-score\">\r\n        {score &&\r\n          arrStar.map((data, index) => (\r\n            <i key={index} className=\"fas fa-star\"></i>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nStarScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: #ffea00;\r\n  border-radius: 10px;\r\n  color: #000;\r\n  height: auto;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  &[disabled] {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n"],"sourceRoot":""}