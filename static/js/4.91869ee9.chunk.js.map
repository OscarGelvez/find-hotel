{"version":3,"sources":["app/feature/Book/components/findBooking/index.tsx","app/feature/Book/components/listBooking/index.tsx","app/feature/Book/containers/Booking/styles.ts","app/feature/Book/hoc/ManageBooking.tsx","app/feature/Book/containers/Booking/index.tsx","app/feature/Book/pages/HomeMainPage.tsx","app/core/config/AxiosConfig.ts","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/Button/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","app/core/api/bookings.repository.ts","app/core/redux/actions/bookings/ActionBookings.ts"],"names":["initialValues","email","identification_type","identification","validationSchema","Yup","shape","required","FindBookingForm","onFindBooking","data-testid","className","onSubmit","values","resetForm","errors","touched","htmlFor","name","type","placeholder","as","aria-label","id","value","Button","ListBookings","listBookingsFinded","cancelBooking","React","initial","infoModal","setInfoModal","setDataModal","data","length","map","index","key","roomData","hotel","bookData","available_from","title","available_until","capacity","detailRoom","data-bs-toggle","data-bs-target","onClick","confirmDelete","ModalDetailBook","aria-labelledby","data-bs-dismiss","CardInformation","selectedRoom","ModalDeleteBook","DivContainer","styled","div","ManageBooking","connect","state","bookings","listBookings","findBooking","HomeMainPage","Layout","description","displayName","axiosIntance","axios","create","baseURL","process","timeout","headers","CustomField","label","icon","valueText","valueParse","undefined","loadDetailRoom","saveBookingRoom","score","src","image","alt","width","height","dataRoom","Link","to","address","ac","wifi","parking","stars","min","max","ModalFormBook","hideModal","$","modal","StarScore","arrStar","Array","fill","children","Helmet","content","button","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","BookingsRepository","bookingData","post","findBookingData","get","filterData","filterBy","getFilterBook","bookingId","delete","bookingDeleted","responseCode","BOOKING_DELETED","payload","dispacth","then","response","roomId","BOOKING_ROOM_SAVED","bookingsFinded","BOOKING_FINDED","BOOKING_SELECTED_DELETE","catch"],"mappings":"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","file":"static/js/4.91869ee9.chunk.js","sourcesContent":["import { IFieldsFormFindBooking } from 'app/feature/Book/models/Booking';\nimport { Button } from 'app/shared/components/Button';\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\ninterface IFindBookingForm {\n  onFindBooking: (findBookingData: IFieldsFormFindBooking) => void;\n}\n\nconst initialValues = {\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormFindBooking>({\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n});\n\nexport const FindBookingForm: React.FC<IFindBookingForm> = ({\n  onFindBooking,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormFindBooking,\n    { resetForm }: FormikHelpers<IFieldsFormFindBooking>\n  ) => {\n    onFindBooking({\n      email: values.email,\n      identification_type: values.identification_type,\n      identification: values.identification,\n    });\n  };\n  return (\n    <>\n      <div data-testid=\"find-bookings\" className=\"card-rooms\">\n        <div className=\"row\">\n          <div className=\"card filter-area \">\n            <h4 className=\"mt-3\">Encuentra tu reserva</h4>\n            <div className=\"col\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n              >\n                {({ errors, touched }) => (\n                  <Form data-testid=\"form-find-bookings\">\n                    <div className=\"form-group row mb-3 mt-3\">\n                      <div className=\" col-12 col-md-4\">\n                        <label\n                          htmlFor=\"email\"\n                          className=\"col-12 col-form-label\"\n                        >\n                          Correo electrónico*\n                        </label>\n                        <Field\n                          name=\"email\"\n                          data-testid=\"form-bookings-email\"\n                          type=\"email\"\n                          className=\"form-control col-12\"\n                          placeholder=\"eje: joe@email.com\"\n                        />\n                        {errors.email && touched.email ? (\n                          <small className=\"text-danger\">{errors.email}</small>\n                        ) : null}\n                      </div>\n                      <div className=\"col-12 col-md-4\">\n                        <label\n                          className=\"col-12 col-form-label\"\n                          htmlFor=\"identification_type\"\n                        >\n                          Tipo de identificación*\n                        </label>\n                        <Field\n                          as=\"select\"\n                          className=\" d-block w-100\"\n                          data-testid=\"form-bookings-identification_type\"\n                          aria-label=\".form-select\"\n                          id=\"identification_type\"\n                          name=\"identification_type\"\n                        >\n                          <option value=\"\">Seleccione</option>\n                          <option value=\"1\">Cédula de ciudadanía</option>\n                          <option value=\"2\">Cédula de extranjeria</option>\n                          <option value=\"3\">Nit</option>\n                          <option value=\"4\">Pasaporte</option>\n                        </Field>\n                        {errors.identification_type &&\n                        touched.identification_type ? (\n                          <small className=\"text-danger\">\n                            {errors.identification_type}\n                          </small>\n                        ) : null}\n                      </div>\n                      <div className=\" col-12 col-md-4\">\n                        <label\n                          className=\"col-12 col-form-label\"\n                          htmlFor=\"identification\"\n                        >\n                          Identificación*\n                        </label>\n                        <Field\n                          name=\"identification\"\n                          id=\"identification\"\n                          className=\"form-control\"\n                          data-testid=\"form-bookings-identification\"\n                          placeholder=\"eje: 60830147\"\n                        />\n                        {errors.identification && touched.identification ? (\n                          <small className=\"text-danger\">\n                            {errors.identification}\n                          </small>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"mt-4 text-center\">\n                        <Button\n                          type=\"submit\"\n                          className=\"btn w-75\"\n                          data-testid=\"form-bookings-btn-submit\"\n                        >\n                          Buscar\n                        </Button>\n                      </div>\n                      <div className=\"text-center mb-2 mt-1\">\n                        <Button\n                          className=\"button-link\"\n                          data-testid=\"form-bookings-btn-reset\"\n                          type=\"reset\"\n                        >\n                          limpiar\n                        </Button>\n                      </div>\n                    </div>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nFindBookingForm.propTypes = {\n  onFindBooking: PropTypes.func.isRequired,\n};\n","import { IRoom } from 'app/feature/Rooms/models/Room';\nimport { CardInformation } from 'app/shared/components/CardInformation';\nimport { roomShape } from 'app/shared/components/CardInformation/model';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IBooking } from '../../models/Booking';\n\nexport interface IListBookingsProps {\n  /**\n   * Lista de reservaciones\n   */\n  listBookingsFinded: Array<IBooking>;\n  /**\n   * Función necargada de cancelar una reservación\n   */\n  cancelBooking: (bookId: number) => void;\n}\n\nexport const ListBookings: React.FC<IListBookingsProps> = ({\n  listBookingsFinded,\n  cancelBooking,\n}) => {\n  let initial: IRoom | undefined;\n  const [infoModal, setInfoModal] = React.useState(initial);\n\n  const setDataModal = (data: IRoom) => {\n    setInfoModal(data);\n  };\n\n  return (\n    <>\n      <div data-testid=\"list-bookings\" className=\"card-rooms\">\n        <div className=\"row pt-5\">\n          <div className=\"col\">\n            {listBookingsFinded && listBookingsFinded.length > 0 ? (\n              listBookingsFinded.map((data, index) => {\n                return (\n                  <div\n                    data-testid=\"card-information-bookigns\"\n                    className=\"card room-item\"\n                    key={index}\n                  >\n                    <div className=\"card-header book-item-header \">\n                      <h3>{data.roomData.hotel.name}</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <div className=\"row\">\n                        <div className=\"col-12 col-md-6 col-lg-3\">\n                          <h5>A nombre de:</h5>\n                          <span>{data.bookData.name}</span>\n\n                          <h5 className=\"mt-2\">Ingreso:</h5>\n                          <span>{data.roomData.available_from}</span>\n                        </div>\n                        <div className=\"col-12 col-md-6 col-lg-3\">\n                          <h5>Habitación:</h5>\n                          <span>{data.roomData.title}</span>\n                          <h5 className=\"mt-2\">Salida:</h5>\n                          <span>{data.roomData.available_until}</span>\n                        </div>\n\n                        <div className=\"col-12 col-md-6 col-lg-3\">\n                          <h5>Valor:</h5>\n                          <span>{data.roomData.value}</span>\n                          <h5 className=\"mt-2\">Camas:</h5>\n                          <span>{data.roomData.capacity}</span>\n                        </div>\n\n                        <div className=\"col-12 col-md-6 col-lg-3\">\n                          <ModalDetailBook detailRoom={infoModal} />\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary btn-book w-100\"\n                            data-testid=\"list-book-btn-detail\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#modalDetailBook\"\n                            onClick={() => setDataModal(data.roomData)}\n                          >\n                            <i className=\"fas fa-check ml-3\"></i>\n                            {' Detalles'}\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger btn-book w-100 mt-3\"\n                            data-testid=\"list-book-btn-cancel\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#modalDeleteBook\"\n                            onClick={() => setDataModal(data.roomData)}\n                          >\n                            <i className=\"fas fa-times ml-3\"></i>\n                            {' Cancelar'}\n                          </button>\n                          <ModalDeleteBook\n                            detailRoom={infoModal}\n                            confirmDelete={() =>\n                              data.id && cancelBooking(data.id)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"text-center\">\n                <h5>No hay reservas para mostrar</h5>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nListBookings.propTypes = {\n  listBookingsFinded: PropTypes.array.isRequired,\n  cancelBooking: PropTypes.func.isRequired,\n};\n\ninterface IDetailBookProps {\n  /**\n   * Lista de reservaciones\n   */\n  detailRoom?: IRoom;\n}\nconst ModalDetailBook: React.FC<IDetailBookProps> = ({ detailRoom }) => {\n  return (\n    <>\n      <div\n        className=\"modal fade\"\n        id=\"modalDetailBook\"\n        data-testid=\"modal-detail-book\"\n        aria-labelledby=\"modalDetailBookLabel\"\n      >\n        <div className=\"modal-dialog modal-xl\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"modalDetailBookLabel\">\n                Detalles de tu reserva\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              {detailRoom && (\n                <CardInformation\n                  data={detailRoom}\n                  selectedRoom={detailRoom.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalDetailBook.propTypes = {\n  detailRoom: PropTypes.shape(roomShape),\n};\n\ninterface IDeleteBookProps {\n  /**\n   * Lista de reservaciones\n   */\n  detailRoom?: IRoom;\n  /**\n   * Confirma eliminación de la reserva\n   */\n  confirmDelete: () => void;\n}\nconst ModalDeleteBook: React.FC<IDeleteBookProps> = ({\n  detailRoom,\n  confirmDelete,\n}) => {\n  return (\n    <>\n      <div\n        className=\"modal fade\"\n        id=\"modalDeleteBook\"\n        data-testid=\"modal-book-delete\"\n        aria-labelledby=\"modalDeleteBookLabel\"\n      >\n        <div className=\"modal-dialog modal-xl\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"modalDeleteBookLabel\">\n                Eliminar reserva\n              </h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              {detailRoom && (\n                <h5>{`¿Está seguro de eliminar la reserva de ${detailRoom.title} en ${detailRoom.hotel.name}?`}</h5>\n              )}\n            </div>\n            <div className=\"modal-footer\">\n              <div className=\"d-flex justify-content-between w-100\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary w-25\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  No\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger w-25\"\n                  onClick={confirmDelete}\n                >\n                  Sí, eliminar\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalDeleteBook.propTypes = {\n  detailRoom: PropTypes.shape(roomShape),\n  confirmDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import {\n  cancelBooking,\n  findBooking,\n} from 'app/core/redux/actions/bookings/ActionBookings';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { Booking } from '../containers/Booking';\n\nconst mapStateToProps = (state: Istate) => {\n  return {\n    listBookingsFinded: state.bookings.listBookings,\n  };\n};\n\nexport const ManageBooking = connect(mapStateToProps, {\n  findBooking,\n  cancelBooking,\n})(Booking);\n","import {\n  IBooking,\n  IFieldsFormFindBooking,\n} from 'app/feature/Book/models/Booking';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FindBookingForm } from '../../components/findBooking';\nimport { ListBookings } from '../../components/listBooking';\nimport { DivContainer } from './styles';\n\ninterface IBookingsProps {\n  findBooking: (findBookingData: IFieldsFormFindBooking) => void;\n  listBookingsFinded: Array<IBooking>;\n  cancelBooking: (bookId: number) => void;\n}\n\nexport const Booking: React.FC<IBookingsProps> = ({\n  findBooking,\n  listBookingsFinded,\n  cancelBooking,\n}) => {\n  return (\n    <DivContainer data-testid=\"book\">\n      <FindBookingForm onFindBooking={findBooking} />\n      <ListBookings\n        listBookingsFinded={listBookingsFinded}\n        cancelBooking={cancelBooking}\n      />\n    </DivContainer>\n  );\n};\n\nBooking.propTypes = {\n  findBooking: PropTypes.func.isRequired,\n  listBookingsFinded: PropTypes.array.isRequired,\n  cancelBooking: PropTypes.func.isRequired,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageBooking } from '../hoc/ManageBooking';\n\nconst HomeMainPage: React.FC<RouteComponentProps> = () => (\n  <Layout title=\"Reservar\" description=\"Consulte las reservaciones hechas\">\n    <ManageBooking />\n  </Layout>\n);\n\nHomeMainPage.displayName = 'HomeMainPage';\n\nexport default HomeMainPage;\n","import axios from 'axios';\n\nexport const axiosIntance = axios.create({\n  baseURL: process.env.REACT_APP_URL_BASE,\n  timeout: 30000,\n  headers: { 'X-Custom-Header': 'foobar' },\n});\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\ninterface ICustomFieldProps {\n  /**\n   * Título del campo\n   */\n  label: string;\n  /**\n   * Icono a mostrar\n   */\n  icon: string;\n  /**\n   * Indica si cuenta o no con la propiedad\n   */\n  value?: boolean;\n  /**\n   * Valor de la propiedad en texto\n   */\n  valueText?: string;\n}\n\n/**\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\n * @param param0\n * @returns Sección con item y valor de la habitación\n */\nexport const CustomField: React.FC<ICustomFieldProps> = ({\n  label,\n  icon,\n  value,\n  valueText,\n}) => {\n  const valueParse = value !== undefined && value === true;\n  return (\n    <>\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\n        {label} <i className={`fas ${icon}`}></i> :{' '}\n        {valueText && valueText !== '' ? (\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\n        ) : (\n          <i\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\n          ></i>\n        )}\n      </h6>\n    </>\n  );\n};\n\nCustomField.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  valueText: PropTypes.string,\n};\n","import { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  IBooking,\n  IFieldsFormBooking,\n} from '../../../feature/Book/models/Booking';\nimport { IRoom } from '../../../feature/Rooms/models/Room';\nimport { CustomField } from '../CustomFieldIcon';\nimport { Link } from '../Link';\nimport { roomShape } from './model';\n\ninterface ICardInformationProps {\n  /**\n   * Información de cada habitación\n   */\n  data: IRoom;\n  /**\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\n   */\n  selectedRoom?: number;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom?: (roomId: number) => void;\n  /**\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\n/**\n * Componente encargado de renderizar Card con información de la habitación\n * @param param0\n * @returns\n */\nexport const CardInformation: React.FC<ICardInformationProps> = ({\n  data,\n  loadDetailRoom,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <div data-testid=\"card-information\" className=\"card room-item\">\n      <div className=\"card-header room-item-header \">\n        <h3>{data.hotel.name}</h3>\n        <h4>{data.hotel.score}</h4>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col col-md-4\">\n            <img\n              src={data.image}\n              className=\"img-fluid\"\n              alt=\"hotel room\"\n              width=\"260px\"\n              height=\"180px\"\n            />\n          </div>\n          <div className=\"col col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-8\">\n                <h5 className=\"card-title\">{data.title}</h5>\n              </div>\n              <div className=\"col-12 col-lg-4\">\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\n                  <>\n                    <ModalFormBook\n                      saveBookingRoom={saveBookingRoom}\n                      dataRoom={data}\n                    />\n                  </>\n                ) : (\n                  loadDetailRoom && (\n                    <Link to={'/rooms/detail'}>\n                      <button\n                        type=\"button\"\n                        id=\"btn-select-detail\"\n                        className=\"btn btn-primary btn-book w-100\"\n                        data-testid=\"form-button-load-detail\"\n                        onClick={() =>\n                          loadDetailRoom && loadDetailRoom(data.id)\n                        }\n                      >\n                        <i className=\"far fa-calendar-check ml-3\"></i>\n                        {' Seleccionar'}\n                      </button>\n                    </Link>\n                  )\n                )}\n              </div>\n              <div className=\"col-12 col-md-12\">\n                <h4>\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\n                </h4>\n              </div>\n              <div className=\"col-12 col-md-12 d-flex\">\n                <CustomField\n                  label={'Inicio'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_from}\n                />\n\n                <CustomField\n                  label={'-  Fin'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_until}\n                />\n              </div>\n            </div>\n            <p className=\"card-text\">{data.description}</p>\n            {selectedRoom && selectedRoom !== -1 && (\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\n                <p className=\"card-text\">{data.hotel.description}</p>\n                <CustomField\n                  label={'Dirección'}\n                  icon=\"fa-map-marked-alt\"\n                  valueText={`${data.hotel.address}`}\n                />\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Camas'}\n                  icon=\"fa-bed\"\n                  valueText={`${data.capacity}`}\n                />\n\n                <CustomField\n                  label={'Aire'}\n                  icon=\"fa-wind\"\n                  value={data.ac === 'Y'}\n                />\n\n                <CustomField\n                  label={'Wifi'}\n                  icon=\"fa-wifi\"\n                  value={data.wifi === 'Y'}\n                />\n              </div>\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Parqueadero'}\n                  icon=\"fa-car\"\n                  value={data.parking === 'Y'}\n                />\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\n\n                {selectedRoom && selectedRoom !== -1 && (\n                  <StarScore score={data.hotel.stars} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardInformation.propTypes = {\n  data: PropTypes.shape(roomShape).isRequired,\n  selectedRoom: PropTypes.number,\n  loadDetailRoom: PropTypes.func,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IModalFormBookProps {\n  /**\n   * Información de la reserva a registrar\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Información de la habitación\n   */\n  dataRoom: IRoom;\n}\n\nconst initialValues = {\n  name: '',\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\n  name: Yup.string()\n    .min(2, 'Nombre muy corto')\n    .max(50, 'Nombre muy largo')\n    .required('Nacesitamos tu nombre'),\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n});\n\n/**\n * Componente encargado de renderizar el modal con el formulario de reservación\n * de la habitación\n * @param param0\n * @returns\n */\nconst ModalFormBook: React.FC<IModalFormBookProps> = ({\n  saveBookingRoom,\n  dataRoom,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormBooking,\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\n  ) => {\n    saveBookingRoom &&\n      saveBookingRoom({\n        bookData: {\n          name: values.name,\n          email: values.email,\n          identification_type: values.identification_type,\n          identification: values.identification,\n        },\n        roomData: dataRoom,\n      });\n    hideModal();\n    resetForm();\n  };\n\n  const hideModal = () => {\n    $('#modalFormBook').modal('hide');\n  };\n  return (\n    <>\n      <div data-testid=\"modal-form-book\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-book w-100\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#modalFormBook\"\n        >\n          <i className=\"far fa-calendar-check ml-3\"></i>\n          {' Reservar'}\n        </button>\n\n        <div\n          className=\"modal fade\"\n          id=\"modalFormBook\"\n          aria-labelledby=\"modalFormBookLabel\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\n                  Completa tu reserva\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                >\n                  {({ errors, touched }) => (\n                    <Form>\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Nombre\n                          </label>\n                          <Field\n                            name=\"name\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: Joe Doe\"\n                          />\n                          {errors.name && touched.name ? (\n                            <small className=\"text-danger\">{errors.name}</small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Correo electrónico\n                          </label>\n                          <Field\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: joe@email.com\"\n                          />\n                          {errors.email && touched.email ? (\n                            <small className=\"text-danger\">\n                              {errors.email}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-2\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\n                            Tipo de identificación\n                          </label>\n                          <Field\n                            as=\"select\"\n                            className=\" d-block w-100\"\n                            aria-label=\".form-select-sm example\"\n                            id=\"identification_type\"\n                            name=\"identification_type\"\n                          >\n                            <option value=\"\">Seleccione</option>\n                            <option value=\"1\">Cédula de ciudadanía</option>\n                            <option value=\"2\">Cédula de extranjeria</option>\n                            <option value=\"3\">Nit</option>\n                            <option value=\"4\">Pasaporte</option>\n                          </Field>\n                          {errors.identification_type &&\n                          touched.identification_type ? (\n                            <small className=\"text-danger\">\n                              {errors.identification_type}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label className=\"pr-2\" htmlFor=\"identification\">\n                            Identificación\n                          </label>\n                          <Field\n                            name=\"identification\"\n                            className=\"form-control\"\n                            placeholder=\"eje: 60830147\"\n                          />\n                          {errors.identification && touched.identification ? (\n                            <small className=\"text-danger\">\n                              {errors.identification}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                        >\n                          Cancelar\n                        </button>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                          Finalizar\n                        </button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalFormBook.propTypes = {\n  dataRoom: PropTypes.shape(roomShape).isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IStarScoreProps {\n  /**\n   * Cantidad de estrellas del hotel\n   */\n  score: number;\n}\n\n/**\n * Componente encargado de renderizar estrellas según el nivel del hotel\n */\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\n  const arrStar = new Array(score);\n  arrStar.fill('star', 0);\n  return (\n    <>\n      <div data-testid=\"star-score\">\n        {score &&\n          arrStar.map((data, index) => (\n            <i key={index} className=\"fas fa-star\"></i>\n          ))}\n      </div>\n    </>\n  );\n};\n\nStarScore.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: #ffea00;\n  border-radius: 10px;\n  color: #000;\n  height: auto;\n  font-weight: 700;\n  text-align: center;\n  &[disabled] {\n    opacity: 0.3;\n  }\n`;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {\n  IBooking,\n  IFieldsFormFindBooking,\n} from 'app/feature/Book/models/Booking';\n\nimport { axiosIntance } from '../config/AxiosConfig';\n\n/**\n * Función encargada de armar los filtros en la búsqueda de la reserva\n * @param filterData\n * @returns cadena filtro\n */\nconst getFilterBook = (filterData: IFieldsFormFindBooking) => {\n  let filterBy = '';\n\n  if (\n    filterData &&\n    filterData.email !== '' &&\n    filterData.identification_type !== '' &&\n    filterData.identification !== ''\n  ) {\n    filterBy = `?bookData.email=${filterData.email}&bookData.identification_type=${filterData.identification_type}&bookData.identification=${filterData.identification}`;\n  }\n\n  return filterBy;\n};\n\nconst headers = {\n  'Content-Type': 'application/json',\n};\n\nexport const BookingsRepository = {\n  /**\n   * Almacena una reservación en base de datos\n   * @param bookingData datos de la reserva\n   * @returns mensaje de éxito\n   */\n  saveBookingRoom: (bookingData: IBooking) =>\n    axiosIntance.post('/booking', bookingData, {\n      headers: headers,\n    }),\n  /**\n   * Consulta una reservación hecha\n   * @returns arreglo de reservaciones\n   */\n  findBooking: (findBookingData: IFieldsFormFindBooking) =>\n    axiosIntance.get(`/booking${getFilterBook(findBookingData)}`),\n  /**\n   * Elimina una reservación\n   * @param bookingId Identificador de la reserva\n   * @returns reserva eliminada\n   */\n  cancelBooking: (bookingId: number) =>\n    axiosIntance.delete(`/booking/${bookingId}`),\n};\n","import { BookingsRepository } from 'app/core/api/bookings.repository';\n\nimport {\n  IBooking,\n  IFieldsFormFindBooking,\n} from '../../../../feature/Book/models/Booking';\nimport {\n  BOOKING_DELETED,\n  BOOKING_FINDED,\n  BOOKING_ROOM_SAVED,\n  BOOKING_SELECTED_DELETE,\n  DEFAULT_STATE,\n  IActionTypesBookings,\n} from './ActionTypesBookings';\n\nexport function defaultState(id: number): IActionTypesBookings {\n  return {\n    type: DEFAULT_STATE,\n    payload: id,\n  };\n}\n\nexport function bookingRoomSaved(roomId: number): IActionTypesBookings {\n  return {\n    type: BOOKING_ROOM_SAVED,\n    payload: roomId,\n  };\n}\n\nexport function bookingFinded(\n  bookingsFinded: IBooking[]\n): IActionTypesBookings {\n  return {\n    type: BOOKING_FINDED,\n    payload: bookingsFinded,\n  };\n}\n\nexport function selectedDeleteId(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_SELECTED_DELETE,\n    payload: responseCode,\n  };\n}\n\nexport function bookingDeleted(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_DELETED,\n    payload: responseCode,\n  };\n}\n\nexport function saveBookingRoom(bookingData: IBooking) {\n  return function (dispacth: any) {\n    BookingsRepository.saveBookingRoom(bookingData).then((response: any) => {\n      return dispacth(bookingRoomSaved(response.data.id));\n    });\n  };\n}\n\nexport function findBooking(findBookingData: IFieldsFormFindBooking) {\n  return function (dispacth: any) {\n    BookingsRepository.findBooking(findBookingData).then((response: any) => {\n      return dispacth(bookingFinded(response.data));\n    });\n  };\n}\n\nexport function cancelBooking(bookingId: number) {\n  return function (dispacth: any) {\n    dispacth(selectedDeleteId(bookingId));\n    BookingsRepository.cancelBooking(bookingId)\n      .then((response) => {\n        return dispacth(bookingDeleted(0));\n      })\n      .catch((err) => {\n        return dispacth(bookingDeleted(1));\n      });\n  };\n}\n"],"sourceRoot":""}