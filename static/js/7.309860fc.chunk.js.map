{"version":3,"sources":["app/feature/Rooms/components/roomDetail/index.tsx","app/feature/Rooms/containers/RoomDetail/styles.ts","app/feature/Rooms/hoc/ManageDetail.tsx","app/feature/Rooms/containers/RoomDetail/index.tsx","app/feature/Rooms/pages/DetailPage.tsx","app/core/config/AxiosConfig.ts","app/shared/components/Loading/index.tsx","assets/img/loading.gif","app/shared/components/Layout/styles.ts","app/shared/components/Layout/index.tsx","app/shared/components/CustomFieldIcon/index.tsx","app/shared/components/CardInformation/index.tsx","app/core/api/bookings.repository.ts","app/core/redux/actions/bookings/ActionBookings.ts"],"names":["RoomDetailView","listRooms","selectedRoom","saveBookingRoom","isLoading","roomSelected","filter","item","id","Loading","className","data-testid","CardInformation","key","data","Link","to","type","onClick","DivContainer","styled","div","ManageDetail","connect","state","rooms","selectedRoomId","main","DetailPage","Layout","title","description","displayName","baseUrl","src","Spinner","alt","module","exports","children","Helmet","name","content","CustomField","label","icon","value","valueText","valueParse","undefined","loadDetailRoom","hotel","score","image","width","height","data-bs-toggle","data-bs-target","dataRoom","available_from","available_until","address","capacity","ac","wifi","parking","stars","initialValues","email","identification_type","identification","validationSchema","Yup","shape","min","max","required","ModalFormBook","hideModal","$","modal","aria-labelledby","data-bs-dismiss","aria-label","onSubmit","values","resetForm","bookData","roomData","errors","touched","htmlFor","placeholder","as","StarScore","arrStar","Array","fill","map","index","headers","BookingsRepository","bookingData","axios","post","findBookingData","get","filterData","filterBy","getFilterBook","bookingId","delete","bookingRoomSaved","roomId","BOOKING_ROOM_SAVED","payload","bookingFinded","bookingsFinded","BOOKING_FINDED","bookingDeleted","responseCode","BOOKING_DELETED","loading","IS_LOADING","setError","error","ERROR","dispacth","a","then","response","catch","err","findBooking","message","cancelBooking","BOOKING_SELECTED_DELETE"],"mappings":"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","file":"static/js/7.309860fc.chunk.js","sourcesContent":["import { CardInformation } from 'app/shared/components/CardInformation';\nimport { Link } from 'app/shared/components/Link';\nimport Loading from 'app/shared/components/Loading';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IBooking } from '../../../Book/models/Booking';\nimport { IRoom } from '../../models/Room';\n\nexport interface IRoomDetailViewProps {\n  /**\n   * Lista de habitaciones\n   */\n  listRooms: Array<IRoom>;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  selectedRoom: number;\n  /**\n   * Función encargada de registrar la reservación\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Indica si se está o no cargando el recurso\n   */\n  isLoading: boolean;\n}\n\nexport const RoomDetailView: React.FC<IRoomDetailViewProps> = ({\n  listRooms,\n  selectedRoom,\n  saveBookingRoom,\n  isLoading,\n}) => {\n  const roomSelected = listRooms.filter((item) => item.id === selectedRoom)[0];\n  return (\n    <>\n      {isLoading && <Loading />}\n      <div className=\"card card-detail-screen\">\n        <div className=\"mt-3 ml-3 text-center\">\n          <h3>Detalle de habitación</h3>\n        </div>\n        <div data-testid=\"room-detail-view\" className=\"card-rooms\">\n          <div className=\"row pt-5\">\n            <div className=\"col\">\n              {roomSelected ? (\n                <CardInformation\n                  key={selectedRoom}\n                  data={roomSelected}\n                  selectedRoom={selectedRoom}\n                  saveBookingRoom={saveBookingRoom}\n                />\n              ) : (\n                <div className=\"text-center\">\n                  <h5>No hay datos para mostrar</h5>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"w-50 d-block p-4\">\n          <Link to={'/rooms'}>\n            <button\n              type=\"button\"\n              id=\"btn-back-detail\"\n              className=\"btn btn-secondary w-25 ml-4\"\n              data-testid=\"btn-back-detail\"\n              onClick={() => null}\n            >\n              <i className=\"fas fa-arrow-left\"></i>\n              {' Atras'}\n            </button>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nRoomDetailView.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  selectedRoom: PropTypes.number.isRequired,\n  saveBookingRoom: PropTypes.func,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n","import { saveBookingRoom } from 'app/core/redux/actions/bookings/ActionBookings';\nimport { Istate } from 'app/core/redux/modelo/GeneralState';\nimport { connect } from 'react-redux';\n\nimport { RoomDetail } from '../containers/RoomDetail';\n\nconst mapStateToProps = (state: Istate) => {\n  return {\n    listRooms: state.rooms.listRooms,\n    selectedRoom: state.rooms.selectedRoomId,\n    isLoading: state.main.isLoading,\n  };\n};\n\nexport const ManageDetail = connect(mapStateToProps, { saveBookingRoom })(\n  RoomDetail\n);\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { IBooking } from '../../../Book/models/Booking';\nimport { RoomDetailView } from '../../components/roomDetail';\nimport { IRoom } from '../../models/Room';\nimport { DivContainer } from './styles';\n\ninterface IRoomsDetailProps {\n  listRooms: Array<IRoom>;\n  selectedRoom: number;\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  isLoading: boolean;\n}\n\nexport const RoomDetail: React.FC<IRoomsDetailProps> = ({\n  listRooms,\n  selectedRoom,\n  saveBookingRoom,\n  isLoading,\n}) => {\n  return (\n    <DivContainer data-testid=\"room-detail\">\n      <RoomDetailView\n        listRooms={listRooms}\n        selectedRoom={selectedRoom}\n        saveBookingRoom={saveBookingRoom}\n        isLoading={isLoading}\n      />\n    </DivContainer>\n  );\n};\n\nRoomDetail.propTypes = {\n  listRooms: PropTypes.array.isRequired,\n  selectedRoom: PropTypes.number.isRequired,\n  saveBookingRoom: PropTypes.func,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import { Layout } from 'app/shared/components/Layout';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ManageDetail } from '../hoc/ManageDetail';\n\nconst DetailPage: React.FC<RouteComponentProps> = () => {\n  return (\n    <Layout\n      title=\"Detalle de habitación\"\n      description=\"Detalles de tu habitación\"\n    >\n      <ManageDetail />\n    </Layout>\n  );\n};\n\nDetailPage.displayName = 'DetailRoomPage';\n\nexport default DetailPage;\n","export const baseUrl = 'http://find-hotels-json-server.herokuapp.com'; // process.env.REACT_APP_URL_BASE,\n","import * as React from 'react';\n\nimport Spinner from '../../../../assets/img/loading.gif';\n\n/**\n * Componente encargado de renderizar el spinner de carga\n */\nconst Loading = () => {\n  return (\n    <>\n      <div data-testid=\"view-spinner\" className=\"container-loader\">\n        <img\n          data-testid=\"view-spinner-loader\"\n          src={Spinner}\n          alt=\"loading\"\n          className=\"img-loader\"\n        />\n      </div>\n    </>\n  );\n};\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/loading.890fa681.gif\";","import styled from 'styled-components';\n\nexport const DivContainer = styled.div`\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { DivContainer } from './styles';\n\ninterface ILayoutProps {\n  title: string;\n  description: string;\n}\n\nexport const Layout: React.FC<ILayoutProps> = ({\n  children,\n  title,\n  description,\n}) => {\n  return (\n    <>\n      <Helmet>\n        {\n          // eslint-disable-next-line\n          title && <title>Find hotel | {title}</title>\n        }\n        {description && <meta name=\"description\" content={description} />}\n      </Helmet>\n      <DivContainer data-testid=\"layout\">{children}</DivContainer>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  //@ts-ignore\n  children: PropTypes.node.isRequired,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\ninterface ICustomFieldProps {\n  /**\n   * Título del campo\n   */\n  label: string;\n  /**\n   * Icono a mostrar\n   */\n  icon: string;\n  /**\n   * Indica si cuenta o no con la propiedad\n   */\n  value?: boolean;\n  /**\n   * Valor de la propiedad en texto\n   */\n  valueText?: string;\n}\n\n/**\n * Componente encargado de renderizar cada item de la card con su respectivo icono y valor\n * @param param0\n * @returns Sección con item y valor de la habitación\n */\nexport const CustomField: React.FC<ICustomFieldProps> = ({\n  label,\n  icon,\n  value,\n  valueText,\n}) => {\n  const valueParse = value !== undefined && value === true;\n  return (\n    <>\n      <h6 data-testid=\"custom-field\" className=\"font-weight-bold\">\n        {label} <i className={`fas ${icon}`}></i> :{' '}\n        {valueText && valueText !== '' ? (\n          <span data-testid=\"custom-field-value-text\">{valueText}</span>\n        ) : (\n          <i\n            className={`fas fa-${valueParse ? 'check' : 'times'}`}\n            data-testid={`custom-field-value-${valueParse ? 'true' : 'false'}`}\n          ></i>\n        )}\n      </h6>\n    </>\n  );\n};\n\nCustomField.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  valueText: PropTypes.string,\n};\n","import { Field, Form, Formik } from 'formik';\nimport { FormikHelpers } from 'formik/dist/types';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as Yup from 'yup';\n\nimport {\n  IBooking,\n  IFieldsFormBooking,\n} from '../../../feature/Book/models/Booking';\nimport { IRoom } from '../../../feature/Rooms/models/Room';\nimport { CustomField } from '../CustomFieldIcon';\nimport { Link } from '../Link';\nimport { roomShape } from './model';\n\ninterface ICardInformationProps {\n  /**\n   * Información de cada habitación\n   */\n  data: IRoom;\n  /**\n   * Identificador de la habitación seleccionada (existe cuando se visualiza como detalle)\n   */\n  selectedRoom?: number;\n  /**\n   * Función necargada de mostrar el detalle de la habitación\n   */\n  loadDetailRoom?: (roomId: number) => void;\n  /**\n   * Función encargada de registrar la reservación (existe cuando se visualiza como detalle)\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n}\n\n/**\n * Componente encargado de renderizar Card con información de la habitación\n * @param param0\n * @returns\n */\nexport const CardInformation: React.FC<ICardInformationProps> = ({\n  data,\n  loadDetailRoom,\n  selectedRoom,\n  saveBookingRoom,\n}) => {\n  return (\n    <div data-testid=\"card-information\" className=\"card room-item\">\n      <div className=\"card-header room-item-header \">\n        <h3>{data.hotel.name}</h3>\n        <h4>{data.hotel.score}</h4>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col col-md-4\">\n            <img\n              src={data.image}\n              className=\"img-fluid\"\n              alt=\"hotel room\"\n              width=\"260px\"\n              height=\"180px\"\n            />\n          </div>\n          <div className=\"col col-md-8\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-8\">\n                <h5 className=\"card-title\">{data.title}</h5>\n              </div>\n              <div className=\"col-12 col-lg-4\">\n                {saveBookingRoom && selectedRoom && selectedRoom !== -1 ? (\n                  <>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary btn-book w-100\"\n                      data-testid=\"form-detail-button-book\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#modalFormBook\"\n                      id=\"form-detail-button\"\n                    >\n                      <i className=\"far fa-calendar-check ml-3\"></i>\n                      {' Reservar'}\n                    </button>\n                    <ModalFormBook\n                      saveBookingRoom={saveBookingRoom}\n                      dataRoom={data}\n                    />\n                  </>\n                ) : (\n                  loadDetailRoom && (\n                    <Link to={'/rooms/detail'}>\n                      <button\n                        type=\"button\"\n                        id=\"btn-select-detail\"\n                        className=\"btn btn-primary btn-book w-100\"\n                        data-testid=\"form-button-load-detail\"\n                        onClick={() =>\n                          loadDetailRoom && loadDetailRoom(data.id)\n                        }\n                      >\n                        <i className=\"far fa-calendar-check ml-3\"></i>\n                        {' Seleccionar'}\n                      </button>\n                    </Link>\n                  )\n                )}\n              </div>\n              <div className=\"col-12 col-md-12\">\n                <h4>\n                  <i className=\"far fa-money-bill-alt\"></i> {data.value}\n                </h4>\n              </div>\n              <div className=\"col-12 col-md-12 d-flex\">\n                <CustomField\n                  label={'Inicio'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_from}\n                />\n\n                <CustomField\n                  label={'-  Fin'}\n                  icon=\"fa-calendar-alt\"\n                  valueText={data.available_until}\n                />\n              </div>\n            </div>\n            <p className=\"card-text\">{data.description}</p>\n            {selectedRoom && selectedRoom !== -1 && (\n              <div className=\"mb-3\" data-testid=\"form-field-hotel-desc\">\n                <p className=\"card-text\">{data.hotel.description}</p>\n                <CustomField\n                  label={'Dirección'}\n                  icon=\"fa-map-marked-alt\"\n                  valueText={`${data.hotel.address}`}\n                />\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Camas'}\n                  icon=\"fa-bed\"\n                  valueText={`${data.capacity}`}\n                />\n\n                <CustomField\n                  label={'Aire'}\n                  icon=\"fa-wind\"\n                  value={data.ac === 'Y'}\n                />\n\n                <CustomField\n                  label={'Wifi'}\n                  icon=\"fa-wifi\"\n                  value={data.wifi === 'Y'}\n                />\n              </div>\n              <div className=\"col col-md-6\">\n                <CustomField\n                  label={'Parqueadero'}\n                  icon=\"fa-car\"\n                  value={data.parking === 'Y'}\n                />\n                <CustomField label={'Baños'} icon=\"fa-restroom\" value={true} />\n\n                {selectedRoom && selectedRoom !== -1 && (\n                  <StarScore score={data.hotel.stars} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCardInformation.propTypes = {\n  data: PropTypes.shape(roomShape).isRequired,\n  selectedRoom: PropTypes.number,\n  loadDetailRoom: PropTypes.func,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IModalFormBookProps {\n  /**\n   * Información de la reserva a registrar\n   */\n  saveBookingRoom?: (bookingData: IBooking) => void;\n  /**\n   * Información de la habitación\n   */\n  dataRoom: IRoom;\n}\n\nconst initialValues = {\n  name: '',\n  email: '',\n  identification_type: '',\n  identification: '',\n};\n\nconst validationSchema = Yup.object().shape<IFieldsFormBooking>({\n  name: Yup.string()\n    .min(2, 'Nombre muy corto')\n    .max(50, 'Nombre muy largo')\n    .required('Nacesitamos tu nombre'),\n  email: Yup.string().email('Email no válido').required('Necesitamos tu email'),\n  identification_type: Yup.string().required(\n    'Necesitamos tu tipo de identificación'\n  ),\n  identification: Yup.string().required('Necesitamos tu identificación'),\n});\n\n/**\n * Componente encargado de renderizar el modal con el formulario de reservación\n * de la habitación\n * @param param0\n * @returns\n */\nexport const ModalFormBook: React.FC<IModalFormBookProps> = ({\n  saveBookingRoom,\n  dataRoom,\n}) => {\n  const handleSubmit = (\n    values: IFieldsFormBooking,\n    { resetForm }: FormikHelpers<IFieldsFormBooking>\n  ) => {\n    saveBookingRoom &&\n      saveBookingRoom({\n        bookData: {\n          name: values.name,\n          email: values.email,\n          identification_type: values.identification_type,\n          identification: values.identification,\n        },\n        roomData: dataRoom,\n      });\n    hideModal();\n    resetForm();\n  };\n\n  const hideModal = () => {\n    $('#modalFormBook').modal('hide');\n  };\n  return (\n    <>\n      <div data-testid=\"modal-form-book\">\n        <div\n          className=\"modal fade\"\n          id=\"modalFormBook\"\n          aria-labelledby=\"modalFormBookLabel\"\n          data-testid=\"modal-book\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"modalFormBookLabel\">\n                  Completa tu reserva\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n              <div className=\"modal-body\">\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                >\n                  {({ errors, touched }) => (\n                    <Form data-testid=\"modal-book-form\" id=\"form-modal-book\">\n                      <div className=\"row mb-3\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label\n                            htmlFor=\"name\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Nombre\n                          </label>\n                          <Field\n                            name=\"name\"\n                            className=\"form-control col-12\"\n                            placeholder=\"eje: Joe Doe\"\n                            data-testid=\"modal-book-form-name\"\n                            id=\"book-form-name\"\n                          />\n                          {errors.name && touched.name ? (\n                            <small className=\"text-danger\">{errors.name}</small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label\n                            htmlFor=\"email\"\n                            className=\"col-12 col-form-label\"\n                          >\n                            Correo electrónico\n                          </label>\n                          <Field\n                            name=\"email\"\n                            type=\"email\"\n                            className=\"form-control col-12\"\n                            data-testid=\"modal-book-form-email\"\n                            placeholder=\"eje: joe@email.com\"\n                            id=\"book-form-email\"\n                          />\n                          {errors.email && touched.email ? (\n                            <small className=\"text-danger\">\n                              {errors.email}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n                      <div className=\"row mb-2\">\n                        <div className=\"col-12 col-md-6 \">\n                          <label className=\"pr-2\" htmlFor=\"identification_type\">\n                            Tipo de identificación\n                          </label>\n                          <Field\n                            as=\"select\"\n                            className=\" d-block w-100\"\n                            aria-label=\".form-select-sm example\"\n                            name=\"identification_type\"\n                            data-testid=\"modal-book-form-identification-type\"\n                            id=\"book-form-select\"\n                          >\n                            <option value=\"\">Seleccione</option>\n                            <option value=\"1\">Cédula de ciudadanía</option>\n                            <option value=\"2\">Cédula de extranjeria</option>\n                            <option value=\"3\">Nit</option>\n                            <option value=\"4\">Pasaporte</option>\n                          </Field>\n                          {errors.identification_type &&\n                          touched.identification_type ? (\n                            <small className=\"text-danger\">\n                              {errors.identification_type}\n                            </small>\n                          ) : null}\n                        </div>\n                        <div className=\" col-12 col-md-6\">\n                          <label className=\"pr-2\" htmlFor=\"identification\">\n                            Identificación\n                          </label>\n                          <Field\n                            name=\"identification\"\n                            className=\"form-control\"\n                            placeholder=\"eje: 60830147\"\n                            data-testid=\"modal-book-form-identification\"\n                            id=\"book-form-identification\"\n                          />\n                          {errors.identification && touched.identification ? (\n                            <small className=\"text-danger\">\n                              {errors.identification}\n                            </small>\n                          ) : null}\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                          data-testid=\"modal-book-form-btn-cancel\"\n                          id=\"modal-form-btn-cancel\"\n                        >\n                          Cancelar\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-primary\"\n                          data-testid=\"modal-book-form-btn-submit\"\n                          id=\"modal-form-btn-submit\"\n                        >\n                          Finalizar\n                        </button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalFormBook.propTypes = {\n  dataRoom: PropTypes.shape(roomShape).isRequired,\n  saveBookingRoom: PropTypes.func,\n};\n\ninterface IStarScoreProps {\n  /**\n   * Cantidad de estrellas del hotel\n   */\n  score: number;\n}\n\n/**\n * Componente encargado de renderizar estrellas según el nivel del hotel\n */\nconst StarScore: React.FC<IStarScoreProps> = ({ score }) => {\n  const arrStar = new Array(score);\n  arrStar.fill('star', 0);\n  return (\n    <>\n      <div data-testid=\"star-score\">\n        {score &&\n          arrStar.map((data, index) => (\n            <i key={index} className=\"fas fa-star\"></i>\n          ))}\n      </div>\n    </>\n  );\n};\n\nStarScore.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n","import {\n  IBooking,\n  IFieldsFormFindBooking,\n} from 'app/feature/Book/models/Booking';\nimport axios from 'axios';\n\nimport { baseUrl } from '../config/AxiosConfig';\n\n/**\n * Función encargada de armar los filtros en la búsqueda de la reserva\n * @param filterData\n * @returns cadena filtro\n */\nconst getFilterBook = (filterData: IFieldsFormFindBooking) => {\n  let filterBy = '';\n\n  if (\n    filterData &&\n    filterData.email !== '' &&\n    filterData.identification_type !== '' &&\n    filterData.identification !== ''\n  ) {\n    filterBy = `?bookData.email=${filterData.email}&bookData.identification_type=${filterData.identification_type}&bookData.identification=${filterData.identification}`;\n  }\n\n  return filterBy;\n};\n\nconst headers = {\n  'Content-Type': 'application/json',\n};\n\nexport const BookingsRepository = {\n  /**\n   * Almacena una reservación en base de datos\n   * @param bookingData datos de la reserva\n   * @returns mensaje de éxito\n   */\n  saveBookingRoom: (bookingData: IBooking) =>\n    axios.post(`${baseUrl}/booking`, bookingData, {\n      headers: headers,\n    }),\n  /**\n   * Consulta una reservación hecha\n   * @returns arreglo de reservaciones\n   */\n  findBooking: (findBookingData: IFieldsFormFindBooking) =>\n    axios.get(`${baseUrl}/booking${getFilterBook(findBookingData)}`),\n  /**\n   * Elimina una reservación\n   * @param bookingId Identificador de la reserva\n   * @returns reserva eliminada\n   */\n  cancelBooking: (bookingId: number) =>\n    axios.delete(`${baseUrl}/booking/${bookingId}`),\n};\n","import { BookingsRepository } from 'app/core/api/bookings.repository';\n\nimport {\n  IBooking,\n  IFieldsFormFindBooking,\n} from '../../../../feature/Book/models/Booking';\nimport { IErrorToast } from '../../modelo/IStateMain';\nimport { ERROR, IActionTypesMain, IS_LOADING } from '../main/ActionTypesMain';\nimport {\n  BOOKING_DELETED,\n  BOOKING_FINDED,\n  BOOKING_ROOM_SAVED,\n  BOOKING_SELECTED_DELETE,\n  DEFAULT_STATE,\n  IActionTypesBookings,\n} from './ActionTypesBookings';\n\nexport function defaultState(id: number): IActionTypesBookings {\n  return {\n    type: DEFAULT_STATE,\n    payload: id,\n  };\n}\n\nexport function bookingRoomSaved(roomId: number): IActionTypesBookings {\n  return {\n    type: BOOKING_ROOM_SAVED,\n    payload: roomId,\n  };\n}\n\nexport function bookingFinded(\n  bookingsFinded: IBooking[]\n): IActionTypesBookings {\n  return {\n    type: BOOKING_FINDED,\n    payload: bookingsFinded,\n  };\n}\n\nexport function selectedDeleteId(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_SELECTED_DELETE,\n    payload: responseCode,\n  };\n}\n\nexport function bookingDeleted(responseCode: number): IActionTypesBookings {\n  return {\n    type: BOOKING_DELETED,\n    payload: responseCode,\n  };\n}\n\nexport function isLoading(loading: boolean): IActionTypesMain {\n  return {\n    type: IS_LOADING,\n    payload: loading,\n  };\n}\n\nexport function setError(error: IErrorToast): IActionTypesMain {\n  return {\n    type: ERROR,\n    payload: error,\n  };\n}\n\nexport function saveBookingRoom(bookingData: IBooking) {\n  return async function (dispacth: any) {\n    dispacth(isLoading(true));\n    await BookingsRepository.saveBookingRoom(bookingData)\n      .then((response: any) => {\n        dispacth(isLoading(false));\n        return dispacth(bookingRoomSaved(response.data.id));\n      })\n      .catch((err) => {\n        dispacth(isLoading(false));\n        return dispacth(bookingRoomSaved(-1));\n      });\n  };\n}\n\nexport function findBooking(findBookingData: IFieldsFormFindBooking) {\n  return async function (dispacth: any) {\n    dispacth(isLoading(true));\n    await BookingsRepository.findBooking(findBookingData)\n      .then((response: any) => {\n        dispacth(isLoading(false));\n        return dispacth(bookingFinded(response.data));\n      })\n      .catch((err) => {\n        dispacth(isLoading(false));\n        dispacth(\n          setError({\n            type: 'books',\n            message:\n              'Se ha presentado un error al cargar las reservas. Por favor, intente nuevamente',\n          })\n        );\n        return dispacth(bookingFinded([]));\n      });\n  };\n}\n\nexport function cancelBooking(bookingId: number) {\n  return async function (dispacth: any) {\n    dispacth(isLoading(true));\n    dispacth(selectedDeleteId(bookingId));\n    await BookingsRepository.cancelBooking(bookingId)\n      .then((response) => {\n        dispacth(isLoading(false));\n        return dispacth(bookingDeleted(0));\n      })\n      .catch((err) => {\n        dispacth(isLoading(false));\n        dispacth(\n          setError({\n            type: 'books',\n            message:\n              'Se ha presentado un error al cancelar la reserva. Por favor, intente nuevamente',\n          })\n        );\n        return dispacth(bookingDeleted(1));\n      });\n  };\n}\n"],"sourceRoot":""}